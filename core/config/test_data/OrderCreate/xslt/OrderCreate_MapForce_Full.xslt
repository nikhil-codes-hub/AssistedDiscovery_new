<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2023

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:vmf="http://www.altova.com/MapForce/UDF/vmf" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="vmf xs">
	<xsl:template name="vmf:vmf1_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='P'">
				<xsl:value-of select="'VPT'"/>
			</xsl:when>
			<xsl:when test="$input='PT'">
				<xsl:value-of select="'VPT'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="''"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf2_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='V'">
				<xsl:value-of select="'VVI'"/>
			</xsl:when>
			<xsl:when test="$input='R'">
				<xsl:value-of select="'VAEA'"/>
			</xsl:when>
			<xsl:when test="$input='K'">
				<xsl:value-of select="'VCR'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="''"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf3_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='email'">
				<xsl:value-of select="'Voperational'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="''"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="vmf:vmf4_inputtoresult">
		<xsl:param name="input" select="/.."/>
		<xsl:choose>
			<xsl:when test="$input='mobile'">
				<xsl:value-of select="'Voperational'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="''"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var1_initial" select="."/>
		<OrderCreateRQ xmlns:ns0="http://ndc.farelogix.com/aug">
			<xsl:attribute name="xsi:noNamespaceSchemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">file:///C:/NDCX/REPO/bac_grammar/NDCX/FLX/xsd/OrderCreateRQ.xsd</xsl:attribute>
			<xsl:for-each select="Request">
				<xsl:variable name="var2_cur" select="."/>
				<xsl:attribute name="Version">17.2</xsl:attribute>
			</xsl:for-each>
			<xsl:for-each select="Request/Context/correlationID">
				<xsl:variable name="var3_cur" select="."/>
				<xsl:attribute name="CorrelationID">
					<xsl:value-of select="."/>
				</xsl:attribute>
			</xsl:for-each>
			<xsl:for-each select="Request">
				<xsl:variable name="var4_cur" select="."/>
				<PointOfSale>
					<Location>
						<CountryCode>
							<xsl:value-of select="'FR'"/>
						</CountryCode>
						<CityCode>
							<xsl:value-of select="'NCE'"/>
						</CityCode>
					</Location>
				</PointOfSale>
				<Document>
					<xsl:attribute name="id">document</xsl:attribute>
				</Document>
				<Party>
					<Sender>
						<TravelAgencySender>
							<Name>
								<xsl:value-of select="TravelAgency/Name"/>
							</Name>
							<xsl:for-each select="TravelAgency/Contact">
								<xsl:variable name="var5_cur" select="."/>
								<Contacts>
									<Contact>
										<xsl:for-each select="Address">
											<xsl:variable name="var6_cur" select="."/>
											<AddressContact>
												<xsl:for-each select="line">
													<xsl:variable name="var7_cur" select="."/>
													<Street>
														<xsl:value-of select="."/>
													</Street>
												</xsl:for-each>
												<xsl:for-each select="CityName">
													<xsl:variable name="var8_cur" select="."/>
													<CityName>
														<xsl:value-of select="."/>
													</CityName>
												</xsl:for-each>
												<xsl:for-each select="Zip">
													<xsl:variable name="var9_cur" select="."/>
													<PostalCode>
														<xsl:value-of select="."/>
													</PostalCode>
												</xsl:for-each>
												<xsl:for-each select="CountryCode">
													<xsl:variable name="var10_cur" select="."/>
													<CountryCode>
														<xsl:value-of select="."/>
													</CountryCode>
												</xsl:for-each>
											</AddressContact>
										</xsl:for-each>
										<xsl:for-each select="Email">
											<xsl:variable name="var11_cur" select="."/>
											<EmailContact>
												<xsl:for-each select="EmailAddress">
													<xsl:variable name="var12_cur" select="."/>
													<Address>
														<xsl:value-of select="."/>
													</Address>
												</xsl:for-each>
											</EmailContact>
										</xsl:for-each>
										<xsl:for-each select="Phone">
											<xsl:variable name="var13_cur" select="."/>
											<PhoneContact>
												<xsl:for-each select="PhoneNumber">
													<xsl:variable name="var14_cur" select="."/>
													<Number>
														<xsl:value-of select="translate(., concat(' `~!@#$%^&amp;*()-_=+[]{}|\:;&quot;',&quot;',./&lt;&gt;?abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;), '')"/>
													</Number>
												</xsl:for-each>
											</PhoneContact>
										</xsl:for-each>
									</Contact>
								</Contacts>
							</xsl:for-each>
							<PseudoCity>
								<xsl:value-of select="'AH9D'"/>
							</PseudoCity>
							<xsl:for-each select="TravelAgency/IATA_Number">
								<xsl:variable name="var15_cur" select="."/>
								<IATA_Number>
									<xsl:value-of select="."/>
								</IATA_Number>
							</xsl:for-each>
							<xsl:for-each select="TravelAgency/IATA_Number">
								<xsl:variable name="var16_cur" select="."/>
								<AgencyID>
									<xsl:value-of select="."/>
								</AgencyID>
							</xsl:for-each>
							<AgentUser>
								<AgentUserID>
									<xsl:value-of select="'xmluser001'"/>
								</AgentUserID>
							</AgentUser>
						</TravelAgencySender>
					</Sender>
				</Party>
				<Query>
					<Order>
						<xsl:for-each select="set">
							<xsl:variable name="var17_cur" select="."/>
							<Offer>
								<xsl:for-each select="property">
									<xsl:variable name="var18_cur" select="."/>
									<xsl:for-each select="(./value)[($var18_cur/key = 'OwnerCode')]">
										<xsl:variable name="var19_filter" select="."/>
										<xsl:attribute name="Owner">
											<xsl:value-of select="."/>
										</xsl:attribute>
									</xsl:for-each>
								</xsl:for-each>
								<xsl:for-each select="ID">
									<xsl:variable name="var20_cur" select="."/>
									<xsl:attribute name="OfferID">
										<xsl:value-of select="."/>
									</xsl:attribute>
								</xsl:for-each>
								<xsl:for-each select="property/value">
									<xsl:variable name="var21_filter" select="."/>
									<xsl:copy-of select="/.."/>
								</xsl:for-each>
								<xsl:for-each select="TID">
									<xsl:variable name="var22_cur" select="."/>
									<xsl:attribute name="ResponseID">
										<xsl:value-of select="."/>
									</xsl:attribute>
								</xsl:for-each>
								<xsl:for-each select="product">
									<xsl:variable name="var23_cur" select="."/>
									<OfferItem>
										<xsl:for-each select="ID">
											<xsl:variable name="var24_cur" select="."/>
											<xsl:attribute name="OfferItemID">
												<xsl:value-of select="."/>
											</xsl:attribute>
										</xsl:for-each>
										<xsl:for-each select="RefIDs">
											<xsl:variable name="var25_cur" select="."/>
											<PassengerRefs>
												<xsl:value-of select="."/>
											</PassengerRefs>
										</xsl:for-each>
										<xsl:for-each select="EST">
											<xsl:variable name="var26_cur" select="."/>
											<SeatSelection>
												<xsl:for-each select="Data/seatNbr">
													<xsl:variable name="var27_cur" select="."/>
													<Row>
														<xsl:value-of select="number(substring(., 1, (string-length(string(.)) - 1)))"/>
													</Row>
												</xsl:for-each>
												<xsl:for-each select="Data/seatNbr">
													<xsl:variable name="var28_cur" select="."/>
													<Column>
														<xsl:value-of select="substring(., string-length(string(.)), 1)"/>
													</Column>
												</xsl:for-each>
											</SeatSelection>
										</xsl:for-each>
									</OfferItem>
								</xsl:for-each>
							</Offer>
						</xsl:for-each>
					</Order>
					<DataLists>
						<PassengerList>
							<xsl:for-each select="actor">
								<xsl:variable name="var29_cur" select="."/>
								<Passenger>
									<xsl:for-each select="ID">
										<xsl:variable name="var30_cur" select="."/>
										<xsl:attribute name="PassengerID">
											<xsl:value-of select="."/>
										</xsl:attribute>
									</xsl:for-each>
									<xsl:for-each select="PTC">
										<xsl:variable name="var31_cur" select="."/>
										<PTC>
											<xsl:value-of select="."/>
										</PTC>
									</xsl:for-each>
									<xsl:for-each select="nationality/code">
										<xsl:variable name="var32_cur" select="."/>
										<CitizenshipCountryCode>
											<xsl:value-of select="."/>
										</CitizenshipCountryCode>
									</xsl:for-each>
									<Individual>
										<xsl:for-each select="DateOfBirth">
											<xsl:variable name="var33_cur" select="."/>
											<Birthdate>
												<xsl:value-of select="."/>
											</Birthdate>
										</xsl:for-each>
										<xsl:if test="(./Name/Type)[(. = 'Other')]">
											<Gender>
												<xsl:value-of select="'Unspecified'"/>
											</Gender>
										</xsl:if>
										<xsl:for-each select="(./Name/Type)[not((. = 'Other'))]">
											<xsl:variable name="var34_filter" select="."/>
											<Gender>
												<xsl:value-of select="."/>
											</Gender>
										</xsl:for-each>
										<xsl:for-each select="Name/Title">
											<xsl:variable name="var35_cur" select="."/>
											<NameTitle>
												<xsl:value-of select="."/>
											</NameTitle>
										</xsl:for-each>
										<xsl:for-each select="Name/FirstName">
											<xsl:variable name="var36_cur" select="."/>
											<GivenName>
												<xsl:value-of select="."/>
											</GivenName>
										</xsl:for-each>
										<xsl:for-each select="Name/LastName">
											<xsl:variable name="var37_cur" select="."/>
											<Surname>
												<xsl:value-of select="."/>
											</Surname>
										</xsl:for-each>
									</Individual>
									<xsl:for-each select="loyalty">
										<xsl:variable name="var38_cur" select="."/>
										<LoyaltyProgramAccount>
											<xsl:for-each select="companyCode">
												<xsl:variable name="var39_cur" select="."/>
												<Airline>
													<AirlineDesignator>
														<xsl:value-of select="."/>
													</AirlineDesignator>
												</Airline>
											</xsl:for-each>
											<xsl:for-each select="identifier">
												<xsl:variable name="var40_cur" select="."/>
												<AccountNumber>
													<xsl:value-of select="."/>
												</AccountNumber>
											</xsl:for-each>
										</LoyaltyProgramAccount>
									</xsl:for-each>
									<xsl:for-each select="(./docRef)[(not(taxIdentifier) and boolean(type))]">
										<xsl:variable name="var41_filter" select="."/>
										<IdentityDocument>
											<xsl:for-each select="(./node())[./self::text()]">
												<xsl:variable name="var42_filter" select="."/>
												<IdentityDocumentNumber>
													<xsl:value-of select="."/>
												</IdentityDocumentNumber>
											</xsl:for-each>
											<xsl:variable name="var43_nested">
												<xsl:for-each select="type">
													<xsl:variable name="var44_cur" select="."/>
													<xsl:variable name="var45_nested">
														<xsl:call-template name="vmf:vmf1_inputtoresult">
															<xsl:with-param name="input" select="string(.)"/>
														</xsl:call-template>
													</xsl:variable>
													<xsl:variable name="var46_nested">
														<xsl:if test="string($var45_nested)">
															<xsl:value-of select="'1'"/>
														</xsl:if>
													</xsl:variable>
													<xsl:value-of select="number(boolean(translate(normalize-space($var46_nested), ' 0', '')))"/>
												</xsl:for-each>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="boolean(translate(normalize-space($var43_nested), ' 0', ''))">
													<xsl:for-each select="type">
														<xsl:variable name="var47_cur" select="."/>
														<xsl:variable name="var48_nested">
															<xsl:call-template name="vmf:vmf1_inputtoresult">
																<xsl:with-param name="input" select="string(.)"/>
															</xsl:call-template>
														</xsl:variable>
														<xsl:if test="string($var48_nested)">
															<IdentityDocumentType>
																<xsl:variable name="var49_nested">
																	<xsl:call-template name="vmf:vmf1_inputtoresult">
																		<xsl:with-param name="input" select="string(.)"/>
																	</xsl:call-template>
																</xsl:variable>
																<xsl:value-of select="substring($var49_nested, 2)"/>
															</IdentityDocumentType>
														</xsl:if>
													</xsl:for-each>
												</xsl:when>
												<xsl:otherwise>
													<xsl:for-each select="type">
														<xsl:variable name="var50_cur" select="."/>
														<IdentityDocumentType>
															<xsl:value-of select="."/>
														</IdentityDocumentType>
													</xsl:for-each>
												</xsl:otherwise>
											</xsl:choose>
											<xsl:for-each select="issuer">
												<xsl:variable name="var51_cur" select="."/>
												<IssuingCountryCode>
													<xsl:value-of select="."/>
												</IssuingCountryCode>
											</xsl:for-each>
											<xsl:for-each select="nationality">
												<xsl:variable name="var52_cur" select="."/>
												<CitizenshipCountryCode>
													<xsl:value-of select="."/>
												</CitizenshipCountryCode>
											</xsl:for-each>
											<xsl:for-each select="issuanceDate">
												<xsl:variable name="var53_cur" select="."/>
												<IssueDate>
													<xsl:value-of select="."/>
												</IssueDate>
											</xsl:for-each>
											<xsl:for-each select="expirationDate">
												<xsl:variable name="var54_cur" select="."/>
												<ExpiryDate>
													<xsl:value-of select="."/>
												</ExpiryDate>
											</xsl:for-each>
											<xsl:for-each select="dateOfBirth">
												<xsl:variable name="var55_cur" select="."/>
												<Birthdate>
													<xsl:value-of select="."/>
												</Birthdate>
											</xsl:for-each>
											<xsl:for-each select="$var29_cur/Name/Type">
												<xsl:variable name="var56_cur" select="."/>
												<Gender>
													<xsl:value-of select="."/>
												</Gender>
											</xsl:for-each>
											<xsl:for-each select="visa">
												<xsl:variable name="var57_filter" select="."/>
												<xsl:variable name="var58_nested">
													<xsl:for-each select="visaType">
														<xsl:variable name="var59_cur" select="."/>
														<xsl:variable name="var60_nested">
															<xsl:value-of select="number(('UA' = $var4_cur/target))"/>
															<xsl:value-of select="number(('UAD' = $var4_cur/target))"/>
														</xsl:variable>
														<xsl:variable name="var61_nested">
															<xsl:value-of select="number((. = 'R'))"/>
															<xsl:value-of select="number((. = 'K'))"/>
														</xsl:variable>
														<xsl:value-of select="number((boolean(translate(normalize-space($var60_nested), ' 0', '')) and not(boolean(translate(normalize-space($var61_nested), ' 0', '')))))"/>
													</xsl:for-each>
												</xsl:variable>
												<xsl:if test="boolean(translate(normalize-space($var58_nested), ' 0', ''))">
													<Visa>
														<xsl:for-each select="visaNumber">
															<xsl:variable name="var62_cur" select="."/>
															<VisaNumber>
																<xsl:value-of select="."/>
															</VisaNumber>
														</xsl:for-each>
														<xsl:for-each select="visaType">
															<xsl:variable name="var63_cur" select="."/>
															<VisaType>
																<xsl:value-of select="."/>
															</VisaType>
														</xsl:for-each>
														<xsl:for-each select="visaHostCountryCode">
															<xsl:variable name="var64_cur" select="."/>
															<VisaHostCountryCode>
																<xsl:value-of select="."/>
															</VisaHostCountryCode>
														</xsl:for-each>
														<xsl:for-each select="enterBeforeDate">
															<xsl:variable name="var65_cur" select="."/>
															<EnterBeforeDate>
																<xsl:value-of select="."/>
															</EnterBeforeDate>
														</xsl:for-each>
														<xsl:for-each select="durationOfStay">
															<xsl:variable name="var66_cur" select="."/>
															<DurationOfStay>
																<xsl:value-of select="number(.)"/>
															</DurationOfStay>
														</xsl:for-each>
														<xsl:for-each select="numberOfEntries">
															<xsl:variable name="var67_cur" select="."/>
															<NumberOfEntries>
																<xsl:value-of select="number(.)"/>
															</NumberOfEntries>
														</xsl:for-each>
													</Visa>
												</xsl:if>
											</xsl:for-each>
										</IdentityDocument>
									</xsl:for-each>
									<xsl:for-each select="docRef">
										<xsl:variable name="var68_cur" select="."/>
										<xsl:for-each select="visa">
											<xsl:variable name="var69_cur" select="."/>
											<xsl:for-each select="visaType">
												<xsl:variable name="var70_filter" select="."/>
												<xsl:variable name="var71_nested">
													<xsl:value-of select="number(('UA' = $var4_cur/target))"/>
													<xsl:value-of select="number(('UAD' = $var4_cur/target))"/>
												</xsl:variable>
												<xsl:if test="not(boolean(translate(normalize-space($var71_nested), ' 0', '')))">
													<IdentityDocument>
														<xsl:variable name="var72_nested">
															<xsl:choose>
																<xsl:when test="$var69_cur/visaNumber">
																	<xsl:for-each select="$var69_cur/visaNumber">
																		<xsl:variable name="var73_cur" select="."/>
																		<xsl:value-of select="'1'"/>
																	</xsl:for-each>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:for-each select="($var68_cur/node())[./self::text()]">
																		<xsl:variable name="var74_filter" select="."/>
																		<xsl:value-of select="'1'"/>
																	</xsl:for-each>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:variable>
														<xsl:if test="boolean(translate(normalize-space($var72_nested), ' 0', ''))">
															<IdentityDocumentNumber>
																<xsl:choose>
																	<xsl:when test="$var69_cur/visaNumber">
																		<xsl:for-each select="$var69_cur/visaNumber">
																			<xsl:variable name="var75_cur" select="."/>
																			<xsl:value-of select="."/>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:for-each select="($var68_cur/node())[./self::text()]">
																			<xsl:variable name="var76_filter" select="."/>
																			<xsl:value-of select="."/>
																		</xsl:for-each>
																	</xsl:otherwise>
																</xsl:choose>
															</IdentityDocumentNumber>
														</xsl:if>
														<xsl:variable name="var77_nested">
															<xsl:call-template name="vmf:vmf2_inputtoresult">
																<xsl:with-param name="input" select="string(.)"/>
															</xsl:call-template>
														</xsl:variable>
														<xsl:if test="string($var77_nested)">
															<IdentityDocumentType>
																<xsl:variable name="var78_nested">
																	<xsl:call-template name="vmf:vmf2_inputtoresult">
																		<xsl:with-param name="input" select="string(.)"/>
																	</xsl:call-template>
																</xsl:variable>
																<xsl:value-of select="substring($var78_nested, 2)"/>
															</IdentityDocumentType>
														</xsl:if>
														<xsl:for-each select="$var69_cur/visaIssueCountryCode">
															<xsl:variable name="var79_cur" select="."/>
															<IssuingCountryCode>
																<xsl:value-of select="."/>
															</IssuingCountryCode>
														</xsl:for-each>
														<xsl:for-each select="$var69_cur/visaIssuanceDate">
															<xsl:variable name="var80_cur" select="."/>
															<IssueDate>
																<xsl:value-of select="."/>
															</IssueDate>
														</xsl:for-each>
														<xsl:for-each select="$var69_cur/enterBeforeDate">
															<xsl:variable name="var81_cur" select="."/>
															<ExpiryDate>
																<xsl:value-of select="."/>
															</ExpiryDate>
														</xsl:for-each>
														<xsl:for-each select="$var68_cur/birthPlace">
															<xsl:variable name="var82_cur" select="."/>
															<Birthplace>
																<xsl:value-of select="."/>
															</Birthplace>
														</xsl:for-each>
														<Visa>
															<xsl:for-each select="$var69_cur/visaHostCountryCode">
																<xsl:variable name="var83_cur" select="."/>
																<VisaHostCountryCode>
																	<xsl:value-of select="."/>
																</VisaHostCountryCode>
															</xsl:for-each>
															<xsl:for-each select="$var69_cur/enterBeforeDate">
																<xsl:variable name="var84_cur" select="."/>
																<EnterBeforeDate>
																	<xsl:value-of select="."/>
																</EnterBeforeDate>
															</xsl:for-each>
															<xsl:for-each select="$var69_cur/durationOfStay">
																<xsl:variable name="var85_cur" select="."/>
																<DurationOfStay>
																	<xsl:value-of select="number(.)"/>
																</DurationOfStay>
															</xsl:for-each>
															<xsl:for-each select="$var69_cur/numberOfEntries">
																<xsl:variable name="var86_cur" select="."/>
																<NumberOfEntries>
																	<xsl:value-of select="number(.)"/>
																</NumberOfEntries>
															</xsl:for-each>
														</Visa>
													</IdentityDocument>
												</xsl:if>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
									<xsl:for-each select="redressCase">
										<xsl:variable name="var87_cur" select="."/>
										<IdentityDocument>
											<IdentityDocumentNumber>
												<xsl:value-of select="redressCaseId"/>
											</IdentityDocumentNumber>
											<IdentityDocumentType>
												<xsl:value-of select="'AEA'"/>
											</IdentityDocumentType>
											<Visa>
												<VisaHostCountryCode>
													<xsl:value-of select="countryCode"/>
												</VisaHostCountryCode>
											</Visa>
										</IdentityDocument>
									</xsl:for-each>
									<xsl:for-each select="docRef/visa">
										<xsl:variable name="var88_filter" select="."/>
										<xsl:variable name="var89_nested">
											<xsl:for-each select="visaType">
												<xsl:variable name="var90_cur" select="."/>
												<xsl:variable name="var91_nested">
													<xsl:value-of select="number(('UA' = $var4_cur/target))"/>
													<xsl:value-of select="number(('UAD' = $var4_cur/target))"/>
												</xsl:variable>
												<xsl:value-of select="number((boolean(translate(normalize-space($var91_nested), ' 0', '')) and (. = 'R')))"/>
											</xsl:for-each>
										</xsl:variable>
										<xsl:if test="boolean(translate(normalize-space($var89_nested), ' 0', ''))">
											<IdentityDocument>
												<xsl:for-each select="visaNumber">
													<xsl:variable name="var92_cur" select="."/>
													<IdentityDocumentNumber>
														<xsl:value-of select="."/>
													</IdentityDocumentNumber>
												</xsl:for-each>
												<IdentityDocumentType>
													<xsl:value-of select="'AEA'"/>
												</IdentityDocumentType>
												<xsl:for-each select="visaIssueCountryCode">
													<xsl:variable name="var93_cur" select="."/>
													<IssuingCountryCode>
														<xsl:value-of select="."/>
													</IssuingCountryCode>
												</xsl:for-each>
												<Visa>
													<xsl:for-each select="visaNumber">
														<xsl:variable name="var94_cur" select="."/>
														<VisaNumber>
															<xsl:value-of select="."/>
														</VisaNumber>
													</xsl:for-each>
													<VisaType>
														<xsl:value-of select="'AEA'"/>
													</VisaType>
													<xsl:for-each select="visaHostCountryCode">
														<xsl:variable name="var95_cur" select="."/>
														<VisaHostCountryCode>
															<xsl:value-of select="."/>
														</VisaHostCountryCode>
													</xsl:for-each>
													<xsl:for-each select="enterBeforeDate">
														<xsl:variable name="var96_cur" select="."/>
														<EnterBeforeDate>
															<xsl:value-of select="."/>
														</EnterBeforeDate>
													</xsl:for-each>
													<xsl:for-each select="durationOfStay">
														<xsl:variable name="var97_cur" select="."/>
														<DurationOfStay>
															<xsl:value-of select="number(.)"/>
														</DurationOfStay>
													</xsl:for-each>
													<xsl:for-each select="numberOfEntries">
														<xsl:variable name="var98_cur" select="."/>
														<NumberOfEntries>
															<xsl:value-of select="number(.)"/>
														</NumberOfEntries>
													</xsl:for-each>
												</Visa>
											</IdentityDocument>
										</xsl:if>
									</xsl:for-each>
									<xsl:for-each select="docRef/visa">
										<xsl:variable name="var99_filter" select="."/>
										<xsl:variable name="var100_nested">
											<xsl:for-each select="visaType">
												<xsl:variable name="var101_cur" select="."/>
												<xsl:variable name="var102_nested">
													<xsl:value-of select="number(('UA' = $var4_cur/target))"/>
													<xsl:value-of select="number(('UAD' = $var4_cur/target))"/>
												</xsl:variable>
												<xsl:value-of select="number(((. = 'K') and boolean(translate(normalize-space($var102_nested), ' 0', ''))))"/>
											</xsl:for-each>
										</xsl:variable>
										<xsl:if test="boolean(translate(normalize-space($var100_nested), ' 0', ''))">
											<IdentityDocument>
												<xsl:for-each select="visaNumber">
													<xsl:variable name="var103_cur" select="."/>
													<IdentityDocumentNumber>
														<xsl:value-of select="."/>
													</IdentityDocumentNumber>
												</xsl:for-each>
												<IdentityDocumentType>
													<xsl:value-of select="'CR'"/>
												</IdentityDocumentType>
												<xsl:for-each select="visaIssueCountryCode">
													<xsl:variable name="var104_cur" select="."/>
													<IssuingCountryCode>
														<xsl:value-of select="."/>
													</IssuingCountryCode>
												</xsl:for-each>
												<xsl:for-each select="visaIssuanceDate">
													<xsl:variable name="var105_cur" select="."/>
													<IssueDate>
														<xsl:value-of select="."/>
													</IssueDate>
												</xsl:for-each>
												<Visa>
													<xsl:for-each select="visaNumber">
														<xsl:variable name="var106_cur" select="."/>
														<VisaNumber>
															<xsl:value-of select="."/>
														</VisaNumber>
													</xsl:for-each>
													<VisaType>
														<xsl:value-of select="'CR'"/>
													</VisaType>
													<xsl:for-each select="visaHostCountryCode">
														<xsl:variable name="var107_cur" select="."/>
														<VisaHostCountryCode>
															<xsl:value-of select="."/>
														</VisaHostCountryCode>
													</xsl:for-each>
												</Visa>
											</IdentityDocument>
										</xsl:if>
									</xsl:for-each>
									<xsl:for-each select="contact">
										<xsl:variable name="var108_cur" select="."/>
										<xsl:variable name="var109_idx" select="position()"/>
										<xsl:for-each select="($var29_cur/ID)[not($var108_cur/contactType)]">
											<xsl:variable name="var110_filter" select="."/>
											<ContactInfoRef>
												<xsl:value-of select="concat('CI', $var109_idx, .)"/>
											</ContactInfoRef>
										</xsl:for-each>
									</xsl:for-each>
									<xsl:for-each select="contact">
										<xsl:variable name="var111_cur" select="."/>
										<xsl:variable name="var112_idx" select="position()"/>
										<xsl:for-each select="$var29_cur/ID">
											<xsl:variable name="var113_filter" select="."/>
											<xsl:if test="($var111_cur/contactType)[('CTC' = .)]">
												<ContactInfoRef>
													<xsl:value-of select="concat('CI', $var112_idx, .)"/>
												</ContactInfoRef>
											</xsl:if>
										</xsl:for-each>
									</xsl:for-each>
									<xsl:for-each select="(./ID)[(boolean($var29_cur/address) and not($var29_cur/contact))]">
										<xsl:variable name="var114_filter" select="."/>
										<ContactInfoRef>
											<xsl:value-of select="concat('CI1', .)"/>
										</ContactInfoRef>
									</xsl:for-each>
									<xsl:for-each select="RefIDs">
										<xsl:variable name="var115_cur" select="."/>
										<InfantRef>
											<xsl:value-of select="."/>
										</InfantRef>
									</xsl:for-each>
								</Passenger>
							</xsl:for-each>
						</PassengerList>
						<ContactList>
							<xsl:for-each select="actor">
								<xsl:variable name="var116_cur" select="."/>
								<xsl:for-each select="contact">
									<xsl:variable name="var117_cur" select="."/>
									<xsl:variable name="var118_idx" select="position()"/>
									<xsl:if test="(./contactType)[('CTC' = .)]">
										<ContactInformation>
											<xsl:for-each select="$var116_cur/ID">
												<xsl:variable name="var119_cur" select="."/>
												<xsl:attribute name="ContactID">
													<xsl:value-of select="concat('CI', $var118_idx, .)"/>
												</xsl:attribute>
											</xsl:for-each>
											<xsl:for-each select="contactType">
												<xsl:variable name="var120_cur" select="."/>
												<ContactType>
													<xsl:value-of select="."/>
												</ContactType>
											</xsl:for-each>
											<xsl:for-each select="$var116_cur/address">
												<xsl:variable name="var121_filter" select="."/>
												<xsl:variable name="var122_nested">
													<xsl:for-each select="$var117_cur/contactType">
														<xsl:variable name="var123_cur" select="."/>
														<xsl:value-of select="number(((('CTC' = .) and not($var121_filter/companyName)) and not($var121_filter/addresseeName)))"/>
													</xsl:for-each>
												</xsl:variable>
												<xsl:if test="boolean(translate(normalize-space($var122_nested), ' 0', ''))">
													<PostalAddress>
														<xsl:for-each select="label">
															<xsl:variable name="var124_cur" select="."/>
															<Label>
																<xsl:value-of select="."/>
															</Label>
														</xsl:for-each>
														<xsl:for-each select="line">
															<xsl:variable name="var125_cur" select="."/>
															<Street>
																<xsl:value-of select="."/>
															</Street>
														</xsl:for-each>
														<xsl:for-each select="zip">
															<xsl:variable name="var126_cur" select="."/>
															<PostalCode>
																<xsl:value-of select="."/>
															</PostalCode>
														</xsl:for-each>
														<xsl:for-each select="cityName">
															<xsl:variable name="var127_cur" select="."/>
															<CityName>
																<xsl:value-of select="."/>
															</CityName>
														</xsl:for-each>
														<xsl:for-each select="stateName">
															<xsl:variable name="var128_cur" select="."/>
															<CountrySubdivisionName>
																<xsl:value-of select="."/>
															</CountrySubdivisionName>
														</xsl:for-each>
														<xsl:for-each select="countryCode">
															<xsl:variable name="var129_cur" select="."/>
															<CountryCode>
																<xsl:value-of select="."/>
															</CountryCode>
														</xsl:for-each>
													</PostalAddress>
												</xsl:if>
											</xsl:for-each>
											<xsl:for-each select="email">
												<xsl:variable name="var130_cur" select="."/>
												<ContactProvided>
													<EmailAddress>
														<xsl:variable name="var131_nested">
															<xsl:for-each select="label">
																<xsl:variable name="var132_cur" select="."/>
																<xsl:variable name="var133_nested">
																	<xsl:call-template name="vmf:vmf3_inputtoresult">
																		<xsl:with-param name="input" select="string(.)"/>
																	</xsl:call-template>
																</xsl:variable>
																<xsl:variable name="var134_nested">
																	<xsl:if test="string($var133_nested)">
																		<xsl:value-of select="'1'"/>
																	</xsl:if>
																</xsl:variable>
																<xsl:value-of select="number(boolean(translate(normalize-space($var134_nested), ' 0', '')))"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="boolean(translate(normalize-space($var131_nested), ' 0', ''))">
																<xsl:for-each select="label">
																	<xsl:variable name="var135_cur" select="."/>
																	<xsl:variable name="var136_nested">
																		<xsl:call-template name="vmf:vmf3_inputtoresult">
																			<xsl:with-param name="input" select="string(.)"/>
																		</xsl:call-template>
																	</xsl:variable>
																	<xsl:if test="string($var136_nested)">
																		<Label>
																			<xsl:variable name="var137_nested">
																				<xsl:call-template name="vmf:vmf3_inputtoresult">
																					<xsl:with-param name="input" select="string(.)"/>
																				</xsl:call-template>
																			</xsl:variable>
																			<xsl:value-of select="substring($var137_nested, 2)"/>
																		</Label>
																	</xsl:if>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<xsl:for-each select="label">
																	<xsl:variable name="var138_cur" select="."/>
																	<Label>
																		<xsl:value-of select="."/>
																	</Label>
																</xsl:for-each>
															</xsl:otherwise>
														</xsl:choose>
														<xsl:for-each select="(./node())[./self::text()]">
															<xsl:variable name="var139_filter" select="."/>
															<EmailAddressValue>
																<xsl:value-of select="."/>
															</EmailAddressValue>
														</xsl:for-each>
													</EmailAddress>
												</ContactProvided>
											</xsl:for-each>
											<xsl:for-each select="phone">
												<xsl:variable name="var140_cur" select="."/>
												<ContactProvided>
													<Phone>
														<xsl:variable name="var141_nested">
															<xsl:for-each select="label">
																<xsl:variable name="var142_cur" select="."/>
																<xsl:variable name="var143_nested">
																	<xsl:call-template name="vmf:vmf4_inputtoresult">
																		<xsl:with-param name="input" select="string(.)"/>
																	</xsl:call-template>
																</xsl:variable>
																<xsl:variable name="var144_nested">
																	<xsl:if test="string($var143_nested)">
																		<xsl:value-of select="'1'"/>
																	</xsl:if>
																</xsl:variable>
																<xsl:value-of select="number(boolean(translate(normalize-space($var144_nested), ' 0', '')))"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="boolean(translate(normalize-space($var141_nested), ' 0', ''))">
																<xsl:for-each select="label">
																	<xsl:variable name="var145_cur" select="."/>
																	<xsl:variable name="var146_nested">
																		<xsl:call-template name="vmf:vmf4_inputtoresult">
																			<xsl:with-param name="input" select="string(.)"/>
																		</xsl:call-template>
																	</xsl:variable>
																	<xsl:if test="string($var146_nested)">
																		<Label>
																			<xsl:variable name="var147_nested">
																				<xsl:call-template name="vmf:vmf4_inputtoresult">
																					<xsl:with-param name="input" select="string(.)"/>
																				</xsl:call-template>
																			</xsl:variable>
																			<xsl:value-of select="substring($var147_nested, 2)"/>
																		</Label>
																	</xsl:if>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<xsl:for-each select="label">
																	<xsl:variable name="var148_cur" select="."/>
																	<Label>
																		<xsl:value-of select="."/>
																	</Label>
																</xsl:for-each>
															</xsl:otherwise>
														</xsl:choose>
														<xsl:for-each select="overseasCode">
															<xsl:variable name="var149_cur" select="."/>
															<CountryDialingCode>
																<xsl:value-of select="."/>
															</CountryDialingCode>
														</xsl:for-each>
														<xsl:for-each select="(./node())[./self::text()]">
															<xsl:variable name="var150_filter" select="."/>
															<PhoneNumber>
																<xsl:value-of select="number(.)"/>
															</PhoneNumber>
														</xsl:for-each>
													</Phone>
												</ContactProvided>
											</xsl:for-each>
											<xsl:if test="(./ContactRefusedInd)[(. = 'True')]">
												<ContactNotProvided>
													<xsl:value-of select="''"/>
												</ContactNotProvided>
											</xsl:if>
										</ContactInformation>
									</xsl:if>
								</xsl:for-each>
							</xsl:for-each>
							<xsl:for-each select="actor">
								<xsl:variable name="var151_cur" select="."/>
								<xsl:for-each select="contact">
									<xsl:variable name="var152_cur" select="."/>
									<xsl:variable name="var153_idx" select="position()"/>
									<xsl:if test="not(contactType)">
										<ContactInformation>
											<xsl:for-each select="$var151_cur/ID">
												<xsl:variable name="var154_cur" select="."/>
												<xsl:attribute name="ContactID">
													<xsl:value-of select="concat('CI', $var153_idx, .)"/>
												</xsl:attribute>
											</xsl:for-each>
											<xsl:for-each select="contactType">
												<xsl:variable name="var155_cur" select="."/>
												<ContactType>
													<xsl:value-of select="."/>
												</ContactType>
											</xsl:for-each>
											<xsl:for-each select="$var151_cur/address">
												<xsl:variable name="var156_filter" select="."/>
												<xsl:variable name="var157_nested">
													<xsl:for-each select="$var152_cur/contactType">
														<xsl:variable name="var158_cur" select="."/>
														<xsl:value-of select="number(((('CTC' = .) and not($var156_filter/companyName)) and not($var156_filter/addresseeName)))"/>
													</xsl:for-each>
												</xsl:variable>
												<xsl:if test="boolean(translate(normalize-space($var157_nested), ' 0', ''))">
													<PostalAddress>
														<xsl:for-each select="label">
															<xsl:variable name="var159_cur" select="."/>
															<Label>
																<xsl:value-of select="."/>
															</Label>
														</xsl:for-each>
														<xsl:for-each select="line">
															<xsl:variable name="var160_cur" select="."/>
															<Street>
																<xsl:value-of select="."/>
															</Street>
														</xsl:for-each>
														<xsl:for-each select="zip">
															<xsl:variable name="var161_cur" select="."/>
															<PostalCode>
																<xsl:value-of select="."/>
															</PostalCode>
														</xsl:for-each>
														<xsl:for-each select="cityName">
															<xsl:variable name="var162_cur" select="."/>
															<CityName>
																<xsl:value-of select="."/>
															</CityName>
														</xsl:for-each>
														<xsl:for-each select="stateName">
															<xsl:variable name="var163_cur" select="."/>
															<CountrySubdivisionName>
																<xsl:value-of select="."/>
															</CountrySubdivisionName>
														</xsl:for-each>
														<xsl:for-each select="countryCode">
															<xsl:variable name="var164_cur" select="."/>
															<CountryCode>
																<xsl:value-of select="."/>
															</CountryCode>
														</xsl:for-each>
													</PostalAddress>
												</xsl:if>
											</xsl:for-each>
											<xsl:for-each select="email">
												<xsl:variable name="var165_cur" select="."/>
												<ContactProvided>
													<EmailAddress>
														<xsl:variable name="var166_nested">
															<xsl:for-each select="label">
																<xsl:variable name="var167_cur" select="."/>
																<xsl:variable name="var168_nested">
																	<xsl:call-template name="vmf:vmf3_inputtoresult">
																		<xsl:with-param name="input" select="string(.)"/>
																	</xsl:call-template>
																</xsl:variable>
																<xsl:variable name="var169_nested">
																	<xsl:if test="string($var168_nested)">
																		<xsl:value-of select="'1'"/>
																	</xsl:if>
																</xsl:variable>
																<xsl:value-of select="number(boolean(translate(normalize-space($var169_nested), ' 0', '')))"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="boolean(translate(normalize-space($var166_nested), ' 0', ''))">
																<xsl:for-each select="label">
																	<xsl:variable name="var170_cur" select="."/>
																	<xsl:variable name="var171_nested">
																		<xsl:call-template name="vmf:vmf3_inputtoresult">
																			<xsl:with-param name="input" select="string(.)"/>
																		</xsl:call-template>
																	</xsl:variable>
																	<xsl:if test="string($var171_nested)">
																		<Label>
																			<xsl:variable name="var172_nested">
																				<xsl:call-template name="vmf:vmf3_inputtoresult">
																					<xsl:with-param name="input" select="string(.)"/>
																				</xsl:call-template>
																			</xsl:variable>
																			<xsl:value-of select="substring($var172_nested, 2)"/>
																		</Label>
																	</xsl:if>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<xsl:for-each select="label">
																	<xsl:variable name="var173_cur" select="."/>
																	<Label>
																		<xsl:value-of select="."/>
																	</Label>
																</xsl:for-each>
															</xsl:otherwise>
														</xsl:choose>
														<xsl:for-each select="(./node())[./self::text()]">
															<xsl:variable name="var174_filter" select="."/>
															<EmailAddressValue>
																<xsl:value-of select="."/>
															</EmailAddressValue>
														</xsl:for-each>
													</EmailAddress>
												</ContactProvided>
											</xsl:for-each>
											<xsl:for-each select="phone">
												<xsl:variable name="var175_cur" select="."/>
												<ContactProvided>
													<Phone>
														<xsl:variable name="var176_nested">
															<xsl:for-each select="label">
																<xsl:variable name="var177_cur" select="."/>
																<xsl:variable name="var178_nested">
																	<xsl:call-template name="vmf:vmf4_inputtoresult">
																		<xsl:with-param name="input" select="string(.)"/>
																	</xsl:call-template>
																</xsl:variable>
																<xsl:variable name="var179_nested">
																	<xsl:if test="string($var178_nested)">
																		<xsl:value-of select="'1'"/>
																	</xsl:if>
																</xsl:variable>
																<xsl:value-of select="number(boolean(translate(normalize-space($var179_nested), ' 0', '')))"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="boolean(translate(normalize-space($var176_nested), ' 0', ''))">
																<xsl:for-each select="label">
																	<xsl:variable name="var180_cur" select="."/>
																	<xsl:variable name="var181_nested">
																		<xsl:call-template name="vmf:vmf4_inputtoresult">
																			<xsl:with-param name="input" select="string(.)"/>
																		</xsl:call-template>
																	</xsl:variable>
																	<xsl:if test="string($var181_nested)">
																		<Label>
																			<xsl:variable name="var182_nested">
																				<xsl:call-template name="vmf:vmf4_inputtoresult">
																					<xsl:with-param name="input" select="string(.)"/>
																				</xsl:call-template>
																			</xsl:variable>
																			<xsl:value-of select="substring($var182_nested, 2)"/>
																		</Label>
																	</xsl:if>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<xsl:for-each select="label">
																	<xsl:variable name="var183_cur" select="."/>
																	<Label>
																		<xsl:value-of select="."/>
																	</Label>
																</xsl:for-each>
															</xsl:otherwise>
														</xsl:choose>
														<xsl:for-each select="overseasCode">
															<xsl:variable name="var184_cur" select="."/>
															<CountryDialingCode>
																<xsl:value-of select="."/>
															</CountryDialingCode>
														</xsl:for-each>
														<xsl:for-each select="(./node())[./self::text()]">
															<xsl:variable name="var185_filter" select="."/>
															<PhoneNumber>
																<xsl:value-of select="number(.)"/>
															</PhoneNumber>
														</xsl:for-each>
													</Phone>
												</ContactProvided>
											</xsl:for-each>
											<xsl:if test="(./ContactRefusedInd)[(. = 'True')]">
												<ContactNotProvided>
													<xsl:value-of select="''"/>
												</ContactNotProvided>
											</xsl:if>
										</ContactInformation>
									</xsl:if>
								</xsl:for-each>
							</xsl:for-each>
							<xsl:for-each select="(./actor)[(boolean(address) and not(contact))]">
								<xsl:variable name="var186_filter" select="."/>
								<ContactInformation>
									<xsl:for-each select="ID">
										<xsl:variable name="var187_cur" select="."/>
										<xsl:attribute name="ContactID">
											<xsl:value-of select="concat('CI1', .)"/>
										</xsl:attribute>
									</xsl:for-each>
									<xsl:for-each select="address">
										<xsl:variable name="var188_cur" select="."/>
										<PostalAddress>
											<xsl:for-each select="label">
												<xsl:variable name="var189_cur" select="."/>
												<Label>
													<xsl:value-of select="."/>
												</Label>
											</xsl:for-each>
											<xsl:for-each select="line">
												<xsl:variable name="var190_cur" select="."/>
												<Street>
													<xsl:value-of select="."/>
												</Street>
											</xsl:for-each>
											<xsl:for-each select="zip">
												<xsl:variable name="var191_cur" select="."/>
												<PostalCode>
													<xsl:value-of select="."/>
												</PostalCode>
											</xsl:for-each>
											<xsl:for-each select="cityName">
												<xsl:variable name="var192_cur" select="."/>
												<CityName>
													<xsl:value-of select="."/>
												</CityName>
											</xsl:for-each>
											<xsl:for-each select="stateName">
												<xsl:variable name="var193_cur" select="."/>
												<CountrySubdivisionName>
													<xsl:value-of select="."/>
												</CountrySubdivisionName>
											</xsl:for-each>
											<xsl:for-each select="countryCode">
												<xsl:variable name="var194_cur" select="."/>
												<CountryCode>
													<xsl:value-of select="."/>
												</CountryCode>
											</xsl:for-each>
										</PostalAddress>
									</xsl:for-each>
									<ContactNotProvided>
										<xsl:value-of select="''"/>
									</ContactNotProvided>
								</ContactInformation>
							</xsl:for-each>
						</ContactList>
					</DataLists>
					<xsl:variable name="var195_nested">
						<xsl:variable name="var196_nested">
							<xsl:for-each select="actor">
								<xsl:variable name="var197_cur" select="."/>
								<xsl:for-each select="address/addresseeName">
									<xsl:variable name="var198_cur" select="."/>
									<xsl:for-each select="$var197_cur/PTC">
										<xsl:variable name="var199_cur" select="."/>
										<xsl:variable name="var200_nested">
											<xsl:value-of select="number(('UA' = $var4_cur/target))"/>
											<xsl:value-of select="number(('UAD' = $var4_cur/target))"/>
										</xsl:variable>
										<xsl:value-of select="number((not(boolean(translate(normalize-space($var200_nested), ' 0', ''))) and (. = 'ADT')))"/>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:variable>
						<xsl:value-of select="number(boolean(translate(normalize-space($var196_nested), ' 0', '')))"/>
						<xsl:variable name="var201_nested">
							<xsl:for-each select="actor/docRef">
								<xsl:variable name="var202_cur" select="."/>
								<xsl:value-of select="number(boolean(taxIdentifier))"/>
							</xsl:for-each>
						</xsl:variable>
						<xsl:value-of select="number(boolean(translate(normalize-space($var201_nested), ' 0', '')))"/>
					</xsl:variable>
					<xsl:if test="boolean(translate(normalize-space($var195_nested), ' 0', ''))">
						<Metadata>
							<xsl:for-each select="actor">
								<xsl:variable name="var203_cur" select="."/>
								<xsl:for-each select="address">
									<xsl:variable name="var204_cur" select="."/>
									<xsl:for-each select="addresseeName">
										<xsl:variable name="var205_filter" select="."/>
										<xsl:variable name="var206_nested">
											<xsl:for-each select="$var203_cur/PTC">
												<xsl:variable name="var207_cur" select="."/>
												<xsl:variable name="var208_nested">
													<xsl:value-of select="number(('UA' = $var4_cur/target))"/>
													<xsl:value-of select="number(('UAD' = $var4_cur/target))"/>
												</xsl:variable>
												<xsl:value-of select="number((not(boolean(translate(normalize-space($var208_nested), ' 0', ''))) and (. = 'ADT')))"/>
											</xsl:for-each>
										</xsl:variable>
										<xsl:if test="boolean(translate(normalize-space($var206_nested), ' 0', ''))">
											<PassengerMetadata>
												<xsl:for-each select="$var203_cur/ID">
													<xsl:variable name="var209_cur" select="."/>
													<xsl:attribute name="MetadataKey">
														<xsl:value-of select="."/>
													</xsl:attribute>
												</xsl:for-each>
												<AugmentationPoint>
													<AugPoint>
														<SpecialServiceRequest>
															<xsl:for-each select="$var203_cur/ID">
																<xsl:variable name="var210_cur" select="."/>
																<TravelerIDRef>
																	<xsl:value-of select="."/>
																</TravelerIDRef>
															</xsl:for-each>
															<SSRCode>
																<xsl:value-of select="'GSTN'"/>
															</SSRCode>
															<xsl:for-each select="$var204_cur/countryCode">
																<xsl:variable name="var211_cur" select="."/>
																<xsl:for-each select="$var204_cur/companyName">
																	<xsl:variable name="var212_cur" select="."/>
																	<Text>
																		<xsl:value-of select="concat($var211_cur, '/', $var205_filter, '/', .)"/>
																	</Text>
																</xsl:for-each>
															</xsl:for-each>
															<ActionCode>
																<xsl:value-of select="'NN'"/>
															</ActionCode>
														</SpecialServiceRequest>
													</AugPoint>
													<AugPoint>
														<SpecialServiceRequest>
															<xsl:for-each select="$var203_cur/ID">
																<xsl:variable name="var213_cur" select="."/>
																<TravelerIDRef>
																	<xsl:value-of select="."/>
																</TravelerIDRef>
															</xsl:for-each>
															<SSRCode>
																<xsl:value-of select="'GSTA'"/>
															</SSRCode>
															<xsl:variable name="var214_nested">
																<xsl:choose>
																	<xsl:when test="$var204_cur/countryCode">
																		<xsl:value-of select="concat($var204_cur/countryCode, '/')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="''"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="var215_nested">
																<xsl:choose>
																	<xsl:when test="$var204_cur/line">
																		<xsl:value-of select="concat($var204_cur/line, '/')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="''"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="var216_nested">
																<xsl:choose>
																	<xsl:when test="$var204_cur/cityName">
																		<xsl:value-of select="concat($var204_cur/cityName, '/')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="''"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="var217_nested">
																<xsl:choose>
																	<xsl:when test="$var204_cur/countryName">
																		<xsl:value-of select="concat($var204_cur/countryName, '/')"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="''"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="var218_nested">
																<xsl:choose>
																	<xsl:when test="$var204_cur/zip">
																		<xsl:value-of select="$var204_cur/zip"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="''"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:variable name="var219_nested">
																<xsl:choose>
																	<xsl:when test="(substring(concat($var214_nested, $var215_nested, $var216_nested, $var217_nested, $var218_nested), string-length(concat($var214_nested, $var215_nested, $var216_nested, $var217_nested, $var218_nested)), 1) = '/')">
																		<xsl:variable name="var220_nested">
																			<xsl:choose>
																				<xsl:when test="$var204_cur/countryCode">
																					<xsl:value-of select="concat($var204_cur/countryCode, '/')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="''"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:variable name="var221_nested">
																			<xsl:choose>
																				<xsl:when test="$var204_cur/line">
																					<xsl:value-of select="concat($var204_cur/line, '/')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="''"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:variable name="var222_nested">
																			<xsl:choose>
																				<xsl:when test="$var204_cur/cityName">
																					<xsl:value-of select="concat($var204_cur/cityName, '/')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="''"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:variable name="var223_nested">
																			<xsl:choose>
																				<xsl:when test="$var204_cur/countryName">
																					<xsl:value-of select="concat($var204_cur/countryName, '/')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="''"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:variable name="var224_nested">
																			<xsl:choose>
																				<xsl:when test="$var204_cur/zip">
																					<xsl:value-of select="$var204_cur/zip"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="''"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:value-of select="substring(concat($var220_nested, $var221_nested, $var222_nested, $var223_nested, $var224_nested), 1, (string-length(concat($var220_nested, $var221_nested, $var222_nested, $var223_nested, $var224_nested)) - 1))"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:variable name="var225_nested">
																			<xsl:choose>
																				<xsl:when test="$var204_cur/countryCode">
																					<xsl:value-of select="concat($var204_cur/countryCode, '/')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="''"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:variable name="var226_nested">
																			<xsl:choose>
																				<xsl:when test="$var204_cur/line">
																					<xsl:value-of select="concat($var204_cur/line, '/')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="''"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:variable name="var227_nested">
																			<xsl:choose>
																				<xsl:when test="$var204_cur/cityName">
																					<xsl:value-of select="concat($var204_cur/cityName, '/')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="''"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:variable name="var228_nested">
																			<xsl:choose>
																				<xsl:when test="$var204_cur/countryName">
																					<xsl:value-of select="concat($var204_cur/countryName, '/')"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="''"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:variable name="var229_nested">
																			<xsl:choose>
																				<xsl:when test="$var204_cur/zip">
																					<xsl:value-of select="$var204_cur/zip"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="''"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:value-of select="concat($var225_nested, $var226_nested, $var227_nested, $var228_nested, $var229_nested)"/>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:variable>
															<xsl:if test="($var219_nested != '')">
																<Text>
																	<xsl:variable name="var230_nested">
																		<xsl:choose>
																			<xsl:when test="$var204_cur/countryCode">
																				<xsl:value-of select="concat($var204_cur/countryCode, '/')"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="''"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:variable>
																	<xsl:variable name="var231_nested">
																		<xsl:choose>
																			<xsl:when test="$var204_cur/line">
																				<xsl:value-of select="concat($var204_cur/line, '/')"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="''"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:variable>
																	<xsl:variable name="var232_nested">
																		<xsl:choose>
																			<xsl:when test="$var204_cur/cityName">
																				<xsl:value-of select="concat($var204_cur/cityName, '/')"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="''"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:variable>
																	<xsl:variable name="var233_nested">
																		<xsl:choose>
																			<xsl:when test="$var204_cur/countryName">
																				<xsl:value-of select="concat($var204_cur/countryName, '/')"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="''"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:variable>
																	<xsl:variable name="var234_nested">
																		<xsl:choose>
																			<xsl:when test="$var204_cur/zip">
																				<xsl:value-of select="$var204_cur/zip"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="''"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="(substring(concat($var230_nested, $var231_nested, $var232_nested, $var233_nested, $var234_nested), string-length(concat($var230_nested, $var231_nested, $var232_nested, $var233_nested, $var234_nested)), 1) = '/')">
																			<xsl:variable name="var235_nested">
																				<xsl:choose>
																					<xsl:when test="$var204_cur/countryCode">
																						<xsl:value-of select="concat($var204_cur/countryCode, '/')"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="''"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:variable>
																			<xsl:variable name="var236_nested">
																				<xsl:choose>
																					<xsl:when test="$var204_cur/line">
																						<xsl:value-of select="concat($var204_cur/line, '/')"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="''"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:variable>
																			<xsl:variable name="var237_nested">
																				<xsl:choose>
																					<xsl:when test="$var204_cur/cityName">
																						<xsl:value-of select="concat($var204_cur/cityName, '/')"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="''"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:variable>
																			<xsl:variable name="var238_nested">
																				<xsl:choose>
																					<xsl:when test="$var204_cur/countryName">
																						<xsl:value-of select="concat($var204_cur/countryName, '/')"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="''"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:variable>
																			<xsl:variable name="var239_nested">
																				<xsl:choose>
																					<xsl:when test="$var204_cur/zip">
																						<xsl:value-of select="$var204_cur/zip"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="''"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:variable>
																			<xsl:value-of select="substring(concat($var235_nested, $var236_nested, $var237_nested, $var238_nested, $var239_nested), 1, (string-length(concat($var235_nested, $var236_nested, $var237_nested, $var238_nested, $var239_nested)) - 1))"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<xsl:variable name="var240_nested">
																				<xsl:choose>
																					<xsl:when test="$var204_cur/countryCode">
																						<xsl:value-of select="concat($var204_cur/countryCode, '/')"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="''"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:variable>
																			<xsl:variable name="var241_nested">
																				<xsl:choose>
																					<xsl:when test="$var204_cur/line">
																						<xsl:value-of select="concat($var204_cur/line, '/')"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="''"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:variable>
																			<xsl:variable name="var242_nested">
																				<xsl:choose>
																					<xsl:when test="$var204_cur/cityName">
																						<xsl:value-of select="concat($var204_cur/cityName, '/')"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="''"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:variable>
																			<xsl:variable name="var243_nested">
																				<xsl:choose>
																					<xsl:when test="$var204_cur/countryName">
																						<xsl:value-of select="concat($var204_cur/countryName, '/')"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="''"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:variable>
																			<xsl:variable name="var244_nested">
																				<xsl:choose>
																					<xsl:when test="$var204_cur/zip">
																						<xsl:value-of select="$var204_cur/zip"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="''"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:variable>
																			<xsl:value-of select="concat($var240_nested, $var241_nested, $var242_nested, $var243_nested, $var244_nested)"/>
																		</xsl:otherwise>
																	</xsl:choose>
																</Text>
															</xsl:if>
															<ActionCode>
																<xsl:value-of select="'NN'"/>
															</ActionCode>
														</SpecialServiceRequest>
													</AugPoint>
													<xsl:for-each select="$var203_cur/contact">
														<xsl:variable name="var245_filter" select="."/>
														<xsl:variable name="var246_nested">
															<xsl:for-each select="contactType">
																<xsl:variable name="var247_cur" select="."/>
																<xsl:variable name="var248_nested">
																	<xsl:for-each select="$var245_filter/phone/node()">
																		<xsl:variable name="var249_current" select="."/>
																		<xsl:value-of select="number(self::text())"/>
																	</xsl:for-each>
																</xsl:variable>
																<xsl:value-of select="number(((. = 'GST') and boolean(translate(normalize-space($var248_nested), ' 0', ''))))"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="boolean(translate(normalize-space($var246_nested), ' 0', ''))">
															<AugPoint>
																<SpecialServiceRequest>
																	<xsl:for-each select="$var203_cur/ID">
																		<xsl:variable name="var250_cur" select="."/>
																		<TravelerIDRef>
																			<xsl:value-of select="."/>
																		</TravelerIDRef>
																	</xsl:for-each>
																	<SSRCode>
																		<xsl:value-of select="'GSTP'"/>
																	</SSRCode>
																	<xsl:for-each select="(./phone/node())[./self::text()]">
																		<xsl:variable name="var251_filter" select="."/>
																		<Text>
																			<xsl:variable name="var252_nested">
																				<xsl:choose>
																					<xsl:when test="$var204_cur/countryCode">
																						<xsl:value-of select="concat($var204_cur/countryCode, '/')"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="''"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:variable>
																			<xsl:value-of select="concat($var252_nested, .)"/>
																		</Text>
																	</xsl:for-each>
																	<ActionCode>
																		<xsl:value-of select="'NN'"/>
																	</ActionCode>
																</SpecialServiceRequest>
															</AugPoint>
														</xsl:if>
													</xsl:for-each>
													<xsl:for-each select="$var203_cur/contact">
														<xsl:variable name="var253_filter" select="."/>
														<xsl:variable name="var254_nested">
															<xsl:for-each select="contactType">
																<xsl:variable name="var255_cur" select="."/>
																<xsl:variable name="var256_nested">
																	<xsl:for-each select="$var253_filter/email/node()">
																		<xsl:variable name="var257_current" select="."/>
																		<xsl:value-of select="number(self::text())"/>
																	</xsl:for-each>
																</xsl:variable>
																<xsl:value-of select="number(((. = 'GST') and boolean(translate(normalize-space($var256_nested), ' 0', ''))))"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="boolean(translate(normalize-space($var254_nested), ' 0', ''))">
															<AugPoint>
																<SpecialServiceRequest>
																	<xsl:for-each select="$var203_cur/ID">
																		<xsl:variable name="var258_cur" select="."/>
																		<TravelerIDRef>
																			<xsl:value-of select="."/>
																		</TravelerIDRef>
																	</xsl:for-each>
																	<SSRCode>
																		<xsl:value-of select="'GSTE'"/>
																	</SSRCode>
																	<xsl:for-each select="(./email/node())[./self::text()]">
																		<xsl:variable name="var259_filter" select="."/>
																		<Text>
																			<xsl:variable name="var260_nested">
																				<xsl:choose>
																					<xsl:when test="$var204_cur/countryCode">
																						<xsl:value-of select="concat($var204_cur/countryCode, '/')"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<xsl:value-of select="''"/>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:variable>
																			<xsl:value-of select="concat($var260_nested, .)"/>
																		</Text>
																	</xsl:for-each>
																	<ActionCode>
																		<xsl:value-of select="'NN'"/>
																	</ActionCode>
																</SpecialServiceRequest>
															</AugPoint>
														</xsl:if>
													</xsl:for-each>
												</AugmentationPoint>
											</PassengerMetadata>
										</xsl:if>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
							<xsl:variable name="var261_nested">
								<xsl:value-of select="number(('UA' = target))"/>
								<xsl:value-of select="number(('UAD' = target))"/>
							</xsl:variable>
							<xsl:variable name="var262_nested">
								<xsl:for-each select="actor/docRef">
									<xsl:variable name="var263_cur" select="."/>
									<xsl:value-of select="number(boolean(taxIdentifier))"/>
								</xsl:for-each>
							</xsl:variable>
							<xsl:if test="(not(boolean(translate(normalize-space($var261_nested), ' 0', ''))) and boolean(translate(normalize-space($var262_nested), ' 0', '')))">
								<PassengerMetadata>
									<xsl:attribute name="MetadataKey">M5</xsl:attribute>
									<AugmentationPoint>
										<AugPoint>
											<IndividualIDs>
												<xsl:for-each select="actor">
													<xsl:variable name="var264_cur" select="."/>
													<xsl:for-each select="ID">
														<xsl:variable name="var265_filter" select="."/>
														<xsl:variable name="var266_nested">
															<xsl:for-each select="$var264_cur/PTC">
																<xsl:variable name="var267_cur" select="."/>
																<xsl:variable name="var268_nested">
																	<xsl:for-each select="$var264_cur/docRef">
																		<xsl:variable name="var269_cur" select="."/>
																		<xsl:value-of select="number(boolean(taxIdentifier))"/>
																	</xsl:for-each>
																</xsl:variable>
																<xsl:value-of select="number((boolean(translate(normalize-space($var268_nested), ' 0', '')) and (. != 'INF')))"/>
															</xsl:for-each>
														</xsl:variable>
														<xsl:if test="boolean(translate(normalize-space($var266_nested), ' 0', ''))">
															<IndividualID>
																<xsl:attribute name="Refs">
																	<xsl:value-of select="concat('T', translate(., 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', ''))"/>
																</xsl:attribute>
																<xsl:for-each select="$var264_cur/docRef/taxIdentifier">
																	<xsl:variable name="var270_cur" select="."/>
																	<xsl:attribute name="Type">
																		<xsl:value-of select="fiscalType"/>
																	</xsl:attribute>
																</xsl:for-each>
																<xsl:for-each select="$var264_cur/docRef/taxIdentifier">
																	<xsl:variable name="var271_cur" select="."/>
																	<ID>
																		<xsl:value-of select="fiscalNumber"/>
																	</ID>
																</xsl:for-each>
															</IndividualID>
														</xsl:if>
													</xsl:for-each>
												</xsl:for-each>
											</IndividualIDs>
										</AugPoint>
									</AugmentationPoint>
								</PassengerMetadata>
							</xsl:if>
							<xsl:for-each select="actor">
								<xsl:variable name="var272_filter" select="."/>
								<xsl:variable name="var273_nested">
									<xsl:value-of select="number(('UA' = $var4_cur/target))"/>
									<xsl:value-of select="number(('UAD' = $var4_cur/target))"/>
								</xsl:variable>
								<xsl:variable name="var274_nested">
									<xsl:for-each select="docRef">
										<xsl:variable name="var275_cur" select="."/>
										<xsl:value-of select="number(boolean(taxIdentifier))"/>
									</xsl:for-each>
								</xsl:variable>
								<xsl:if test="(boolean(translate(normalize-space($var273_nested), ' 0', '')) and boolean(translate(normalize-space($var274_nested), ' 0', '')))">
									<PassengerMetadata>
										<xsl:for-each select="ID">
											<xsl:variable name="var276_cur" select="."/>
											<xsl:attribute name="MetadataKey">
												<xsl:value-of select="concat('SSR', translate(., 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', ''))"/>
											</xsl:attribute>
										</xsl:for-each>
										<AugmentationPoint>
											<AugPoint>
												<SpecialServiceRequest>
													<xsl:for-each select="ID">
														<xsl:variable name="var277_cur" select="."/>
														<TravelerIDRef>
															<xsl:value-of select="."/>
														</TravelerIDRef>
													</xsl:for-each>
													<xsl:for-each select="$var4_cur/set/property/value">
														<xsl:variable name="var278_cur" select="."/>
														<AirlineCode>
															<xsl:value-of select="substring(., 1, 2)"/>
														</AirlineCode>
													</xsl:for-each>
													<SSRCode>
														<xsl:value-of select="'FOID'"/>
													</SSRCode>
													<xsl:for-each select="docRef/taxIdentifier">
														<xsl:variable name="var279_cur" select="."/>
														<Text>
															<xsl:value-of select="concat('IDTID', fiscalType, fiscalNumber)"/>
														</Text>
													</xsl:for-each>
													<NumberInParty>
														<xsl:value-of select="number('1')"/>
													</NumberInParty>
													<ActionCode>
														<xsl:value-of select="'NN'"/>
													</ActionCode>
												</SpecialServiceRequest>
											</AugPoint>
										</AugmentationPoint>
									</PassengerMetadata>
								</xsl:if>
							</xsl:for-each>
						</Metadata>
					</xsl:if>
				</Query>
			</xsl:for-each>
		</OrderCreateRQ>
	</xsl:template>
</xsl:stylesheet>
