<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2013 rel. 2 sp2 (x64) (http://www.altova.com) by ï»¿AMADEUS s.a.s. (AMADEUS s.a.s.) -->
<xs:schema xmlns:ama_ct="http://xml.amadeus.com/2010/06/Types_v3" xmlns:etr="http://xml.amadeus.com/2010/06/ETR_InternalTypes_v3" xmlns:fop="http://xml.amadeus.com/2010/06/FOP_Types_v2" xmlns:ota="http://www.opentravel.org/OTA/2003/05/OTA2011A" xmlns:pnr="http://xml.amadeus.com/2010/06/PNR_Types_v1" xmlns:qt="http://xml.amadeus.com/2010/06/QuotationTypes_v1" xmlns:ttr="http://xml.amadeus.com/2010/06/TTR_Types_v1" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ama="http://xml.amadeus.com/ErrorCodes" xmlns:ns1="http://xml.amadeus.com/ErrorCodes" xmlns:ns2="http://xml.amadeus.com/ErrorCodes" xmlns:ns3="http://xml.amadeus.com/ErrorCodes" xmlns:ns4="http://xml.amadeus.com/ErrorCodes" xmlns:ns5="http://xml.amadeus.com/ErrorCodes" xmlns:ns0="http://xml.amadeus.com/2010/06/Types_v1" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:annotation>
		<xs:documentation xml:lang="en">All Schema files in the OpenTravel Alliance specification are made available according to the terms defined by the OpenTravel License Agreement at http://www.opentravel.org/Specifications/Default.aspx.</xs:documentation>
	</xs:annotation>
	<xs:complexType name="ActionType" mixed="true"/>
	<xs:complexType name="AlphaLength1" mixed="true"/>
	<xs:complexType name="AlphaLength2" mixed="true"/>
	<xs:complexType name="AlphaLength1to2" mixed="true"/>
	<xs:complexType name="AlphaLength3" mixed="true"/>
	<xs:complexType name="AlphaLength4" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to3" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to8" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to14" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to19" mixed="true"/>
	<xs:complexType name="AmountDeterminationType" mixed="true"/>
	<xs:complexType name="CabinType" mixed="true"/>
	<xs:complexType name="DateOrDateTimeType" mixed="true"/>
	<xs:complexType name="DateOrTimeOrDateTimeType" mixed="true"/>
	<xs:complexType name="DateOrMonthDay" mixed="true"/>
	<xs:complexType name="DayOfWeekType" mixed="true"/>
	<xs:complexType name="DistanceUnitNameType" mixed="true"/>
	<xs:complexType name="DurationType" mixed="true"/>
	<xs:complexType name="FlightNumberType" mixed="true"/>
	<xs:complexType name="FlightTypeType" mixed="true"/>
	<xs:complexType name="HotelResStatusType" mixed="true"/>
	<xs:complexType name="IncludeExcludeType" mixed="true"/>
	<xs:complexType name="InfoSourceType" mixed="true"/>
	<xs:complexType name="InventoryStatusType" mixed="true"/>
	<xs:complexType name="ISO3166" mixed="true"/>
	<xs:complexType name="ListOfISO3166" mixed="true"/>
	<xs:complexType name="ListOfOTA_CodeType" mixed="true"/>
	<xs:complexType name="ListOfRPH" mixed="true"/>
	<xs:complexType name="ListOfStringLength1to8" mixed="true"/>
	<xs:complexType name="MMYYDate" mixed="true"/>
	<xs:complexType name="MealType" mixed="true"/>
	<xs:complexType name="Money" mixed="true"/>
	<xs:complexType name="MoneyOrPercentageType" mixed="true"/>
	<xs:complexType name="NightDurationType" mixed="true"/>
	<xs:complexType name="Numeric0to4" mixed="true"/>
	<xs:complexType name="Numeric0to99" mixed="true"/>
	<xs:complexType name="Numeric0to999" mixed="true"/>
	<xs:complexType name="Numeric0to9999" mixed="true"/>
	<xs:complexType name="Numeric1to3" mixed="true"/>
	<xs:complexType name="Numeric1to4" mixed="true"/>
	<xs:complexType name="Numeric1to99" mixed="true"/>
	<xs:complexType name="Numeric1to999" mixed="true"/>
	<xs:complexType name="Numeric1to9999" mixed="true"/>
	<xs:complexType name="NumericStringLength1to16" mixed="true"/>
	<xs:complexType name="NumericStringLength1to19" mixed="true"/>
	<xs:complexType name="NumericStringLength2" mixed="true"/>
	<xs:complexType name="NumericStringLength4" mixed="true"/>
	<xs:complexType name="NumericStringLength1to3" mixed="true"/>
	<xs:complexType name="NumericStringLength1to5" mixed="true"/>
	<xs:complexType name="NumericStringLength1to8" mixed="true"/>
	<xs:complexType name="NumericStringLength15to50" mixed="true"/>
	<xs:complexType name="OTA_CodeType" mixed="true"/>
	<xs:complexType name="OfficeLocationType" mixed="true"/>
	<xs:complexType name="PaymentCardCodeType" mixed="true"/>
	<xs:complexType name="Percentage" mixed="true"/>
	<xs:complexType name="PreferLevelType" mixed="true"/>
	<xs:complexType name="PricingType" mixed="true"/>
	<xs:complexType name="PMS_ResStatusType" mixed="true"/>
	<xs:complexType name="RPH_Type" mixed="true"/>
	<xs:complexType name="RateIndicatorType" mixed="true"/>
	<xs:complexType name="RatePeriodSimpleType" mixed="true"/>
	<xs:complexType name="SeatDirectionType" mixed="true"/>
	<xs:complexType name="SeatType" mixed="true"/>
	<xs:complexType name="ShortDescriptionType" mixed="true"/>
	<xs:complexType name="StateProvCodeType" mixed="true"/>
	<xs:complexType name="StringLength0to8" mixed="true"/>
	<xs:complexType name="StringLength0to32" mixed="true"/>
	<xs:complexType name="StringLength0to64" mixed="true"/>
	<xs:complexType name="StringLength0to128" mixed="true"/>
	<xs:complexType name="StringLength0to255" mixed="true"/>
	<xs:complexType name="StringLength1to8" mixed="true"/>
	<xs:complexType name="StringLength1to16" mixed="true"/>
	<xs:complexType name="StringLength1to32" mixed="true"/>
	<xs:complexType name="StringLength1to64" mixed="true"/>
	<xs:complexType name="StringLength1to128" mixed="true"/>
	<xs:complexType name="StringLength1to255" mixed="true"/>
	<xs:complexType name="StringLength3" mixed="true"/>
	<xs:complexType name="TicketType" mixed="true"/>
	<xs:complexType name="TimeOrDateTimeType" mixed="true"/>
	<xs:complexType name="TimeUnitType" mixed="true"/>
	<xs:complexType name="TrainPolicyCodeType" mixed="true"/>
	<xs:complexType name="TransactionActionType" mixed="true"/>
	<xs:complexType name="TransactionStatusType" mixed="true"/>
	<xs:complexType name="UpperCaseAlphaLength1to2" mixed="true"/>
	<xs:complexType name="UpperCaseAlphaLength1to3" mixed="true"/>
	<xs:complexType name="UpperCaseAlphaNumericLength2" mixed="true"/>
	<xs:complexType name="UpperCaseAlphaNumericLength2to3" mixed="true"/>
	<xs:complexType name="UpperCaseAlphaNumericLength3to5" mixed="true"/>
	<xs:complexType name="YearOrYearMonthType" mixed="true"/>
	<xs:complexType name="YesNoType" mixed="true"/>
	<xs:complexType name="TransferActionType" mixed="true"/>
	<xs:complexType name="UTC_TimeZoneOffset" mixed="true"/>
	<xs:annotation>
		<xs:documentation xml:lang="en">All Schema files in the OpenTravel Alliance specification are made available according to the terms defined by the OpenTravel License Agreement at http://www.opentravel.org/Specifications/Default.aspx.</xs:documentation>
	</xs:annotation>
	<xs:complexType name="AcceptablePaymentCardsInfoType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">This complex type identifies payment cards that are acceptable for a specific form of payment, along with the ability to provide free text information regarding payment cards.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AcceptablePaymentCards" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A collection of payment cards that are acceptable as a form of payment.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="AcceptablePaymentCard" maxOccurs="99">
							<xs:annotation>
								<xs:documentation xml:lang="en">Specific information of one payment card that is acceptable as a form of payment.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="CardType" type="OTA_CodeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">A code used to identify this payment card. Refer to OpenTravel Code List Card Type (CDT).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CardName" type="StringLength1to32" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The name used to describe this type of payment card, for example, American Express.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="UsagePercentage" type="Percentage" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">If applicable, defines the percentage of the total amount that is incurred as a usage fee.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="UsageAmount" type="Money" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">If applicable, defines the additonal amount that is incurred as a usage fee.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Info" type="FormattedTextType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">General information regarding the use of payment cards.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AcceptedPaymentsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Used to define the types of payments accepted.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AcceptedPayment" type="PaymentFormType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">An acceptable form of payment.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AddressInfoType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Information about an address that identifies a location for a specific purposes.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AddressType">
				<xs:sequence>
					<xs:element name="DefaultInd" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">When true, indicates a default value should be used.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="UseType" type="OTA_CodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Describes the use of the address (e.g. mailing, delivery, billing, etc.). Refer to OpenTravel Code List Address Use Type (AUT).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RPH" type="RPH_Type" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Used elsewhere in the message to reference this specific address.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AddressType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Provides address information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FormattedInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Specifies if the associated data is formatted or not. When true, then it is formatted; when false, then not formatted.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShareSynchInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="ShareMarketInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Type" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Defines the type of address (e.g. home, business, other). Refer to OpenTravel Code List Communication Location Type (CLT).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Remark" type="StringLength1to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A remark associated with this address.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StreetNmbr" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">May contain the street number and optionally the street name.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="StreetNmbrType">
							<xs:sequence>
								<xs:element name="StreetNmbrSuffix" type="StringLength1to8" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Usually a letter right after the street number (A in 66-A, B in 123-B etc).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="StreetDirection" type="StringLength1to8" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Street direction of an address (e.g., N, E, S, NW, SW).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="RuralRouteNmbr" type="NumericStringLength1to5" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Numerical equivalent of a rural township as defined within a given area (e.g., 12, 99).</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="BldgRoom" minOccurs="0" maxOccurs="2">
				<xs:annotation>
					<xs:documentation xml:lang="en">Building name, room, apartment, or suite number.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="StringLength0to64">
							<xs:sequence>
								<xs:element name="BldgNameIndicator" type="xs:boolean" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">When true, the information is a building name.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="AddressLine" type="StringLength1to255" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">When the address is unformatted (FormattedInd="false") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CityName" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PostalCode" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="County" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">County or Region Name (e.g., Fairfax).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StateProv" type="StateProvType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">State or Province name (e.g., Texas).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CountryName" type="CountryNameType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Country name (e.g., Ireland).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BankAcctType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Customer bank accounts for payments, either for paper checks or electronic funds transfer.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShareSynchInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="ShareMarketInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="BankID" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Code assigned by authorities to financial institutions; sometimes called bank routing number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AcctType" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Describes the bank account used for financing travel (e.g., checking, savings, investment).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BankAcctNumber" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifier for the account assigned by the bank.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChecksAcceptedInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">If true, checks are accepted. If false, checks are not accepted.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckNumber" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The number of the check used for payment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BankAcctName" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The name the account is held under.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BlackoutDateType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Provides blackout date information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BlackoutDate" type="DateTimeSpanType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates black-out dates for the travel product/service.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CancelInfoRQType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Identifies the common, or core, information associated with the request for cancellation of a reservation or other type of record.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CancelType" type="TransactionActionType">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to specify if this is to initiate a cancellation or to commit the cancellation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniqueID" type="UniqueID_Type" maxOccurs="2">
				<xs:annotation>
					<xs:documentation xml:lang="en">Sending own UniqueID and partner UniqueID - the receiving system needs to know which one - UniqueID acts as a reference for each system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PersonName" type="PersonNameType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The person's name in a reservation.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CancelInfoRSType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">May contain rules associated with canceling a reservation as well as the supplier's cancellation number.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CancelRules" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A collection of cancellation rules.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CancelRule" type="CancelRuleType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation xml:lang="en">Details of a cancellation rule.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="UniqueID" type="UniqueID_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Contains the supplier's cancellation number.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CancelRuleType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Provides the cancellation amount due according to the time before the booking date that the cancellation occurs. The amount may be either an amount or a percentage (e.g. 50% within 30 days or $100 outside 30 days).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CancelByDate" type="DateOrDateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The date by which a cancellation must be made in order to avoid this cancellation penalty.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Percent" type="Percentage" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The percentage to be applied for a cancellation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Defines how the cancellation penalty will be applied.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="PaymentCard" type="PaymentCardType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The card to be charged with the cancellation fee.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CommentType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection of comments.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Comment" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">Comment details.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="ParagraphType">
							<xs:sequence>
								<xs:element name="CommentOriginatorCode" type="StringLength1to16" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Unique identifier for the system which created the comment.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="GuestViewable" type="xs:boolean" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">When true, the comment may be shown to the consumer. When false, the comment may not be shown to the consumer.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CommissionType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Contains details pertaining to commissions.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StatusType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the status of the commission payment itself (e.g. no-show indicates that a different commission may be applied if the reservation is not fulfilled).</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Percent" type="Percentage" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The percent applied to the commissionable amount to determine the commission payable amount.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReasonCode" type="StringLength1to8" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the reason why a commission is not paid or not paid in full.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BillToID" type="StringLength1to8" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies who should be billed for the commission amount.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frequency" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This is the frequency at which the commission is applied (e.g. per stay, daily). Refer to OpenTravel Code List Charge Type (CHG).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxCommissionUnitApplies" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Maximum number of units for which the commission will be applied. This may be used in conjunction with the frequency attribute.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CapAmount" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The highest monetary value that may be paid for the commission.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniqueID" type="UniqueID_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the recipient of the commission.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CommissionableAmount" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The amount on which commission is calculated.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Amount" type="Money" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TaxInclusiveIndicator" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates that the commission is calculated using the rate including tax. When false, indicates that the commission is calculated using the net rate.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PrepaidAmount" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The amount of commission paid to the agency prior to the service being rendered.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Amount" type="Money" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="FlatCommission" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A fixed commission amount.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Amount" type="Money" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CommissionPayableAmount" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The amount of commission to be paid.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Amount" type="Money" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Comment" type="ParagraphType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Text related to the commission.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CompanyNameType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Identifies a company by name.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength0to128">
				<xs:sequence>
					<xs:element name="CompanyShortName" type="StringLength1to32" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Used to provide the company common name.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TravelSector" type="OTA_CodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The travel sector the company is associated with, such as air, car and hotel. Refer to OpenTravel Code List Travel Sector (TVS).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Code" type="StringLength1to16" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CodeContext" type="StringLength1to32" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Identifies the context of the identifying code, such as DUNS, IATA or internal code, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Division" type="StringLength1to32" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The division name or ID with which the contact is associated.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Department" type="StringLength1to32" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The department name or ID with which the contact is associated.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ConnectionType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">To specify connection locations, preference level for each, min connection time, and whether location is specified for stopping or changing.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ConnectionLocation" maxOccurs="9">
				<xs:annotation>
					<xs:documentation xml:lang="en">Specifies a connection location, preference level, min connection time, and whether the location is allowed for stopping or changing.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="LocationType">
							<xs:sequence>
								<xs:element name="Inclusive" type="xs:boolean" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">When true, indicates the location is acceptable for a connection. When false  the location should not be included for a connection.</xs:documentation>
										<xs:documentation xml:lang="en">
											<LegacyDefaultValue>true</LegacyDefaultValue>
										</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="PreferLevel" type="PreferLevelType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Used to indicate a level of preference for an associated item.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="MinChangeTime" type="xs:nonNegativeInteger" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Number of minutes between connections.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ConnectionInfo" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Specifies whether a connection is for a stopover or a change of flights.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="MultiAirportCityInd" type="xs:boolean" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">If true, other airports within this city may be considered (e.g., EWR, JFK when origin location is LGA.)</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ConnectType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The type of connection desired, Online, Offline, Interline. Online refers to host airline connections. Offline refers to non-host airline connections. Interline refers to a combination of host airline and non-host airline connections.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ContactPersonType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Name of an individual and appropriate contact information.  May be contact information for the customer or someone affiliated with the customer.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShareSynchInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="ShareMarketInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="DefaultInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, indicates a default value should be used.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContactType" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Type of contact in the context of use for the travel experience; such as permanent, temporary, affiliation, travel arranger, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Relation" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the type of relationship with the person or company in the profile, such as Spouse, Child, Family, Business Associate, Interest Group, Medical, Security,Other, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EmergencyFlag" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates if this contact should be used in the case of an emergency.</xs:documentation>
					<xs:documentation xml:lang="en">
						<LegacyDefaultValue>false</LegacyDefaultValue>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RPH" type="RPH_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Provides a unique reference to this contact person.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CommunicationMethodCode" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Provides the preferred method of communication. Refer to OpenTravel Code list Distribution Type (DTB).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentDistribMethodCode" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the method of distribution for the booking documentation. Refer to OpenTravel Code list Distribution Type (DTB).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PersonName" type="PersonNameType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This provides name information for a person.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Telephone" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Information about a telephone number, including the actual number and its usage.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ShareSynchInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ShareMarketInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="PhoneLocationType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Describes the location of the phone, such as Home, Office, Property Reservation Office, etc. Refer to OpenTravel Code List Phone Location Type (PLT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneTechType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc. Refer to OpenTravel Code List Phone Technology Type (PTT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneUseType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening). Refer to OpenTravel Code List Phone Use Type (PUT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CountryAccessCode" type="NumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code assigned by telecommunications authorities for international country access identifier.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AreaCityCode" type="NumericStringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code assigned for telephones in a specific region, city, or area.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneNumber" type="StringLength1to32">
							<xs:annotation>
								<xs:documentation xml:lang="en">Telephone number assigned to a single location.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Extension" type="NumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Extension to reach a specific party at the phone number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PIN" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Additional codes used for pager or telephone access rights.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Remark" type="StringLength1to128" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A remark associated with the telephone number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="FormattedInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Specifies if the associated data is formatted or not. When true, then it is formatted; when false, then not formatted.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DefaultInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates a default value should be used.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RPH" type="RPH_Type" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Used elsewhere in the message to reference a specific telephone number (including faxes).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Address" type="AddressInfoType" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Information about an address that identifies a location for a specific purposes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Email" type="EmailType" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Electronic email addresses, in IETF specified format.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="URL" type="URL_Type" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Web site address, in IETF specified format.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompanyName" type="CompanyNameType" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies a company by name.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EmployeeInfo" type="EmployeeInfoType" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation xml:lang="en">Employment identification; using an employee ID number, title, level within the company, and an indication of their status, i.e.: active, retired, on leave, or terminated from employment. Additional information about an employee can be entered into the element, including the name of the employee, if it differs from the person name identified as a customer or contact.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CountryNameType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">The name or code of a country (e.g. as used in an address or to specify citizenship of a traveller).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength0to64">
				<xs:sequence>
					<xs:element name="Code" type="ISO3166" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">ISO 3166 code for a country.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CustomerType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Gender" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the gender.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Deceased" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true the customer is deceased.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LockoutType" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates reason for locking out record, such as Emergency, Incident, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BirthDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VIP_Indicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">If true, indicates a very important person.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Text" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to specify textual information about the customer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Language" type="xs:language" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Language identification.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomerValue" type="StringLength1to8" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The supplier's ranking of the customer (e.g., VIP, numerical ranking).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaritalStatus" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Marital status of the traveler.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="PreviouslyMarriedIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, indicates the customer was previously married. When false, indicates the customer was not previously married.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChildQuantity" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The number of children of the customer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PersonName" type="PersonNameType" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Detailed name information for the customer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Telephone" minOccurs="0" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">Information on a telephone number for the customer.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="EffectiveDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExpireDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExpireDateExclusiveIndicator" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ShareSynchInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ShareMarketInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="PhoneLocationType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Describes the location of the phone, such as Home, Office, Property Reservation Office, etc. Refer to OpenTravel Code List Phone Location Type (PLT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneTechType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc. Refer to OpenTravel Code List Phone Technology Type (PTT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneUseType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening). Refer to OpenTravel Code List Phone Use Type (PUT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CountryAccessCode" type="NumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code assigned by telecommunications authorities for international country access identifier.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AreaCityCode" type="NumericStringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code assigned for telephones in a specific region, city, or area.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneNumber" type="StringLength1to32">
							<xs:annotation>
								<xs:documentation xml:lang="en">Telephone number assigned to a single location.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Extension" type="NumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Extension to reach a specific party at the phone number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PIN" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Additional codes used for pager or telephone access rights.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Remark" type="StringLength1to128" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A remark associated with the telephone number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="FormattedInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Specifies if the associated data is formatted or not. When true, then it is formatted; when false, then not formatted.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DefaultInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates a default value should be used.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RPH" type="RPH_Type" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Used elsewhere in the message to reference a specific telephone number (including faxes).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TransferAction" type="TransferActionType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates under what conditions the element will be transfered to the booking.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ParentCompanyRef" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A reference to the company from which this element has been inherited.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Email" minOccurs="0" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">Information on an email address for the customer.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="EmailType">
							<xs:sequence>
								<xs:element name="TransferAction" type="TransferActionType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Indicates under what conditions the element will be transfered to the booking.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ParentCompanyRef" type="StringLength1to8" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">A reference to the company from which this element has been inherited.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Address" minOccurs="0" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">Detailed information on an address for the customer.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="AddressInfoType">
							<xs:sequence>
								<xs:element name="EffectiveDate" type="xs:date" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ExpireDate" type="xs:date" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ExpireDateExclusiveIndicator" type="xs:boolean" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ValidationStatus" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Indicates if the address has been validated or not and if it has been successful or not.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="TransferAction" type="TransferActionType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Indicates under what conditions the element will be transfered to the booking.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ParentCompanyRef" type="StringLength1to8" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">A reference to the company from which this element has been inherited.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CompanyName" type="CompanyNameType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Identifies a company.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="AddresseeName" type="PersonNameType" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Name of the person to whom this address relates.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="URL" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Information on a URL for the customer.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="URL_Type">
							<xs:sequence>
								<xs:element name="TransferAction" type="TransferActionType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Indicates under what conditions this element will be transfered to the booking.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="CitizenCountryName" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation xml:lang="en">Name of the (self-professed) country that is claimed for citizenship.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="DefaultInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates a default value should be used.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Code" type="ISO3166" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A 2 character country code as defined in ISO3166.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PhysChallName" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Describes the customer's physical challenge.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="StringLength0to255">
							<xs:sequence>
								<xs:element name="PhysChallInd" type="xs:boolean" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">When true, indicates the customer is physically challenged.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PetInfo" type="StringLength1to64" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation xml:lang="en">Describes the customer's pet.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PaymentForm" minOccurs="0" maxOccurs="100">
				<xs:annotation>
					<xs:documentation xml:lang="en">Methods of providing funds and guarantees for travel by the customer.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="PaymentFormType">
							<xs:sequence>
								<xs:element name="TransferAction" type="TransferActionType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Indicates under what conditions the element will be transfered to the booking.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="DefaultInd" type="xs:boolean" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">When true, indicates the preferred form of payment.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ParentCompanyRef" type="StringLength1to8" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">A reference to the company from which this element has been inherited.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="AssociatedSupplier" minOccurs="0">
									<xs:annotation>
										<xs:documentation>The supplier for whom this is the preferred method of payment.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:element name="CompanyShortName" type="StringLength1to32" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">Used to provide the company common name.</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="TravelSector" type="OTA_CodeType" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">The travel sector the company is associated with, such as air, car and hotel. Refer to OpenTravel Code List Travel Sector (TVS).</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="Code" type="StringLength1to16" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="CodeContext" type="StringLength1to32" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">Identifies the context of the identifying code, such as DUNS, IATA or internal code, etc.</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="RelatedTraveler" type="RelatedTravelerType" minOccurs="0" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies a traveler associated with the customer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContactPerson" type="ContactPersonType" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Information on a contact person for the customer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Document" type="DocumentType" minOccurs="0" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">Detailed document information for the customer (e.g.,  driver license, passport, visa).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustLoyalty" minOccurs="0" maxOccurs="25">
				<xs:annotation>
					<xs:documentation xml:lang="en">Loyalty program information for the customer.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ShareSynchInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ShareMarketInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ProgramID" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifier to indicate the company owner of the loyalty program.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MembershipID" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Unique identifier of the member in the program (membership number, account number, etc.).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TravelSector" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifies the travel sector. Refer to OpenTravel Code List Travel Sector (TVS).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LoyalLevel" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates special privileges in program assigned to individual.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LoyalLevelCode" type="Numeric1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provides a numeric code assigned to a particular loyalty level.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SingleVendorInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates if program is affiliated with a group of related offers accumulating credits.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="SignupDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates when the member signed up for the loyalty program.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="EffectiveDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExpireDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExpireDateExclusiveIndicator" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RPH" type="RPH_Type" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A reference placeholder for this loyalty membership.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="VendorCode" type="ListOfStringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicate the partner(s)/vendor(s) for which the customer loyalty number is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PrimaryLoyaltyIndicator" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates this is the primary customer loyalty program and when false, indicates this is not the primary customer loyalty program.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AllianceLoyaltyLevelName" type="StringLength1to128" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the alliance loyalty level (e.g.,OneWorld  uses Emerald, Ruby, etc and SkyTeam uses Elite, etc.)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CustomerType" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Original assessment of the customer by the travel agent.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CustomerValue" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The supplier's ranking of the customer (e.g., VIP, numerical ranking).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Password" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The password for the member in the program. </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Remark" type="StringLength1to128" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A remark associated with the customer's loyalty program.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MemberPreferences" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Loyalty program preferences specified by the enrolling member.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="Awareness" type="StringLength1to32" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates how person became aware of loyalty program.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="PromotionCode" type="StringLength1to32" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Promotion code is the identifier used by the host to link directly with a specific named advertising campaign. By including the required code, the client is able to gain access to special offers which may have been created for a specifically targeted group via a CRM system or for a wider advertising campaign using Television or press adverts.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="PromotionVendorCode" type="ListOfStringLength1to8" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">List of the vendor codes associated with a promotion.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="AwardsPreference" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Method by which awards are allocated.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="AdditionalReward" minOccurs="0" maxOccurs="5">
										<xs:annotation>
											<xs:documentation xml:lang="en">Additional programs that are honored by the primary loyalty account.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="MemberID" type="StringLength1to32" minOccurs="0"/>
												<xs:element name="CompanyName" type="CompanyNameType" minOccurs="0"/>
												<xs:element name="Name" type="PersonNameType" minOccurs="0"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Offer" minOccurs="0" maxOccurs="5">
										<xs:annotation>
											<xs:documentation xml:lang="en">Source from which members can receive information.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Type" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">An enumerated list of offer sources.</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Communication" minOccurs="0" maxOccurs="5">
													<xs:annotation>
														<xs:documentation xml:lang="en">Preferred method of offer communication.</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="DistribType" type="OTA_CodeType" minOccurs="0">
																<xs:annotation>
																	<xs:documentation xml:lang="en">An enumerated list of method of communication. Refer to OpenTravel Code List Distribution Type (DTB).</xs:documentation>
																</xs:annotation>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="SecurityInfo" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Information allowing member to securely access account.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="Username" type="StringLength1to32" minOccurs="0"/>
									<xs:element name="Password" type="StringLength1to32" minOccurs="0"/>
									<xs:element name="PasswordHint" minOccurs="0" maxOccurs="2">
										<xs:annotation>
											<xs:documentation xml:lang="en">Alternate method to password for account access.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:complexContent>
												<xs:extension base="__Dummy">
													<xs:sequence>
														<xs:element name="Hint" minOccurs="0">
															<xs:complexType mixed="true"/>
														</xs:element>
													</xs:sequence>
												</xs:extension>
											</xs:complexContent>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="SubAccountBalance" minOccurs="0" maxOccurs="99">
							<xs:annotation>
								<xs:documentation xml:lang="en">Used to specify a sub-account and its point balance associated with this loyalty account.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="Type" type="StringLength1to16" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Describes the type of sub account (e.g. miles, points, vouchers, stays).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Balance" type="xs:integer" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The current balance for this sub account.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="EmployeeInfo" type="EmployeeInfoType" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation xml:lang="en">Employment information for the customer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EmployerInfo" type="CompanyNameType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the customer's employer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdditionalLanguage" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation>Additional languages spoken by the traveler.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Code" type="xs:language" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code for the language spoken by the customer.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element ref="ota_TPA_Extensions" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DateTimeSpanType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Used to specify a time window range by either specifying an earliest and latest date for the start date and end date or by giving a date with a time period that can be applied before and/or after the start date.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Start" type="DateOrTimeOrDateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The starting value of the time span.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Duration" type="DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The duration datatype represents a combination of year, month, day and time values representing a single duration of time, encoded as a single string.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="End" type="DateOrTimeOrDateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The ending value of the time span.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DateWindowRange" type="TimeInstantType">
				<xs:annotation>
					<xs:documentation xml:lang="en">Specifies a time period that can be applied before and/or after the start date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:sequence>
				<xs:element name="StartDateWindow" minOccurs="0">
					<xs:annotation>
						<xs:documentation xml:lang="en">The earliest and latest dates acceptable for the start date.</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="EarliestDate" type="DateOrDateTimeType" minOccurs="0">
								<xs:annotation>
									<xs:documentation xml:lang="en">The earliest ending date/time for the availability requested, expressed in dateTime format as prescribed by ISO 8601.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="LatestDate" type="DateOrDateTimeType" minOccurs="0">
								<xs:annotation>
									<xs:documentation xml:lang="en">The latest ending date/time for the availability requested, expressed in dateTime format as prescribed by ISO 8601.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="DOW" type="DayOfWeekType" minOccurs="0">
								<xs:annotation>
									<xs:documentation xml:lang="en">The Day of Week of the starting date for the availability requested. Enumerated values of StartDOW are the seven days of the week: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, or Sunday.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="EndDateWindow" minOccurs="0">
					<xs:annotation>
						<xs:documentation xml:lang="en">The earliest and latest dates acceptable for the end date.</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="EarliestDate" type="DateOrDateTimeType" minOccurs="0">
								<xs:annotation>
									<xs:documentation xml:lang="en">The earliest ending date/time for the availability requested, expressed in dateTime format as prescribed by ISO 8601.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="LatestDate" type="DateOrDateTimeType" minOccurs="0">
								<xs:annotation>
									<xs:documentation xml:lang="en">The latest ending date/time for the availability requested, expressed in dateTime format as prescribed by ISO 8601.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="DOW" type="DayOfWeekType" minOccurs="0">
								<xs:annotation>
									<xs:documentation xml:lang="en">The Day of Week of the starting date for the availability requested. Enumerated values of StartDOW are the seven days of the week: Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, or Sunday.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DirectBillType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Company name and location for sending invoice for remittances for travel services.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShareSynchInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="ShareMarketInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="DirectBill_ID" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifier for the organization to be billed directly for travel services.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BillingNumber" type="StringLength0to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The number assigned by the subscriber for billing reconciliation of a corporate account.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompanyName" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Company name to whom remittance should be directed.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="CompanyNameType">
							<xs:sequence>
								<xs:element name="ContactName" type="StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">This may be used to pass the name of the contact at the company for which the direct bill applies.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Address" type="AddressInfoType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Address where remittance should be directed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Email" type="EmailType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Email address to which remittance should be directed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Telephone" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Telephone number associated with company to whom remittance is being directed.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ShareSynchInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ShareMarketInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="PhoneLocationType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Describes the location of the phone, such as Home, Office, Property Reservation Office, etc. Refer to OpenTravel Code List Phone Location Type (PLT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneTechType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc. Refer to OpenTravel Code List Phone Technology Type (PTT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneUseType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening). Refer to OpenTravel Code List Phone Use Type (PUT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CountryAccessCode" type="NumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code assigned by telecommunications authorities for international country access identifier.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AreaCityCode" type="NumericStringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code assigned for telephones in a specific region, city, or area.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneNumber" type="StringLength1to32">
							<xs:annotation>
								<xs:documentation xml:lang="en">Telephone number assigned to a single location.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Extension" type="NumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Extension to reach a specific party at the phone number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PIN" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Additional codes used for pager or telephone access rights.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Remark" type="StringLength1to128" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A remark associated with the telephone number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="FormattedInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Specifies if the associated data is formatted or not. When true, then it is formatted; when false, then not formatted.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DefaultInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates a default value should be used.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RPH" type="RPH_Type" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Used elsewhere in the message to reference a specific telephone number (including faxes).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DocumentType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Provides information on a specific document.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShareSynchInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="ShareMarketInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="DocIssueAuthority" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the group or association that granted the document.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocIssueLocation" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the location where the document was issued.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocID" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Unique number assigned by authorities to document.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocType" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the type of document (e.g. Passport, Military ID, Drivers License, national ID, Vaccination Certificate). Refer to OpenTravel Code List Document Type (DOC).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Gender" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the gender.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="BirthDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EffectiveDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpireDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpireDateExclusiveIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocIssueStateProv" type="StateProvCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">State or Province where the document was issued.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocIssueCountry" type="ISO3166" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Country where the document was issued.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BirthCountry" type="ISO3166" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Specifies the birth country of the document holder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BirthPlace" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Specifies the birth place of the document holder (e.g., city, state, county, province), when designating a country of birth, use BirthCountry.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocHolderNationality" type="ISO3166" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The country code of the nationality of the document holder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContactName" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Provides contact name associated with the document.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HolderType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Provides the type of document holder.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Remark" type="StringLength1to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A remark associated with the document.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PostalCode" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Defines the postal code (e.g., ZIP code) on the document.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:element name="DocHolderName" type="StringLength1to64" minOccurs="0">
					<xs:annotation>
						<xs:documentation xml:lang="en">The name of the document holder in unformatted text (Mr. Sam Jones).</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="DocHolderFormattedName" type="PersonNameType" minOccurs="0">
					<xs:annotation>
						<xs:documentation xml:lang="en">The name of document holder in formatted text.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="DocLimitations" type="StringLength1to64" minOccurs="0" maxOccurs="9">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to indicate any limitations on the document (e.g. as a person may only be allowed to spend a max of 30 days in country on a visitor's visa).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdditionalPersonNames" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A container for additional person names.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="AdditionalPersonName" type="StringLength1to64" maxOccurs="99">
							<xs:annotation>
								<xs:documentation xml:lang="en">The name of an additional person listed on this document.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DonationType" mixed="true">
		<xs:annotation>
			<xs:documentation>Provides information about donations made during a booking.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Language" type="xs:language">
				<xs:annotation>
					<xs:documentation xml:lang="en">The localized error response language. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GDS_ID" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The ID of the GDS (global distribution service) providing the donation.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="AskForReceiptInd" type="xs:boolean">
				<xs:annotation>
					<xs:documentation xml:lang="en">If true, the donor wants a donation receipt. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CountryCode" type="ISO3166">
				<xs:annotation>
					<xs:documentation xml:lang="en">The 2 character ISO3166 country code of the donor.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StateCode" type="StateProvCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The origin state of the donor.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrontOfficeInfo" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The identifying fields for the front office for a Massive Good donation: Product Name, Product version, Office ID and Corporate ID.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ProductName" type="xs:string">
							<xs:annotation>
								<xs:documentation xml:lang="en">The Massive Good/ Amadeus Donation Service product name.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ProductVersion" type="xs:string">
							<xs:annotation>
								<xs:documentation xml:lang="en">The Massive Good/ Amadeus Donation Service product version.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OfficeID" type="xs:string">
							<xs:annotation>
								<xs:documentation xml:lang="en">The Massive Good/ Amadeus Donation Service office ID.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CorporateID" type="xs:string">
							<xs:annotation>
								<xs:documentation xml:lang="en">The Massive Good/ Amadeus Donation Service corporate ID.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CreditCardInfo">
				<xs:annotation>
					<xs:documentation xml:lang="en">Donation credit card information.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="PaymentCardType">
							<xs:sequence>
								<xs:element name="Currency" type="AlphaLength3">
									<xs:annotation>
										<xs:documentation xml:lang="en">The donation currency code (ISO 4217.) </xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="DonationAmount" type="Money">
									<xs:annotation>
										<xs:documentation xml:lang="en">The donation amount.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="DonorInfo" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Donor information, including Email Address, First Name, Last Name, Street Address, City and Zip Code.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Name" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The donor name.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="PersonNameType"/>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="ContactInfo" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Donor address and email address information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="AddressType">
										<xs:sequence>
											<xs:element name="EmailAddress" type="xs:string" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">The donor email address.</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EmailType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Electronic email addresses, in IETF specified format.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength1to128">
				<xs:sequence>
					<xs:element name="ShareSynchInd" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
					<xs:element name="ShareMarketInd" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
					<xs:element name="DefaultInd" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">When true, indicates a default value should be used.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EmailType" type="OTA_CodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Defines the purpose of the e-mail address (e.g. personal, business, listserve). Refer to OpenTravel Code List Email Address Type (EAT).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RPH" type="RPH_Type" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Used elsewhere in the message to reference this specific email address.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Remark" type="StringLength1to128" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">A remark associated with the e-mail address.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EmployeeInfoType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Employment identification; using an employee ID number, title, level within the company, and an indication of their status (e.g., active, retired, on leave, or terminated from employment).  Additional information about an employee can be entered into the element, including the name of the employee, if it differs from the person name identified as a customer or contact.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength0to64">
				<xs:sequence>
					<xs:element name="EmployeeId" type="StringLength1to16" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Identifier assigned to the employee.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EmployeeLevel" type="StringLength1to16" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Level in employer organization (e.g. seniority) that coveys privileges.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EmployeeTitle" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Title of employee in the employer company that conveys rank or privileges.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EmployeeStatus" type="OTA_CodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Status of employment. Refer to OpenTravel Code List Employee Status (EMP).</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EquipmentType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Specifies the aircraft equipment type.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength0to64">
				<xs:sequence>
					<xs:element name="AirEquipType" type="StringLength3" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">This is the 3 character IATA code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ChangeofGauge" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Indicates there is an equipment change.</xs:documentation>
							<xs:documentation xml:lang="en">
								<LegacyDefaultValue>false</LegacyDefaultValue>
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ErrorType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Standard way to indicate that an error occurred during the processing of an OpenTravel message. If the message successfully processes, but there are business errors, those errors should be passed in the warning element.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="FreeTextType">
				<xs:sequence>
					<xs:element name="Type" type="OTA_CodeType">
						<xs:annotation>
							<xs:documentation xml:lang="en">The Error element MUST contain the Type attribute that uses a recommended set of values to indicate the error type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type ="Unknown". Refer to OpenTravel Code List Error Warning Type (EWT).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ShortText" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">An abbreviated version of the error in textual format.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Code" type="OTA_CodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this refers to a table of coded values exchanged between applications to identify errors or warnings. Refer to OpenTravel Code List Error Codes (ERR).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DocURL" type="xs:anyURI" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this URL refers to an online description of the error that occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Status" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, recommended values are those enumerated in the OTA_ErrorRS, (NotProcessed | Incomplete | Complete | Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Tag" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RecordID" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NodeList" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">An XPath expression that selects all the nodes whose data caused this error. Further, this expression should have an additional contraint which contains the data of the node. This will provide the offending data back to systems that cannot maintain the original message.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ErrorsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection of errors that occurred during the processing of a message.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Error" type="ErrorType" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">An error that occurred during the processing of a message.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FeeType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Used for non-tax fees and charges (e.g. service charges) .</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TaxInclusive" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates whether taxes are included when figuring the fees.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="AmountDeterminationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Code" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Code identifying the fee (e.g.,agency fee, municipality fee). Refer to OpenTravel Code List Fee Tax Type (FTT).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Percent" type="Percentage" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Fee percentage; if zero, assume use of the Amount attribute (Amount or Percent must be a zero value).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EffectiveDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpireDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpireDateExclusiveIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MandatoryIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, indicates the fee is mandatory. When false, the fee is not mandatory.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RPH" type="RPH_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">An index code to identify an instance in a collection of like items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChargeUnit" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This is the unit for which the charge applies (e.g. room, person, seat). Refer to OpenTravel Code List Charge Type (CHG).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChargeFrequency" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This is the timeframe used to apply the charge during the course of the reservation (e.g. Daily, Weekly, Stay). Refer to OpenTravel Code List Charge Type (CHG).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChargeUnitExempt" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Number of units permitted before charges are applied (e.g., more than 4 persons).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChargeFrequencyExempt" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">ChargeFrequency exemptions before charges are applied (e.g. after 2 nights).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxChargeUnitApplies" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Maximum number of Units for which the charge will be applied (e.g., waive charges above 10 rooms).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxChargeFrequencyApplies" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Maximum number of times the charge will be applied (e.g. waive charges above 30 nights).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TaxableIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, indicates that the fee is subject to tax.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Taxes" type="TaxesType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used for taxes on the associated fee.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="ParagraphType" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Text description of the fees in a given language.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FeesType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection of fees.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Fee" type="FeeType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">Fee Amount that is applied to the rate. Fees are used for non tax amounts like service charges.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FlightSegmentBaseType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Construct for holding a flight segment availability object.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DepartureDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The date and time of the flight segment departure.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ArrivalDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Specifies the arrival date and time of a flight.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StopQuantity" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The number of stops the flight makes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RPH" type="RPH_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Reference place holder for this flight segment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InfoSource" type="InfoSourceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to specify the source of the data being exchanged as determined by trading partners.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DepartureAirport" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Departure point of flight segment.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="LocationCode" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location code used to identify a specific airport.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CodeContext" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifies the context of the identifying code, such as IATA, ARC, or internal code, etc.</xs:documentation>
								<xs:documentation xml:lang="en">
									<LegacyDefaultValue>IATA</LegacyDefaultValue>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Terminal" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Arrival or departure terminal (e.g., Concourse A)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Gate" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Arrival or departure gate (e.g., B12)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ArrivalAirport" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Arrival point of flight segment.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="LocationCode" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location code used to identify a specific airport.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CodeContext" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifies the context of the identifying code, such as IATA, ARC, or internal code, etc.</xs:documentation>
								<xs:documentation xml:lang="en">
									<LegacyDefaultValue>IATA</LegacyDefaultValue>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Terminal" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Arrival or departure terminal (e.g., Concourse A)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Gate" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Arrival or departure gate (e.g., B12)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OperatingAirline" type="OperatingAirlineType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The operating airline of the flight if it is a codeshare flight.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Equipment" type="EquipmentType" minOccurs="0" maxOccurs="2">
				<xs:annotation>
					<xs:documentation xml:lang="en">The type of equipment used for the flight.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FormattedTextSubSectionType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Used to provide subsection formatted text information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SubTitle" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This attribute may be used to provide a title for a sub-section of the formatted free text. A sub-section may have multiple related paragraphs of information. For example, if used to provide driving directions there may be multiple paragraphs, and these paragraphs may be grouped into a sub-section called "Driving from the North". A second subsection may be titled "Driving from the South", and may contain several paragraphs to describe the driving directions when driving from the south.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubCode" type="StringLength1to8" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">An optional code that may be assigned to this sub-section of formatted free text.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubSectionNumber" type="Numeric1to999" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This attribute may be used when there is a need to number all of the sub-sections of information that is to be presented.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph" type="ParagraphType" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details and content of a paragraph for a formatted text message.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FormattedTextTextType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Provides text and indicates whether it is formatted or not.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="__Dummy">
				<xs:sequence>
					<xs:element name="Formatted" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Textual information, which may be formatted as a line of information, or unformatted, as a paragraph of text.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Language" type="xs:language" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Language identification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TextFormat" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Indicates the format of text used in the description e.g. unformatted  or html.</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FormattedTextType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Collection of formatted text sub sections.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Title" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This attribute may be used to provide a title for the formatted free text, for example, Driving Directions. Each of the sub sections that are defined to be a part of the formatted text would provide detailed information about the subject identified by the title.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Language" type="xs:language" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The language in which the content is provided.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubSection" type="FormattedTextSubSectionType" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">Subsection formatted text information.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FreeTextType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Textual information to provide descriptions and/or additional information.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="__Dummy">
				<xs:sequence>
					<xs:element name="Language" type="xs:language" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Language identification.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ImageDescriptionType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Describes an image item.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Category" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Specifies the image category. Refer to OpenTravel Code list Picture Category Code (PIC).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ImageFormat" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">A set of images for a given category which may be provided in multiple formats.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="ImageItemType">
							<xs:sequence>
								<xs:element name="ContentID" type="StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The content ID of a file attachment with the prefix 'cid:'. The value of this can be used to retrieve the corresponding attachment by the receiving system.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Title" type="StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The title of the multimedia object.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Author" type="StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The author of the multimedia object.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CopyrightNotice" type="StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">A copyright notice for the multimedia object.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CopyrightOwner" type="StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Owner of the copyright for the multimedia content.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CopyrightStart" type="DateOrDateTimeType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The start date for which the multimedia content rights are claimed.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CopyrightEnd" type="DateOrDateTimeType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The end date for which the multimedia content rights are claimed.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="EffectiveStart" type="DateOrDateTimeType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The start date for which the content is considered valid.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="EffectiveEnd" type="DateOrDateTimeType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The end date for which the content is considered valid.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ApplicableStart" type="DateOrMonthDay" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Start month and day or date for which the multimedia content is relevent (e.g. the start of a season or the start of an event). When a year is not used (i.e. only the month and day) it signifies a recurring event.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ApplicableEnd" type="DateOrMonthDay" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">End month and day or date for which the multimedia content is relevent (e.g. the end of a season or the start of an event). When a year is not used (i.e. only the month and day) it signifies a recurring event.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="RecordID" type="StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Uniquely identifies this file in the message.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="SourceID" type="StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Unique identifier for the source of the multimedia object (e.g., the original image file).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Language" type="xs:language" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The language in which the image text is provided.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Format" type="OTA_CodeType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Identifies the format of an image. Refer to OpenTravel Code List Content Format Code (CFC).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="FileName" type="StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The name of the image file.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="FileSize" type="xs:positiveInteger" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The size of the image file.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="DimensionCategory" type="StringLength1to16" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Associates the image size to a given category (e.g., 70x70, 100x100, 480x480, thumbnail). For example, if an image with a dimension of 72x73 is sent, it may be categorized as a 70x70 image.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="IsOriginalIndicator" type="xs:boolean" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">When true, the image is the original file and format. When false, the image is not the original file and format.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Description" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">The description associated with the image in a specific language.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="FormattedTextTextType">
							<xs:sequence>
								<xs:element name="Caption" type="StringLength1to128" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The caption associated to a specific image category which can be provided in different languages.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ImageItemsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Collection of image items.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ImageItem" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">Image of a given category.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="ImageDescriptionType">
							<xs:sequence>
								<xs:element name="CreateDateTime" type="xs:dateTime" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Time stamp of the creation.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CreatorID" type="StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="LastModifyDateTime" type="xs:dateTime" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Time stamp of last modification.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="LastModifierID" type="StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Identifies the last software system or person to modify a record.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="PurgeDate" type="xs:date" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Date an item will be purged from a database (e.g., from a live database to an archive).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Removal" type="xs:boolean" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">If true, this item is obsolete and should be removed from the receiving system.</xs:documentation>
										<xs:documentation xml:lang="en">
											<LegacyDefaultValue>false</LegacyDefaultValue>
										</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Version" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The version of the image item.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ID" type="StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ImageItemType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Details for an image of a given category.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UnitOfMeasureCode" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The unit of measure for the image item. Refer to OpenTravel Code list Unit of Measure (UOM).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Width" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The width of the image item (unit specified by unit of measure).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Height" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The height of the image item (unit specified by unit of measure).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="URL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">URL of the multimedia item for a specific format.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ItemSearchCriterionType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Identifies the criterion for a search.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ExactMatch" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Values of "true" or "false", indicating whether the string of the search value must be an exact match.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ImportanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">An enumerated list, indicating the level of importance of the search criterion. Acceptable values are "Mandatory", "High", "Medium", or "Low."</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Ranking" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Defines a ranking scale expressed as integers; meaning and scale are based on individual implementations.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Position" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The Position element contains three attributes, Latitude, Longitude, and Altitude, used to indicate the geographic location(s) requested by the search, expressed in notation specified by ISO standard 6709. It is likely that only the first two attributes, Latitude and Longitude, would be needed to define a geographic area.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Latitude" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The measure of the angular distance on a meridian north or south of the equator.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Longitude" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The measure of the angular distance on a meridian east or west of the prime meridian.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Altitude" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The height of an item, typically above sea level.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AltitudeUnitOfMeasureCode" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provides the unit of measure for the altitude (e.g., feet, meters, miles, kilometers). Refer to OpenTravel Code List Unit of Measure Code (UOM).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PositionAccuracy" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the accuracy of the propertyâs geo-coding, since the propertyâs longitude and latitude may not always be exact. Refer to OpenTravel Code List Position Accuracy Code (PAC).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Address" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Uses any part of address information, such as street name, postal code, or country code.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="AddressType">
							<xs:sequence>
								<xs:element name="SameCountryInd" type="xs:boolean" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">When true, only locations in the same country as the specified city's country should be selected.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="AddressSearchScope" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Determines how the keywords specified in the Address element will be processed.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Telephone" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Telephone number(s) used in the search.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ShareSynchInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ShareMarketInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="PhoneLocationType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Describes the location of the phone, such as Home, Office, Property Reservation Office, etc. Refer to OpenTravel Code List Phone Location Type (PLT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneTechType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc. Refer to OpenTravel Code List Phone Technology Type (PTT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneUseType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening). Refer to OpenTravel Code List Phone Use Type (PUT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CountryAccessCode" type="NumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code assigned by telecommunications authorities for international country access identifier.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AreaCityCode" type="NumericStringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code assigned for telephones in a specific region, city, or area.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneNumber" type="StringLength1to32">
							<xs:annotation>
								<xs:documentation xml:lang="en">Telephone number assigned to a single location.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Extension" type="NumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Extension to reach a specific party at the phone number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PIN" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Additional codes used for pager or telephone access rights.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Remark" type="StringLength1to128" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A remark associated with the telephone number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="FormattedInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Specifies if the associated data is formatted or not. When true, then it is formatted; when false, then not formatted.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RefPoint" minOccurs="0" maxOccurs="999">
				<xs:annotation>
					<xs:documentation xml:lang="en">The Reference Point element allows for a search by proximity to a designated reference point by name.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="StringLength0to64">
							<xs:sequence>
								<xs:element name="StateProv" type="StateProvCodeType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The state or province in which the reference point is located.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CountryCode" type="ISO3166" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The country in which the reference point is located.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Code" type="StringLength1to8" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Any code used to specify an item, for example, type of traveler, service code, room amenity, etc.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CodeContext" type="StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Identifies the source authority for the code.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="URI" type="xs:anyURI" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Identifies the location of the code table.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Quantity" type="xs:nonNegativeInteger" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Used to define the quantity for an associated element or attribute.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="RefPointType" type="OTA_CodeType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Indicates the type of location being referenced (e.g., Airport, Hotel). Refer to the OpenTravel Code table Index Point Code (IPC).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Name" type="StringLength1to128" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The name of the reference point.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CityName" type="StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The name of the city associated with this reference point.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="CodeRef" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the location of points of interest.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="LocationType">
							<xs:sequence>
								<xs:element name="VicinityCode" type="OTA_CodeType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Used to identify the vicinity of the location. Refer to OpenTravel Codelist Vehicle Where at Facility (VWF).</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="HotelRef" minOccurs="0" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the detail of hotel reference information.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ChainCode" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code that identifies a hotel chain or management group. The hotel chain code is decided between vendors. This attribute is optional if the hotel is an independent property that can be identified by the HotelCode attribute.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="BrandCode" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A code that identifies the brand or flag of a hotel, often used for independently-owned or franchised properties who are known by a specific brand.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="HotelCode" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code that uniquely identifies a single hotel property. The hotel code is decided between vendors.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="HotelCityCode" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The IATA city code; for example DCA, ORD.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="HotelName" type="StringLength1to128" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A text field used to communicate the proper name of the hotel.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="HotelCodeContext" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A text field used to communicate the context (or source of - ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ChainName" type="StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The name of the hotel chain (e.g., Hilton, Marriott, Hyatt, Starwood).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="BrandName" type="StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The name of a brand of hotels (e.g., Courtyard, Hampton Inn).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AreaID" type="NumericStringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">An identifier of an area as defined by a hotel reservation system.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SegmentCategoryCode" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Used to search for hotels within a particular market segment. Refer to OpenTravel Code Segment Category Code Type (SEG).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PropertyClassCode" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Refer to OpenTravel Code list OpenTravel Code List Property Class Type (PCT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ArchitecturalStyleCode" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Refer to OpenTravel Code List Architectural Style Code (ARC).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SupplierIntegrationLevel" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The level of integration of a property to provide automated transaction information. The lower the number, the higher the integration (e.g., a 1 means the supplier has the highest level of integration automation).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LocationCategoryCode" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Used to search for hotels in a specific location category (e.g. downtown, airport or suburban, etc.). Refer to OpenTravel Code List Location Category Codes (LOC).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExtendedCitySearchIndicator" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true indicates the search should be performed beyond the hotel city code, typically this could include neighboring cities to the specified hotel city code.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Radius" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to specify the extent of a search area. The extent is relative to an element (position, address, hotel reference, etc.) present in this ItemSearchCriterionType that specifies a location.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Distance" type="NumericStringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">An optional attribute indicating the distance to/from a reference point. When used in conjunction with DistanceMax, this represents the minimum distance.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DistanceMeasure" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When the Distance attribute contains a value, (presumably a numerical value), the unit of measure is a string value that indicate what units are used for the value.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Direction" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">An optional string value used to indicate the compass point(s) direction, e.g.: S, SE (South, Southeast), FROM the Reference Point TO the hotel location if the search is not a full circumference from the reference point.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DistanceMax" type="NumericStringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">An optional attribute indicating the maximum distance to/from a reference point.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="UnitOfMeasureCode" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The unit of measure in a code format. Refer to OpenTravel Code List Unit of Measure Code (UOM).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="MapArea" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provides coordinates used to define the area of a map.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="NorthLatitude" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The latitude of the northern boundary of the map.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SouthLatitude" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The latitude of the southern boundary of the map.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="EastLongitude" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The longitude of the eastern boundary of the map.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="WestLongitude" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The longitude of the western boundary of the map.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AdditionalContents" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A collection of Additional Content elements.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="AdditionalContent" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation xml:lang="en">Describes the specific content requested.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="ContentGroupCode" type="OTA_CodeType">
										<xs:annotation>
											<xs:documentation xml:lang="en">When used, the response message will be filtered to return only the content that was requested. Refer to OpenTravel code list Information Type (INF).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CodeDetail" type="StringLength1to128" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">May be used to give further detail on the code.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Removal" type="xs:boolean" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">If true, this item is obsolete and should be removed from the receiving system.</xs:documentation>
											<xs:documentation xml:lang="en">
												<LegacyDefaultValue>false</LegacyDefaultValue>
											</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LocationGeneralType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Provides high-level information regarding a location.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CityName" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StateProv" type="StateProvType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">State or Province name (e.g., Texas).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CountryName" type="CountryNameType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Country name (e.g., Ireland).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LocationType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Code and optional string to describe a location point.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="__Dummy">
				<xs:sequence>
					<xs:element name="LocationCode" type="StringLength1to16" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">A code used to identify a location.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CodeContext" type="StringLength1to32" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Identifies the context of the identifying code (e.g., IATA, ARC, or internal code).</xs:documentation>
							<xs:documentation xml:lang="en">
								<LegacyDefaultValue>IATA</LegacyDefaultValue>
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MessageAcknowledgementType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Information to acknowledge the receipt of a message.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EchoToken" type="StringLength1to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A reference for additional message identification, assigned by the requesting host system. When a request message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimeStamp" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-20T13:59:38Z).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Target" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to indicate whether the request is for the Test or Production system.</xs:documentation>
					<xs:documentation xml:lang="en">
						<LegacyDefaultValue>Production</LegacyDefaultValue>
					</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="TargetName" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to indicate the name of the Test or Production system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Version" type="xs:decimal">
				<xs:annotation>
					<xs:documentation xml:lang="en">For all OpenTravel versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransactionIdentifier" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A unique identifier to relate all messages within a transaction (e.g. this would be sent in all request and response messages that are part of an on-going transaction).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SequenceNmbr" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application to process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and needs to retrieve messages that were missed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransactionStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This indicates where this message falls within a sequence of messages.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="PrimaryLangID" type="xs:language" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the primary language preference for the message. The human language is identified by ISO 639 codes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AltLangID" type="xs:language" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the alternate language for a customer or message. The human language is identified by ISO 639 codes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RetransmissionIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, indicates the message is being re-sent after a failure. It is recommended that this attribute is used (i.e., set to TRUE) only when a message is retransmitted.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CorrelationID" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Allow end-to-end correlation of log messages with the corresponding Web service message throughout the processing of the Web service message.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:sequence>
					<xs:element name="Success" type="SuccessType">
						<xs:annotation>
							<xs:documentation xml:lang="en">Returning an empty element of this type indicates the successful processing of an OpenTravel message. This is used in conjunction with Warnings to report any warnings or business errors.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Warnings" type="WarningsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Used when a message has been successfully processed to report any warnings or business errors that occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:element name="Errors" type="ErrorsType">
					<xs:annotation>
						<xs:documentation xml:lang="en">Indicates an error occurred during the processing of an OpenTravel message. If the message successfully processes, but there are business errors, those errors should be passed in the warning element.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="UniqueID" type="UniqueID_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">May be used to return the unique id from the request message.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ota_TPA_Extensions" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MonetaryRuleType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">This defines the information pertaining to rules and amounts associated with these rules.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength0to255">
				<xs:sequence>
					<xs:element name="Amount" type="Money" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RuleType" type="OTA_CodeType">
						<xs:annotation>
							<xs:documentation xml:lang="en">Refer to OpenTravel Code List Rule Type (RUL).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Percent" type="Percentage" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The percent applicable to the monetary rule.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DateTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The date and time applicable to this monetary rule.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PaymentType" type="OTA_CodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Refer to OpenTravel Code List Payment Type (PMT).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RateConvertedInd" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">When true, indicates the amount was converted from another currency.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AbsoluteDeadline" type="TimeOrDateTimeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Defines the absolute deadline. Either this or the offset attributes may be used.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="OffsetTimeUnit" type="TimeUnitType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The units of time, e.g.: days, hours, etc., that apply to the deadline.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="OffsetUnitMultiplier" type="Numeric0to999" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The number of units of DeadlineTimeUnit.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="OffsetDropTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">An enumerated type indicating when the deadline drop time goes into effect.</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MultimediaDescriptionsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Contains multimedia item(s).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LastUpdated" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The date and time when the collection of multimedia information was last updated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultimediaDescription" type="MultimediaDescriptionType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">A multimedia item.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MultimediaDescriptionType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Describes multimedia item(s).</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0">
			<xs:element name="InfoCode" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to designate a particular type of description such as marketing. Refer to OpenTravel Code List Information Type (INF).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdditionalDetailCode" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to designate a particular type of additional information. Refer to OpenTravel Code List Additional Detail Type (ADT).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ID" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastUpdated" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The date and time when the multimedia information was last updated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Version" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The version of the content, typically in the form of "1" or "2.3."</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VideoItems" type="VideoItemsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A collection of video items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ImageItems" type="ImageItemsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A collection of image items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextItems" type="TextItemsType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A collection of text items.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OperatingAirlineType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Identifies the operating carrier and flight number.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="CompanyNameType">
				<xs:sequence>
					<xs:element name="FlightNumber" type="FlightNumberType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The flight number as assigned by the operating carrier.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResBookDesigCode" type="UpperCaseAlphaLength1to2" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The reservation booking designator of the operating carrier when different from the marketing carrier.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="OperationScheduleType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Details of an operating schedule (e.g. a golf tee time may be more expensive during peak hours v. off peak hours).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Start" type="DateOrTimeOrDateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The starting value of the time span.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Duration" type="DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The duration datatype represents a combination of year, month, day and time values representing a single duration of time, encoded as a single string.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="End" type="DateOrTimeOrDateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The ending value of the time span.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OperationTimes" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A collection of OperationTimes.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="OperationTime" maxOccurs="999">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provides operating times of a facility.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="Mon" type="xs:boolean" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">When true, apply to Monday.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Tue" type="xs:boolean" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">When true, apply to Tuesday.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Weds" type="xs:boolean" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">When true, apply to Wednesday.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Thur" type="xs:boolean" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">When true, apply to Thursday.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Fri" type="xs:boolean" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">When true, apply to Friday.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Sat" type="xs:boolean" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">When true, apply to Saturday.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Sun" type="xs:boolean" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">When true, apply to Sunday.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Start" type="DateOrTimeOrDateTimeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The starting value of the time span.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Duration" type="DurationType" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The duration datatype represents a combination of year, month, day and time values representing a single duration of time, encoded as a single string.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="End" type="DateOrTimeOrDateTimeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The ending value of the time span.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="AdditionalOperationInfoCode" type="OTA_CodeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Used to provide additional information regarding operation times (e.g., after hours operations, restricted times). Refer to OpenTravel Code List Additional Operation Info (OPR).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Frequency" type="StringLength1to64" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The frequency with which this operation occurs (e.g., 'on the hour', 'on the half hour').</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Text" type="StringLength0to64" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Textual information for this period of operation.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OperationSchedulesType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Collection of operation schedules.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Start" type="DateOrTimeOrDateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The starting value of the time span.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Duration" type="DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The duration datatype represents a combination of year, month, day and time values representing a single duration of time, encoded as a single string.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="End" type="DateOrTimeOrDateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The ending value of the time span.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OperationSchedule" type="OperationScheduleType" maxOccurs="999">
				<xs:annotation>
					<xs:documentation xml:lang="en">The OperationSchedule class defines the dates and hours of operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OperationSchedulePlusChargeType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">This allows a charge to be associated with operating times (e.g. a golf tee time may be more expensive during peak hours v. off peak hours).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="OperationScheduleType">
				<xs:sequence>
					<xs:element name="Charge" type="FeeType" minOccurs="0" maxOccurs="5">
						<xs:annotation>
							<xs:documentation xml:lang="en">Cost associated with an amenity.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="OperationSchedulesPlusChargeType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">The OperationSchedule class defines the dates and hours of operation in addition the charges that may apply.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="OperationSchedule" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">The OperationSchedule class defines details the dates and hours of operation.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="OperationSchedulePlusChargeType">
							<xs:sequence>
								<xs:element name="Name" type="StringLength0to128" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Used to provide a name for a sub-operation (e.g. an activity or event).</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OrdersType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Provides the details of one or more orders.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="OrderType" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the type of orders.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscountCode" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A discount code that applies to the orders.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VendorPurchaseOrderID" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The purchase order number of a sales intermediary.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderID" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The identification number associated to the orders.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Order" minOccurs="0" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">Information pertaining to a specific order.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="OrderType" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifies the type of order.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OrderID" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The identification number associated to the orders.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ListOfRecipientRPH" type="ListOfRPH" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The recipient(s) to whom the order pertains.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Products" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A collection of products.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="Product" minOccurs="0" maxOccurs="99">
										<xs:annotation>
											<xs:documentation xml:lang="en">The details associated to a specific product.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="ProductIssueDate" type="DateOrDateTimeType" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">The date or date and time that the product was issued.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="ProductID" type="StringLength1to32" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">An identification number associated to the specific product.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="ProductType" type="StringLength1to64" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">Identifies the type of product being purchased.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="ProductQuantity" type="xs:nonNegativeInteger" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">The number of the specific product being purchased.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="ProductSerialNumber" type="StringLength1to32" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">The serial number of the specific product.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="DiscountCode" type="StringLength1to16" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">The discount code that applies to the specific product.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="Amount" type="Money" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="Status" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">The status of the product. This attribute would primarily be used in the response message to identify the status of the item being purchased.</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="ListOfRecipientRPH" type="ListOfRPH" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">The recipient(s) to whom the product pertains.</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OriginDestinationInformationType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Origin and Destination location, and time information for the request. Also includes the ability to specify a connection location for the search.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="TravelDateTimeType">
				<xs:sequence>
					<xs:element name="OriginLocation">
						<xs:annotation>
							<xs:documentation xml:lang="en">Travel Origin Location - for example, air uses the IATA 3 letter code.</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:complexContent>
								<xs:extension base="LocationType">
									<xs:sequence>
										<xs:element name="MultiAirportCityInd" type="xs:boolean" minOccurs="0">
											<xs:annotation>
												<xs:documentation xml:lang="en">If true, other airports within this city may be considered (i.e., EWR, JFK when origin location is LGA.)</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="AlternateLocationInd" type="xs:boolean" minOccurs="0">
											<xs:annotation>
												<xs:documentation xml:lang="en">If true, alternate locations may be considered.</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
					<xs:element name="DestinationLocation">
						<xs:annotation>
							<xs:documentation xml:lang="en">Travel Destination Location - for example, air uses the IATA 3 letter code.</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:complexContent>
								<xs:extension base="LocationType">
									<xs:sequence>
										<xs:element name="MultiAirportCityInd" type="xs:boolean" minOccurs="0">
											<xs:annotation>
												<xs:documentation xml:lang="en">If true, other airports within this city may be considered (i.e., EWR, JFK when origin location is LGA.)</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="AlternateLocationInd" type="xs:boolean" minOccurs="0">
											<xs:annotation>
												<xs:documentation xml:lang="en">If true, alternate locations may be considered.</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
					<xs:element name="ConnectionLocations" type="ConnectionType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Travel Connection Location - for example, air uses the IATA 3 letter code.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="POS_Type" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Point of Sale (POS) identifies the party or connection channel making the request.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Source" type="SourceType" maxOccurs="10">
				<xs:annotation>
					<xs:documentation xml:lang="en">This holds the details about the requestor. It may be repeated to also accommodate the delivery systems.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ParagraphType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">An indication of a new paragraph for a sub-section of a formatted text message.</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Name" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">In many cases the description repeats, this will allow you to define the information that is being sent, typically used when multiple occurrences of ParagraphType are being sent.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ParagraphNumber" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The sequence number for the paragraph.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreateDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Time stamp of the creation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreatorID" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastModifyDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Time stamp of last modification.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastModifierID" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the last software system or person to modify a record.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PurgeDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Date an item will be purged from a database (e.g., from a live database to an archive).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Language" type="xs:language" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Language identification.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Text" type="FormattedTextTextType">
				<xs:annotation>
					<xs:documentation xml:lang="en">Formatted text content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="en">An image for this paragraph.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="URL" type="xs:anyURI">
				<xs:annotation>
					<xs:documentation xml:lang="en">A URL for this paragraph.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem">
				<xs:annotation>
					<xs:documentation xml:lang="en">Formatted text content and an associated item or sequence number.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="FormattedTextTextType">
							<xs:sequence>
								<xs:element name="ListItem" type="xs:integer" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The item or sequence number.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PaymentCardType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Identification about a specific credit card.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShareSynchInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="ShareMarketInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="CardType" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the type of magnetic striped card. Refer to OpenTravel Code List Card Type (CDT).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CardCode" type="PaymentCardCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The 2 character code of the credit card issuer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CardNumber" type="NumericStringLength1to19" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Credit card number embossed on the card.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SeriesCode" type="NumericStringLength1to8" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Verification digits printed on the card following the embossed number. This may also accommodate the customer identification/batch number (CID), card verification value (CVV2 ), card validation code number (CVC2) on credit card.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EffectiveDate" type="MMYYDate" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpireDate" type="MMYYDate" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaskedCardNumber" type="AlphaNumericStringLength1to19" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">May be used to send a concealed credit card number (e.g., xxxxxxxxxxxx9922).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CardHolderRPH" type="RPH_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Provides a reference pointer that links the payment card to the payment card holder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExtendPaymentIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, the credit card company is requested to delay the date on which the amount of this transaction is applied to the customer's account.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CountryOfIssue" type="ISO3166" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Code for the country where the credit card was issued.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExtendedPaymentQuantity" type="Numeric1to999" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A code used to specifiy the installment payment plan or number of payment installments.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SignatureOnFileIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, the cardholder signature is on file.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompanyCardReference" type="AlphaNumericStringLength1to19" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Reference to the company sponsor for this particular card (e.g. a Universal Airline Travel Plan (UATP) card or any loyalty scheme sponsored card).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Remark" type="StringLength1to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A remark associated with this payment card.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EncryptionKey" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Database key necessary to retrieve the full credit card (compliant with PCI DSS standards).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CardHolderName" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Name of the card holder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CardIssuerName" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Issuer of the card.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="BankID" type="StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code of bank issuing the card.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Address" type="AddressType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Card holder's address used for additional authorization checks.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Telephone" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation>Card holder's telephone number used for additional authorization checks.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ShareSynchInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ShareMarketInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="PhoneLocationType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Describes the location of the phone, such as Home, Office, Property Reservation Office, etc. Refer to OpenTravel Code List Phone Location Type (PLT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneTechType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc. Refer to OpenTravel Code List Phone Technology Type (PTT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneUseType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening). Refer to OpenTravel Code List Phone Use Type (PUT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CountryAccessCode" type="NumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code assigned by telecommunications authorities for international country access identifier.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AreaCityCode" type="NumericStringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code assigned for telephones in a specific region, city, or area.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneNumber" type="StringLength1to32">
							<xs:annotation>
								<xs:documentation xml:lang="en">Telephone number assigned to a single location.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Extension" type="NumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Extension to reach a specific party at the phone number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PIN" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Additional codes used for pager or telephone access rights.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Remark" type="StringLength1to128" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A remark associated with the telephone number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="FormattedInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Specifies if the associated data is formatted or not. When true, then it is formatted; when false, then not formatted.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DefaultInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates a default value should be used.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RPH" type="RPH_Type" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Used elsewhere in the message to reference a specific telephone number (including faxes).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Email" type="EmailType" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation>Card holder's email address(es) used for additional authorization checks.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustLoyalty" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation>Customer loyalty information used for additional authorization checks.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ShareSynchInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ShareMarketInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ProgramID" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifier to indicate the company owner of the loyalty program.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MembershipID" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Unique identifier of the member in the program (membership number, account number, etc.).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TravelSector" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifies the travel sector. Refer to OpenTravel Code List Travel Sector (TVS).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LoyalLevel" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates special privileges in program assigned to individual.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LoyalLevelCode" type="Numeric1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provides a numeric code assigned to a particular loyalty level.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SingleVendorInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates if program is affiliated with a group of related offers accumulating credits.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="SignupDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates when the member signed up for the loyalty program.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="EffectiveDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExpireDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExpireDateExclusiveIndicator" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RPH" type="RPH_Type" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A reference placeholder for this loyalty membership.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="VendorCode" type="ListOfStringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicate the partner(s)/vendor(s) for which the customer loyalty number is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PrimaryLoyaltyIndicator" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates this is the primary customer loyalty program and when false, indicates this is not the primary customer loyalty program.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AllianceLoyaltyLevelName" type="StringLength1to128" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the alliance loyalty level (e.g.,OneWorld  uses Emerald, Ruby, etc and SkyTeam uses Elite, etc.)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CustomerType" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Original assessment of the customer by the travel agent.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CustomerValue" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The supplier's ranking of the customer (e.g., VIP, numerical ranking).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Password" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The password for the member in the program. </xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SignatureOnFile" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates if the signature is authorized as a form of guarantee. In some countries, the customer can sign the payment card slip as a form of guarantee.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="SignatureOnFileIndicator" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates a signature has been obtained.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="EffectiveDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExpireDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExpireDateExclusiveIndicator" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="MagneticStripe" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Card Magnetic Stripe Data as defined by ISO 7813 for banking cards.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Track1" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The binary magnetic stripe data for track 1.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Track2" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The binary magnetic stripe data for track 2.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Track3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The binary magnetic stripe data for track 3.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PaymentDetailType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Details of payment.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="PaymentFormType">
				<xs:sequence>
					<xs:element name="PaymentType" type="OTA_CodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Used to specify the form of payment. Refer to OpenTravel Code List Payment Type (PMT).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SplitPaymentInd" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">When true, indicates that more than one form of payment will be used.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AuthorizedDays" type="Numeric1to999" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Number of days being charged to this payment method.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PrimaryPaymentInd" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">When true, indicates this is the primary method of payment.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PaymentAmount" minOccurs="0" maxOccurs="2">
						<xs:annotation>
							<xs:documentation>Provides the monetary amount due for payment as quoted. A second instance could show the actual paid amount in a different currency.</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="Amount" type="Money" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ApprovalCode" type="StringLength1to16" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The approval code returned as part of an authorization process.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="RefundCalcMethod" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Specifies the method of how the refund was calculated.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="Commission" type="CommissionType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Used to specify the commission details when paid to a third or internal  party.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PaymentFormType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Ways of providing funds and guarantees for travel by the individual.</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0">
			<xs:element name="ShareSynchInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="ShareMarketInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="CostCenterID" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A reference to identify the billing department for allocating cost of travel to company account.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RPH" type="RPH_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Provides a reference to a specific form of payment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PaymentTransactionTypeCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This is used to indicate either a charge, reserve (deposit) or refund.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="GuaranteeIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, indicates this represents a guarantee rather than a payment form.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GuaranteeTypeCode" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to specify the method of guarantee. Refer to OpenTravel Code List Payment Type (PMT).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GuaranteeID" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Provides the identifier as specified by the GuaranteeTypeCode (e.g., Corporate ID or IATA number).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Remark" type="StringLength1to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A remark associated with the payment form.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PaymentCard" type="PaymentCardType">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details of a debit or credit card.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BankAcct" type="BankAcctType">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details of a bank account.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DirectBill" type="DirectBillType">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details of a direct billing arrangement.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Voucher">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details of a paper or electronic document indicating prepayment.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="EffectiveDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExpireDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExpireDateExclusiveIndicator" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SeriesCode" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identification of a series of coupons or vouchers identified by serial number(s).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="BillingNumber" type="StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Reference of the billing account which handles the payment transaction.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SupplierIdentifier" type="StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Unique identifier of the electronic voucher, created by the supplier.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Identifier" type="StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Unique identifier of the electronic voucher.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ValueType" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Defines the type of voucher (e.g., full credit or partial credit).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ElectronicIndicator" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates the voucher is electronic. An E-voucher is a value document issued by the Travel Agent for the customer. The e-voucher can be used as a proof of reservation, but more normally, as a full-payment or partial payment.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="LoyaltyRedemption">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details of a loyalty redemption arrangement. This is normally miles or points.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CertificateNumber" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The loyalty redemption certificate identifier.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MemberNumber" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Unique identifier of the member in the program.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ProgramName" type="StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">This identifies the loyalty program.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PromotionCode" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Promotion code is the identifier used by the host to link directly with a specific named advertising campaign. By including the required code, the client is able to gain access to special offers which may have been created for a specifically targeted group via a CRM system or for a wider advertising campaign using Television or press adverts.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PromotionVendorCode" type="ListOfStringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">List of the vendor codes associated with a promotion.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RedemptionQuantity" type="xs:positiveInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The quantity of loyalty units being redeemed.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LoyaltyCertificate" minOccurs="0" maxOccurs="9">
							<xs:annotation>
								<xs:documentation xml:lang="en">A certificate may be needed in order to redeem miles or points. Certificates may be used in combination with each other as part of a reservation.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="ID" type="StringLength1to32" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID_Context" type="StringLength1to32" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Identifies the source of the code that identifies program or promotion within a loyalty scheme.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CertificateNumber" type="StringLength1to32" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The loyalty redemption certificate identifier.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="MemberNumber" type="StringLength1to32" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Unique identifier of the member in the program.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ProgramName" type="StringLength1to64" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">This identifies the loyalty program.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="EffectiveDate" type="xs:date" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ExpireDate" type="xs:date" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ExpireDateExclusiveIndicator" type="xs:boolean" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="NmbrOfNights" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The number of nights of the hotel stay that are used to calculate the redemption amount.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Format" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates what form the certificate is in e.g. Paper or Electronic.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Status" type="StringLength1to16" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Used to define the status of the certificate e.g. Available, Voided, Cancelled, Reserved, Used.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="MiscChargeOrder">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details of a miscellaneous charge order (MCO).</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="TicketNumber" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The ticket number of the miscellaneous charge order (MCO).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OriginalTicketNumber" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The original ticket number in a series if reissuances.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OriginalIssuePlace" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Place where the original ticket was issued.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OriginalIssueDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Date when the original ticket was issued.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OriginalIssueIATA" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">IATA office number, which issued original ticket.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OriginalPaymentForm" type="StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Payment type for the original ticket.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CheckInhibitorType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates if the check digit of the ticket number or the interline agreement has to be checked or not.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="CouponRPHs" type="ListOfRPH" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Gives a list of references to coupon numbers of the ticket which will be taken for payment.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PaperMCO_ExistInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates if a paper or electronic MCO exists.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Ticket">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details of a ticket to be exchanged.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="TicketNumber" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The ticket number which is exchanged.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OriginalTicketNumber" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The original ticket number in a series if reissuances.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OriginalIssuePlace" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Place where the original ticket was issued.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OriginalIssueDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Date when the original ticket was issued.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OriginalIssueIATA" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">IATA office number, which issued original ticket.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OriginalPaymentForm" type="StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Payment type for the original ticket.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CheckInhibitorType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates if the check digit of the ticket number or the interline agreement has to be checked or not.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="CouponRPHs" type="ListOfRPH" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Gives a list of references to coupon numbers of the ticket which will be taken for payment.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ReroutingType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates if the rerouting, which made the exchange necessary was voluntary or involuntary.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ReasonForReroute" type="StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Gives more information about the rerouting.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ConjunctionTicketNbr" minOccurs="0" maxOccurs="16">
							<xs:annotation>
								<xs:documentation xml:lang="en">Conjunction ticket number in case a conjunction ticket is exchanged.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="StringLength1to32">
										<xs:sequence>
											<xs:element name="Coupons" type="ListOfRPH" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">Gives the coupon numbers of the ticket, which will be taken for payment.</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Cash">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to indicate payment in cash.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CashIndicator" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">If true, this indicates cash is being used.</xs:documentation>
								<xs:documentation xml:lang="en">
									<LegacyDefaultValue>true</LegacyDefaultValue>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PaymentRulesType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Collection of payment rules.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PaymentRule" type="MonetaryRuleType" maxOccurs="9">
				<xs:annotation>
					<xs:documentation xml:lang="en">One specific payment rule associated with this reservation. For example, a date by which a deposit must be received.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PersonNameType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">This provides name information for a person.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShareSynchInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="ShareMarketInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="NameType" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Type of name of the individual, such as former, nickname, alternate or alias name. Refer to OpenTravel Code List Name Type (NAM).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NamePrefix" type="StringLength1to16" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation xml:lang="en">Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GivenName" type="StringLength1to64" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Given name, first name or names.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MiddleName" type="StringLength1to64" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation xml:lang="en">The middle name of the person name.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SurnamePrefix" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The surname prefix, e.g "van der", "von", "de".</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Surname" type="StringLength1to64">
				<xs:annotation>
					<xs:documentation xml:lang="en">Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NameSuffix" type="StringLength1to16" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation xml:lang="en">Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NameTitle" type="StringLength1to16" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Degree or honors (e.g., Ph.D., M.D.)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Document" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Document  information for verification purposes and also used for additional filtering for common names.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="DocID" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Unique number assigned by authorities to document.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DocType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the type of document (e.g. Passport, Military ID, Drivers License, national ID, Vaccination Certificate). Refer to OpenTravel Code List Document Type (DOC).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RateQualifierType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">The RateQualifierType complex type describes fully rate information associated with a specific rate quotation, including the description of any promotions that may apply.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TravelPurpose" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to indicate the purpose, whether for business, personal or other. Refer to OpenTravel Code List Travel Purpose (TVP).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RateCategory" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The RateCategory attribute defines a set of valid values for the category of a rate. Typically rates are offered as either Leisure rates or Business (Corporate) rates, with a business rate usually including additional costs such as the cost of insurance, etc.  This set of values defines the rate categories. Refer to OpenTravel Code List Rate Category (RTC).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CorpDiscountNmbr" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This is the vendor specific code used to identify a special rate associated with a specific organization.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromotionCode" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Promotion code is the identifier used by the host to link directly with a specific named advertising campaign. By including the required code, the client is able to gain access to special offers which may have been created for a specifically targeted group via a CRM system or for a wider advertising campaign using Television or press adverts.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromotionVendorCode" type="ListOfStringLength1to8" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">List of the vendor codes associated with a promotion.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RateQualifier" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This is the vendor specific code for rate codes (e.g. WES, 2A, DLY00).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RatePeriod" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The RatePeriod attribute defines the type of rate that may be applied. For example, typically car rental rates differ based upon the duration of the rental, and the actual rate is then expressed in terms of the period of the rental.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="GuaranteedInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, only guaranteed rates should be returned. When false, all rates should be returned.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ArriveByFlight" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates if this rate is only available to those customers who are flying to the vehicle rental location.</xs:documentation>
					<xs:documentation xml:lang="en">
						<LegacyDefaultValue>false</LegacyDefaultValue>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RateAuthorizationCode" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The rate authorization code for this rate.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VendorRateID" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en"> The identifier assigned to this rate by the vendor.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PromoDesc" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This may be used to provide additional information about the promotion code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RateComments" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Collection of rate comments.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="RateComment" maxOccurs="15">
							<xs:annotation>
								<xs:documentation xml:lang="en">This may be used to provide any additional information about rates (e.g., must return by Monday at 8 AM).</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="FormattedTextTextType">
										<xs:sequence>
											<xs:element name="Name" type="StringLength1to64" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">Defines the type of rate comments (e.g., textual rule, marketing information).</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RebateType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Information about a suppliers participation in a rebate program, e.g. a VAT (value added tax) program.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ParticipationInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, the supplier is participating in a rebate program, e.g. a VAT (value added tax) program.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgramName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The name of the rebate program.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TripPurpose" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The purpose of the trip. If the customer has a default trip purpose this should be pre-populated with that value and the @TripPurposeRequiredInd should be set to FALSE.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="TripPurposeRequiredInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, the customer does not have a default trip purpose selected and they need to be prompted for the trip purpose.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PaymentInformation" type="PaymentCardType" minOccurs="0" maxOccurs="9">
				<xs:annotation>
					<xs:documentation xml:lang="en">Information about payments eligible for a rebate program.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RecipientInfosType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Information about one or more recipients.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RecipientInfo" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">Contact and/or reservation information pertaining to the recipient.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="ContactPersonType">
							<xs:sequence>
								<xs:element name="ReservationID" type="UniqueID_Type" minOccurs="0" maxOccurs="2">
									<xs:annotation>
										<xs:documentation xml:lang="en">Provides the reservation number of the recipient for delivery of the product.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ShippingInfo" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Informtion pertaining to the shipment of a product to the recipient.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:element name="ShippingType" type="StringLength1to16" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">The method of shipment (e.g., air, ground, pickup).</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="ShippingCarrier" type="StringLength1to32" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">The shipping carrier (e.g., USPS, UPS, FedEx).</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="Amount" type="Money" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
								<xs:element name="Comments" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">A collection of comments.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:element name="Comment" type="ParagraphType" maxOccurs="99">
												<xs:annotation>
													<xs:documentation xml:lang="en">Comment information pertaining to the purchase. This may be used to pass a message to be printed on a note card.</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReferencePlaceHolderType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Used to provide a reference to an object that is stored elsewhere in a collection of the same objects.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RPH" type="RPH_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The unique reference for an object within this message.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RelatedTravelerType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Other traveler profiles associated with an specific individual.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShareSynchInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="ShareMarketInd" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Relation" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the type of relationship with the person in the profile, such as Spouse, Child, Family, Business Associate, Interest Group, Medical, Security, Other, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BirthDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniqueID" type="UniqueID_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the profile of the related traveler.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PersonName" type="PersonNameType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Person associated with the traveler.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RelativePositionType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">The RelativePosition object contains information about the direction, distance and travel time to/from a facility (hotel, car rental location, or airport) or to/from a designated location.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="TransportationsType">
				<xs:sequence>
					<xs:element name="Direction" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Defines the cardinal direction (e.g., north, south, southwest).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Distance" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Defines the distance between two points.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DistanceUnitName" type="DistanceUnitNameType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">
								<DeprecationWarning>Candidate for potential removal, usage is not recommended. Deprecation Warning added in 2006A.</DeprecationWarning>
							</xs:documentation>
							<xs:documentation xml:lang="en">Provides the ability to specify the unit of measure to which the "Distance" attribute is referring.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="UnitOfMeasureCode" type="OTA_CodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The unit of measure in a code format. Refer to OpenTravel Code List Unit of Measure Code (UOM).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Nearest" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The indicator for whether this location is nearest.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="IndexPointCode" type="OTA_CodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">This is the object referred to by the relative position (e.g. cross street, airport). Refer to OpenTravel Code List Index Point Code (IPC).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Name" type="StringLength0to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">This is used to accommodate a city name, rail station name etc. when using the indexPoint attribute.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PrimaryIndicator" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Indicates whether the reference point is considered the main reference point for the specific type of IndexPointCode (e.g., in Dallas, where IndexPointCode=airport Dallas/Fort Worth airport would be the primary airport even if another airport such as Love Field is closer).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ToFrom" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Used to indicate whether the context is to a facility or from a facility.</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
					<xs:element name="ApproximateDistanceInd" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">When true, the distance information is approximate.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RestaurantType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Information associated with a specific restaurant.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RestaurantName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The name of the restaurant at the facility.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxSeatingCapacity" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The total seating capacity for this restaurant.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxSingleParty" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The maximum number of people that can be seated as a single party in this restaurant.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InvCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identification code of the restaurant service or facility for inventory and booking purposes if the service is an inventoriable item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OfferBreakfast" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">If TRUE, breakfast is served.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OfferLunch" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">If TRUE, lunch is served.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OfferDinner" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">If TRUE, dinner is served.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OfferBrunch" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">If TRUE, brunch is served.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProximityCode" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Denotes whether a service is onsite, offsite or information is not available. Refer to OpenTravel Code Table Proximity (PRX).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ID" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Sort" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to define the display order.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReservationReqInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">If TRUE, a reservation must be made to dine in the restaurant.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultimediaDescriptions" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Multimedia information about the restaurant.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="MultimediaDescriptionsType">
							<xs:sequence>
								<xs:element name="Attire" type="StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Used to pass restaurant attire information.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="RelativePosition" type="RelativePositionType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the directions to a specific restaurant.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OperationSchedules" type="OperationSchedulesPlusChargeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Collection of operating times for the restaurant including detail such as season, day of week, or a combination.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InfoCodes" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Collection of types of restaurant.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="InfoCode" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the generic type of restaurant such as fast food, cafe, fine dining, etc.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="Name" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">This name refers to an OpenTravel Code List table (e.g. RestaurantCategoryCode/InfoCode). The actual code is passed in the Code attribute.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Code" type="OTA_CodeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Refer to OpenTravel Code List Restaurant Category (RES).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CodeDetail" type="StringLength1to128" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">May be used to give further detail on the code.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Removal" type="xs:boolean" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">If true, this item is obsolete and should be removed from the receiving system.</xs:documentation>
											<xs:documentation xml:lang="en">
												<LegacyDefaultValue>false</LegacyDefaultValue>
											</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CuisineCodes" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Collection of cuisine types of restaurant.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CuisineCode" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code for the type of cuisine served at the restaurant.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="Code" type="OTA_CodeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Refer to OpenTravel Code List Main Cuisine Code (CUI).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CodeDetail" type="StringLength1to128" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">May be used to give further detail on the code.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Removal" type="xs:boolean" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">If true, this item is obsolete and should be removed from the receiving system.</xs:documentation>
											<xs:documentation xml:lang="en">
												<LegacyDefaultValue>false</LegacyDefaultValue>
											</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="IsMain" type="xs:boolean" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates whether this cuisine code is the main cuisine offered by restaurant.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ExistsCode" type="OTA_CodeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">This attribute is used to explicitly define whether the Code applies. Refer to OpenTravel Code list Option Type Code (OTC). This is used in conjunction with Code.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="DescriptiveText" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Descriptive text that describes the restaurant.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SourceType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Provides information on the source of a request.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AgentSine" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the party within the requesting entity.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PseudoCityCode" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">An identification code assigned to an office/agency by a reservation system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ISOCountry" type="ISO3166" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The country code of the requesting party.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ISOCurrency" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The currency code in which the reservation will be ticketed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AgentDutyCode" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">An authority code assigned to a requestor.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AirlineVendorID" type="UpperCaseAlphaNumericLength2to3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The IATA assigned airline code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AirportCode" type="UpperCaseAlphaNumericLength3to5" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The IATA assigned airport code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FirstDepartPoint" type="StringLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The point of first departure in a trip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ERSP_UserID" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Electronic Reservation Service Provider (ERSP) assigned identifier used to identify the individual using the ERSP system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TerminalID" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This is the electronic address of the device from which information is entered.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RequestorID" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">An identifier of the entity making the request (e.g. ATA/IATA/ID number, Electronic Reservation Service Provider (ERSP), Association of British Travel Agents.(ABTA)).</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="UniqueID_Type">
							<xs:sequence>
								<xs:element name="MessagePassword" type="StringLength1to16" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">This password provides an additional level of security that the recipient can use to validate the sending party's authority to use the message.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Position" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Specifies the latitude and longitude of a source.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Latitude" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The measure of the angular distance on a meridian north or south of the equator.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Longitude" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The measure of the angular distance on a meridian east or west of the prime meridian.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Altitude" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The height of an item, typically above sea level.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AltitudeUnitOfMeasureCode" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provides the unit of measure for the altitude (e.g., feet, meters, miles, kilometers). Refer to OpenTravel Code List Unit of Measure Code (UOM).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PositionAccuracy" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the accuracy of the propertyâs geo-coding, since the propertyâs longitude and latitude may not always be exact. Refer to OpenTravel Code List Position Accuracy Code (PAC).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="BookingChannel" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Specifies the booking channel type and whether it is the primary means of connectivity of the source.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Type" type="OTA_CodeType">
							<xs:annotation>
								<xs:documentation xml:lang="en">The type of booking channel (e.g. Global Distribution System (GDS), Alternative Distribution System (ADS), Sales and Catering System (SCS), Property Management System (PMS), Central Reservation System (CRS), Tour Operator System (TOS), Internet and ALL). Refer to OpenTravel Code List Booking Channel Type (BCT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Primary" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates whether the enumerated booking channel is the primary means of connectivity used by the source.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CompanyName" type="CompanyNameType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifies the company that is associated with the booking channel.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SpecialRequestType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection of SpecialRequest objects. The collection of all special requests associated with any part of the reservation (the reservation in its entirety, one or more guests, or one or more room stays). Which special requests belong to which part is determined by each object's SpecialRequestRPHs collection.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SpecialRequest" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">The SpecialRequest object indicates special requests for a particular guest, service or reservation.  Each of these may be independent of any that are tied to the profile (see Profile Synchronization standard).</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="ParagraphType">
							<xs:sequence>
								<xs:element name="RequestCode" type="StringLength1to16" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">This identifies a special request for this reservation and is typically hotel-specific.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CodeContext" type="StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Identifies the source authority for the RequestCode.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="NumberOfUnits" type="xs:integer" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Allows you to pass the number of units that the special request is for (e.g., if 4 rooms are booked you may want 3 with double/double beds and 1 with a king).</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StateProvType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">State, province, or region name or code needed to identify location.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength0to64">
				<xs:sequence>
					<xs:element name="StateCode" type="StateProvCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The standard code or abbreviation for the state, province, or region.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="StreetNmbrType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Street name; number on street.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength0to64">
				<xs:sequence>
					<xs:element name="PO_Box" type="StringLength1to16" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Defines a Post Office Box number.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SuccessType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Returning an empty element of this type indicates the successful processing of an OpenTravel message. This is used in conjunction with the Warning Type to report any warnings or business errors.</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="TPA_ExtensionsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Allows extensions to be added to the OpenTravel specification per trading partner agreement.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TaxType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Applicable tax element. This element allows for both percentages and flat amounts. If one field is used, the other should be zero since logically, taxes should be calculated in only one of the two ways.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Type" type="AmountDeterminationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Code" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Code identifying the fee (e.g.,agency fee, municipality fee). Refer to OpenTravel Code List Fee Tax Type (FTT).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Percent" type="Percentage" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Fee percentage; if zero, assume use of the Amount attribute (Amount or Percent must be a zero value).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EffectiveDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpireDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpireDateExclusiveIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChargeUnit" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This is the unit for which the charge applies (e.g. room, person, seat). Refer to OpenTravel Code List Charge Type (CHG).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChargeFrequency" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This is the timeframe used to apply the charge during the course of the reservation (e.g. Daily, Weekly, Stay). Refer to OpenTravel Code List Charge Type (CHG).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChargeUnitExempt" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Number of units permitted before charges are applied (e.g., more than 4 persons).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChargeFrequencyExempt" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">ChargeFrequency exemptions before charges are applied (e.g. after 2 nights).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxChargeUnitApplies" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Maximum number of Units for which the charge will be applied (e.g., waive charges above 10 rooms).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxChargeFrequencyApplies" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Maximum number of times the charge will be applied (e.g. waive charges above 30 nights).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TaxDescription" type="ParagraphType" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Text description of the taxes in a given language.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TaxesType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection of taxes.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Amount" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Tax" type="TaxType" minOccurs="0" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">An individual tax.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TextDescriptionType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Describes a text item.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Category" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Specifies the text category. Refer to OpenTravel Code list Picture Category Code (PIC).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentID" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The content ID of a file attachment with the prefix 'cid:'. The value of this can be used to retrieve the corresponding attachment by the receiving system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Title" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The title of the multimedia object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Author" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The author of the multimedia object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CopyrightNotice" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A copyright notice for the multimedia object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CopyrightOwner" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Owner of the copyright for the multimedia content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CopyrightStart" type="DateOrDateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The start date for which the multimedia content rights are claimed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CopyrightEnd" type="DateOrDateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The end date for which the multimedia content rights are claimed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EffectiveStart" type="DateOrDateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The start date for which the content is considered valid.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EffectiveEnd" type="DateOrDateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The end date for which the content is considered valid.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ApplicableStart" type="DateOrMonthDay" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Start month and day or date for which the multimedia content is relevent (e.g. the start of a season or the start of an event). When a year is not used (i.e. only the month and day) it signifies a recurring event.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ApplicableEnd" type="DateOrMonthDay" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">End month and day or date for which the multimedia content is relevent (e.g. the end of a season or the start of an event). When a year is not used (i.e. only the month and day) it signifies a recurring event.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RecordID" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Uniquely identifies this file in the message.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SourceID" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Unique identifier for the source of the multimedia object (e.g., the original image file).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Language" type="xs:language" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The language of the text item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="URL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The URL for a specific text item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">The text in a specific language.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="FormattedTextTextType">
							<xs:sequence>
								<xs:element name="ListItem" type="xs:integer" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Sequence number associated with this description.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TextItemsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Collection of text items.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TextItem" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">Text description of a given category.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="TextDescriptionType">
							<xs:sequence>
								<xs:element name="CreateDateTime" type="xs:dateTime" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Time stamp of the creation.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CreatorID" type="StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="LastModifyDateTime" type="xs:dateTime" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Time stamp of last modification.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="LastModifierID" type="StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Identifies the last software system or person to modify a record.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="PurgeDate" type="xs:date" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Date an item will be purged from a database (e.g., from a live database to an archive).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Removal" type="xs:boolean" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">If true, this item is obsolete and should be removed from the receiving system.</xs:documentation>
										<xs:documentation xml:lang="en">
											<LegacyDefaultValue>false</LegacyDefaultValue>
										</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Version" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The version of the text item.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TimeDurationType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Used to specify a time period, which may additionally include a minimum and/or maximum duration.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="__Dummy">
				<xs:sequence>
					<xs:element name="Minimum" type="xs:duration" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">A minimum duration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Maximum" type="xs:duration" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">A maximum duration.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TimeInstantType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Specifies a time window.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="DateOrDateTimeType">
				<xs:sequence>
					<xs:element name="WindowBefore" type="xs:duration" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">A period of time that can be applied to another time resulting in an earlier range of time.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="WindowAfter" type="xs:duration" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">A period of time that can be applied to another time resulting in a later range of time.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CrossDateAllowedIndicator" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">When true the requested period may extend over the previous or following day. When false, the search period is restricted to the date specified. Normally used when the window duration is in hours.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TotalType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">The total amount charged for the service including additional amounts and fees.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AmountBeforeTax" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The total amount not including any associated tax  (e.g., sales tax, VAT, GST or any associated tax).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AmountAfterTax" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The total amount including all associated taxes  (e.g., sales tax, VAT, GST or any associated tax).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdditionalFeesExcludedIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, amounts do not contain additional fees or charges.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of charge. Refer to OpenTravel Code List Charge Type (CHG).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServiceOverrideIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true indicates that the service amount has been overridden.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RateOverrideIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true indicates that the rate amount has been overridden.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AmountIncludingMarkup" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This amount includes markup and taxes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Taxes" type="TaxesType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A collection of taxes.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TransportationsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Used to define the types of transportation offered.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Transportations" type="TransportationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Collection of directions to/from a specific location via various modes of transportation.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TransportationType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Defines the type of transportation offered.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Transportation" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">Detailed transportation information.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="NotificationRequired" type="StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">This would be used for information such as a shuttle needs to be requested or a reservation is required.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TransportationCode" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The mode of transportation. Refer to OpenTravel Code List Transportation Code (TRP).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ChargeUnit" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Refer to OpenTravel Codelist Charge Type (CHG).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Included" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true there is no additional charge for transportation.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CodeDetail" type="StringLength1to128" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">May be used to give further detail on the code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Removal" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">If true, this item is obsolete and should be removed from the receiving system.</xs:documentation>
								<xs:documentation xml:lang="en">
									<LegacyDefaultValue>false</LegacyDefaultValue>
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Description" type="StringLength0to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Descriptive information about the mode of transportation.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TypicalTravelTime" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The normal (average) travel time required to get to or from the location, measured in minutes.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Amount" type="Money" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExistsCode" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">This attribute is used to explicitly define whether the type of transportation applies. Refer to OpenTravel Code list Option Type Code (OTC). This is used in conjunction with TransportationCode.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MultimediaDescriptions" type="MultimediaDescriptionsType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Multimedia information about the transportation.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="OperationSchedules" type="OperationSchedulesType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Collection of operation schedules for the transportation.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DescriptiveText" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Descriptive text that describes the transportation.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TravelDateTimeType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Date and time of trip that allows specifying a time window before and after the given date.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="DepartureDateTime" type="TimeInstantType">
				<xs:annotation>
					<xs:documentation xml:lang="en">The departure date and optionally a time period that can be applied before and/or after the departure date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ArrivalDateTime" type="TimeInstantType">
				<xs:annotation>
					<xs:documentation xml:lang="en">The arrival date and optionally a time period that can be applied before and/or after the arrival date.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="TravelerRPHs" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A container to relate individual travelers to an inventory or chargeable item.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TravelerRPH" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">Provides a pointer to a traveler defined elsewhere in this message.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="RPH" type="RPH_Type">
							<xs:annotation>
								<xs:documentation xml:lang="en">A pointer to identify a traveler defined elsewhere in this message.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="URL_Type" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Web site address, in IETF specified format.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="__Dummy">
				<xs:sequence>
					<xs:element name="ShareSynchInd" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
					<xs:element name="ShareMarketInd" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
					<xs:element name="Type" type="StringLength1to16" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Defines the purpose of the URL address, such as personal, business, public, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DefaultInd" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">When true, indicates a default value should be used.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="UniqueID_Type" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="URL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">URL that identifies the location associated with the record identified by the UniqueID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="OTA_CodeType">
				<xs:annotation>
					<xs:documentation xml:lang="en">A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Instance" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ID" type="StringLength1to32">
				<xs:annotation>
					<xs:documentation xml:lang="en">A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ID_Context" type="StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to identify the source of the identifier (e.g., IATA, ABTA).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompanyName" type="CompanyNameType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the company that is associated with the UniqueID.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VendorMessageType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Provides formatted textual information that a vendor wishes to make known. The type of information is indicated.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="FormattedTextType">
				<xs:sequence>
					<xs:element name="InfoType" type="OTA_CodeType">
						<xs:annotation>
							<xs:documentation xml:lang="en">To define the type of information such as Description, Policy, Marketing, etc. Refer to OpenTravel Code List Information Type (INF).</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="VendorMessagesType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Collection of vendor messages.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="VendorMessage" type="VendorMessageType" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">A specific message associated with this vendor.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VerificationType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Collection of data used to ensure the correct reservation is canceled or modified (e.g. in the case of a hotel reservation modification, a CustLoyalty/ MembershipID would be verified as part of the reservation that you plan to modify to ensure the correct reservation is being modified).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PersonName" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Detailed name information.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="PersonNameType">
							<xs:sequence>
								<xs:element name="PartialName" type="xs:boolean" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">When true the full name is not provided.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Email" type="EmailType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Information on an email address.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TelephoneInfo" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Information on a telephone number.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ShareSynchInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ShareMarketInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="PhoneLocationType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Describes the location of the phone, such as Home, Office, Property Reservation Office, etc. Refer to OpenTravel Code List Phone Location Type (PLT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneTechType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc. Refer to OpenTravel Code List Phone Technology Type (PTT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneUseType" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening). Refer to OpenTravel Code List Phone Use Type (PUT).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CountryAccessCode" type="NumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code assigned by telecommunications authorities for international country access identifier.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AreaCityCode" type="NumericStringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code assigned for telephones in a specific region, city, or area.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PhoneNumber" type="StringLength1to32">
							<xs:annotation>
								<xs:documentation xml:lang="en">Telephone number assigned to a single location.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Extension" type="NumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Extension to reach a specific party at the phone number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PIN" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Additional codes used for pager or telephone access rights.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Remark" type="StringLength1to128" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A remark associated with the telephone number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="FormattedInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Specifies if the associated data is formatted or not. When true, then it is formatted; when false, then not formatted.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DefaultInd" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates a default value should be used.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RPH" type="RPH_Type" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Used elsewhere in the message to reference a specific telephone number (including faxes).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PaymentCard" type="PaymentCardType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Payment Card information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AddressInfo" type="AddressInfoType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Detailed information on an address.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustLoyalty" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Loyalty program information.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ShareSynchInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for synchronization of information held by other travel service providers.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ShareMarketInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Permission for sharing data for marketing purposes.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ProgramID" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifier to indicate the company owner of the loyalty program.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MembershipID" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Unique identifier of the member in the program (membership number, account number, etc.).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TravelSector" type="OTA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifies the travel sector. Refer to OpenTravel Code List Travel Sector (TVS).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LoyalLevel" type="StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates special privileges in program assigned to individual.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="LoyalLevelCode" type="Numeric1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provides a numeric code assigned to a particular loyalty level.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SingleVendorInd" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates if program is affiliated with a group of related offers accumulating credits.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="SignupDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates when the member signed up for the loyalty program.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="EffectiveDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExpireDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExpireDateExclusiveIndicator" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RPH" type="RPH_Type" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A reference placeholder for this loyalty membership.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="VendorCode" type="ListOfStringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicate the partner(s)/vendor(s) for which the customer loyalty number is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PrimaryLoyaltyIndicator" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">When true, indicates this is the primary customer loyalty program and when false, indicates this is not the primary customer loyalty program.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AllianceLoyaltyLevelName" type="StringLength1to128" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the alliance loyalty level (e.g.,OneWorld  uses Emerald, Ruby, etc and SkyTeam uses Elite, etc.)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CustomerType" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Original assessment of the customer by the travel agent.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CustomerValue" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The supplier's ranking of the customer (e.g., VIP, numerical ranking).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Password" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The password for the member in the program. </xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Vendor" type="CompanyNameType" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Vendor or vendors associated with the reservation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReservationTimeSpan" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The start and end date of the reservation.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Start" type="DateOrTimeOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The starting value of the time span.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Duration" type="DurationType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The duration datatype represents a combination of year, month, day and time values representing a single duration of time, encoded as a single string.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="End" type="DateOrTimeOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The ending value of the time span.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AssociatedQuantity" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Quantity or quantities that are associated with the reservation (e.g., number of seats, number of rooms, number of people).</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Code" type="StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Any code used to specify an item, for example, type of traveler, service code, room amenity, etc.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CodeContext" type="StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifies the source authority for the code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="URI" type="xs:anyURI" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifies the location of the code table.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Quantity" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Used to define the quantity for an associated element or attribute.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="StartLocation" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Start location associated with the reservation.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="LocationType">
							<xs:sequence>
								<xs:element name="AssociatedDateTime" type="xs:dateTime" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">A date and time associated with this start location.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="EndLocation" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">End location associated with the reservation.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="LocationType">
							<xs:sequence>
								<xs:element name="AssociatedDateTime" type="xs:dateTime" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">A date and time associated with this end location.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element ref="ota_TPA_Extensions" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VideoDescriptionType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Describes a video item.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Category" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Specifies the video category. Refer to OpenTravel Code list Picture Category Code (PIC).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VideoFormat" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">A set of video of a given category can be provided in different Format, each format will be described in this element.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="VideoItemType">
							<xs:sequence>
								<xs:element name="ContentID" type="StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The content ID of a file attachment with the prefix 'cid:'. The value of this can be used to retrieve the corresponding attachment by the receiving system.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Title" type="StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The title of the multimedia object.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Author" type="StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The author of the multimedia object.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CopyrightNotice" type="StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">A copyright notice for the multimedia object.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CopyrightOwner" type="StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Owner of the copyright for the multimedia content.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CopyrightStart" type="DateOrDateTimeType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The start date for which the multimedia content rights are claimed.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CopyrightEnd" type="DateOrDateTimeType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The end date for which the multimedia content rights are claimed.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="EffectiveStart" type="DateOrDateTimeType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The start date for which the content is considered valid.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="EffectiveEnd" type="DateOrDateTimeType" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The end date for which the content is considered valid.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ApplicableStart" type="DateOrMonthDay" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Start month and day or date for which the multimedia content is relevent (e.g. the start of a season or the start of an event). When a year is not used (i.e. only the month and day) it signifies a recurring event.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ApplicableEnd" type="DateOrMonthDay" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">End month and day or date for which the multimedia content is relevent (e.g. the end of a season or the start of an event). When a year is not used (i.e. only the month and day) it signifies a recurring event.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="RecordID" type="StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Uniquely identifies this file in the message.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="SourceID" type="StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Unique identifier for the source of the multimedia object (e.g., the original image file).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ID" type="StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VideoItemsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Collection of video items.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="VideoItem" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation xml:lang="en">Each video item represents a specific category.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="VideoDescriptionType">
							<xs:sequence>
								<xs:element name="Language" type="xs:language" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The language associated with the caption for the video.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Caption" type="StringLength1to128" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The caption associated to a specific video category which can be provided in different languages.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Removal" type="xs:boolean" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">If true, this item is obsolete and should be removed from the receiving system.</xs:documentation>
										<xs:documentation xml:lang="en">
											<LegacyDefaultValue>false</LegacyDefaultValue>
										</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Version" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The version of the video item.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CreateDateTime" type="xs:dateTime" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Time stamp of the creation.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CreatorID" type="StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="LastModifyDateTime" type="xs:dateTime" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Time stamp of last modification.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="LastModifierID" type="StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Identifies the last software system or person to modify a record.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="PurgeDate" type="xs:date" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Date an item will be purged from a database (e.g., from a live database to an archive).</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VideoItemType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Details for a video of a given category.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UnitOfMeasureCode" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The unit of measure associated with all the dimensions of the multimedia item. Refer to OpenTravel Code list Unit of Measure (UOM).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Width" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The width of the video item (unit specified by unit of measure).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Height" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The height of the video item (unit specified by unit of measure).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BitRate" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The bit rate of the video item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Length" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The length of the video item (unit specified by unit of measure).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Language" type="xs:language" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the language of the multimedia item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Format" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code associated with the format of the multimedia item. Refer to OpenTravel Code list Content Format Code (CFC).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FileSize" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The size of the multimedia file in bytes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FileName" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The name of the multimedia  file.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="URL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">URL of the multimedia item for a specific format.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="WarningType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Used when a message has been successfully processed to report any warnings or business errors that occurred.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="FreeTextType">
				<xs:sequence>
					<xs:element name="Type" type="OTA_CodeType">
						<xs:annotation>
							<xs:documentation xml:lang="en">The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type ="Unknown". Refer to OpenTravel Code List Error Warning Type (EWT).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ShortText" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">An abbreviated version of the error in textual format.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Code" type="OTA_CodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this refers to a table of coded values exchanged between applications to identify errors or warnings. Refer to OpenTravel Code List Error Codes (ERR).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DocURL" type="xs:anyURI" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this URL refers to an online description of the error that occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Status" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, recommended values are those enumerated in the OTA_ErrorRS, (NotProcessed | Incomplete | Complete | Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Tag" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RecordID" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RPH" type="RPH_Type" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Reference Place Holder used as an index for this warning.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="WarningsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Collection of warnings.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Warning" type="WarningType" maxOccurs="999">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used in conjunction with the Success element to define a business error. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="WrittenConfInstType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Method by which confirmations should be delivered.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LanguageID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The language in which the confirmation should be provided.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AddresseeName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The name to which the confirmation should be addressed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Address" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The mailing address to which the confirmation should be delivered.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Telephone" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The telephone number associated with the delivery address.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConfirmInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true a written confirmation was requested and will be sent.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SupplementalData" type="ParagraphType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Additional data that will be sent with the confirmation. This could be used to include a map, pictures, or any other information that the reservation source wishes to include with the confirmation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Email" type="EmailType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">An email address to which the confirmation should be sent.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ota_TPA_Extensions" type="TPA_ExtensionsType">
		<xs:annotation>
			<xs:documentation xml:lang="en">A placeholder in the schema to allow for additional elements and attributes to be included if required, per Trading Partner Agreement (TPA).</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ota_Success" type="SuccessType"/>
	<xs:element name="ota_Warnings" type="WarningsType"/>
	<xs:element name="ota_Errors" type="ErrorsType"/>
	<xs:annotation>
		<xs:documentation xml:lang="en">.</xs:documentation>
	</xs:annotation>
	<xs:complexType name="AlphaStringLength1" mixed="true"/>
	<xs:complexType name="AlphaStringLength1to3" mixed="true"/>
	<xs:complexType name="AlphaStringLength1to4" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to2" mixed="true"/>
	<xs:complexType name="pnr_AlphaNumericStringLength1to3" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to4" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to6" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to7" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to9" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to10" mixed="true"/>
	<xs:complexType name="pnr_AlphaNumericStringLength1to14" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to17" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to20" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to25" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to30" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to31" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to35" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to70" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to99" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to256" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to320" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength2" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength2to3" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength3" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength3to7" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength4" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength6" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength10" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength14" mixed="true"/>
	<xs:complexType name="NumericStringLength1to2" mixed="true"/>
	<xs:complexType name="NumericStringLength1to4" mixed="true"/>
	<xs:complexType name="pnr_NumericStringLength1to5" mixed="true"/>
	<xs:complexType name="String0" mixed="true"/>
	<xs:complexType name="StringLength1to17" mixed="true"/>
	<xs:complexType name="StringLength1to20" mixed="true"/>
	<xs:complexType name="StringLength1to25" mixed="true"/>
	<xs:complexType name="StringLength1to30" mixed="true"/>
	<xs:complexType name="StringLength1to31" mixed="true"/>
	<xs:complexType name="StringLength1to35" mixed="true"/>
	<xs:complexType name="StringLength1to60" mixed="true"/>
	<xs:complexType name="pnr_StringLength1to64" mixed="true"/>
	<xs:complexType name="StringLength1to70" mixed="true"/>
	<xs:complexType name="StringLength1to99" mixed="true"/>
	<xs:complexType name="StringLength1to109" mixed="true"/>
	<xs:complexType name="StringLength1to121" mixed="true"/>
	<xs:complexType name="pnr_StringLength1to128" mixed="true"/>
	<xs:complexType name="StringLength1to178" mixed="true"/>
	<xs:complexType name="StringLength1to179" mixed="true"/>
	<xs:complexType name="StringLength1to180" mixed="true"/>
	<xs:complexType name="StringLength1to184" mixed="true"/>
	<xs:complexType name="StringLength1to199" mixed="true"/>
	<xs:complexType name="StringLength1to210" mixed="true"/>
	<xs:complexType name="StringLength1to211" mixed="true"/>
	<xs:complexType name="StringLength1to256" mixed="true"/>
	<xs:complexType name="StringLength1to320" mixed="true"/>
	<xs:complexType name="StringLength6to40" mixed="true"/>
	<xs:complexType name="nonNegativeIntegerOrString0" mixed="true"/>
	<xs:complexType name="BooleanOrString0" mixed="true"/>
	<xs:complexType name="DateOrString0" mixed="true"/>
	<xs:annotation>
		<xs:documentation xml:lang="en">.</xs:documentation>
	</xs:annotation>
	<xs:complexType name="AirEquipType" mixed="true"/>
	<xs:complexType name="AirlineType" mixed="true"/>
	<xs:complexType name="iata_AlphaLength1" mixed="true"/>
	<xs:complexType name="iata_AlphaLength4" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to71" mixed="true"/>
	<xs:complexType name="iata_AlphaNumericStringLength1to3" mixed="true"/>
	<xs:complexType name="iata_AlphaNumericStringLength1to7" mixed="true"/>
	<xs:complexType name="iata_AlphaNumericStringLength1" mixed="true"/>
	<xs:complexType name="iata_AlphaNumericStringLength10" mixed="true"/>
	<xs:complexType name="iata_AlphaNumericStringLength1to14" mixed="true"/>
	<xs:complexType name="iata_AlphaNumericStringLength2to3" mixed="true"/>
	<xs:complexType name="iata_AlphaLength3" mixed="true"/>
	<xs:complexType name="iata_AlphaNumericStringLength1to8" mixed="true"/>
	<xs:complexType name="iata_AlphaNumericStringLength1to19" mixed="true"/>
	<xs:complexType name="iata_AlphaNumericStringLength1to20" mixed="true"/>
	<xs:complexType name="iata_AlphaNumericStringLength1to4" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to5" mixed="true"/>
	<xs:complexType name="iata_AlphaNumericStringLength1to30" mixed="true"/>
	<xs:complexType name="iata_AmountDeterminationType" mixed="true"/>
	<xs:complexType name="iata_CabinType" mixed="true"/>
	<xs:complexType name="ConditionType" mixed="true"/>
	<xs:complexType name="iata_DateOrDateTimeType" mixed="true"/>
	<xs:complexType name="iata_DateOrTimeOrDateTimeType" mixed="true"/>
	<xs:complexType name="iata_DurationType" mixed="true"/>
	<xs:complexType name="FareAmountType" mixed="true"/>
	<xs:complexType name="iata_FlightNumberType" mixed="true"/>
	<xs:complexType name="IATA_CodeType" mixed="true"/>
	<xs:complexType name="iata_InfoSourceType" mixed="true"/>
	<xs:complexType name="iata_ISO3166" mixed="true"/>
	<xs:complexType name="ListOfIATA_CodeType" mixed="true"/>
	<xs:complexType name="ListOfTTY_Address" mixed="true"/>
	<xs:complexType name="iata_ListOfStringLength1to8" mixed="true"/>
	<xs:complexType name="ListOfStringLength0to250" mixed="true"/>
	<xs:complexType name="iata_MMYYDate" mixed="true"/>
	<xs:complexType name="iata_Money" mixed="true"/>
	<xs:complexType name="iata_NightDurationType" mixed="true"/>
	<xs:complexType name="Numeric1" mixed="true"/>
	<xs:complexType name="iata_Numeric0to99" mixed="true"/>
	<xs:complexType name="iata_Numeric1to3" mixed="true"/>
	<xs:complexType name="iata_Numeric0to4" mixed="true"/>
	<xs:complexType name="iata_Numeric0to999" mixed="true"/>
	<xs:complexType name="iata_Numeric0to9999" mixed="true"/>
	<xs:complexType name="iata_NumericStringLength1to3" mixed="true"/>
	<xs:complexType name="iata_Numeric1to4" mixed="true"/>
	<xs:complexType name="iata_Numeric1to999" mixed="true"/>
	<xs:complexType name="iata_Numeric1to99" mixed="true"/>
	<xs:complexType name="iata_NumericStringLength1to4" mixed="true"/>
	<xs:complexType name="iata_NumericStringLength1to19" mixed="true"/>
	<xs:complexType name="iata_NumericStringLength1to5" mixed="true"/>
	<xs:complexType name="iata_NumericStringLength1to8" mixed="true"/>
	<xs:complexType name="iata_Numeric1to9999" mixed="true"/>
	<xs:complexType name="OperationalSuffixType" mixed="true"/>
	<xs:complexType name="iata_PaymentCardCodeType" mixed="true"/>
	<xs:complexType name="iata_Percentage" mixed="true"/>
	<xs:complexType name="PurposeType" mixed="true"/>
	<xs:complexType name="iata_RPH_Type" mixed="true"/>
	<xs:complexType name="ServiceType" mixed="true"/>
	<xs:complexType name="ShareIndicator" mixed="true"/>
	<xs:complexType name="SingleVendorIndicator" mixed="true"/>
	<xs:complexType name="iata_StateProvCodeType" mixed="true"/>
	<xs:complexType name="StationType" mixed="true"/>
	<xs:complexType name="StringLength0to10" mixed="true"/>
	<xs:complexType name="StringLength0to13" mixed="true"/>
	<xs:complexType name="StringLength0to2" mixed="true"/>
	<xs:complexType name="StringLength0to3" mixed="true"/>
	<xs:complexType name="StringLength0to5" mixed="true"/>
	<xs:complexType name="iata_StringLength0to64" mixed="true"/>
	<xs:complexType name="iata_StringLength1to255" mixed="true"/>
	<xs:complexType name="StringLength1" mixed="true"/>
	<xs:complexType name="iata_StringLength3" mixed="true"/>
	<xs:complexType name="iata_StringLength1to8" mixed="true"/>
	<xs:complexType name="StringLength1to5" mixed="true"/>
	<xs:complexType name="iata_StringLength0to128" mixed="true"/>
	<xs:complexType name="iata_StringLength1to16" mixed="true"/>
	<xs:complexType name="iata_StringLength1to64" mixed="true"/>
	<xs:complexType name="iata_StringLength1to70" mixed="true"/>
	<xs:complexType name="StringLength1to71" mixed="true"/>
	<xs:complexType name="iata_StringLength1to32" mixed="true"/>
	<xs:complexType name="StringLength1to86" mixed="true"/>
	<xs:complexType name="iata_StringLength1to128" mixed="true"/>
	<xs:complexType name="StringLength0to250" mixed="true"/>
	<xs:complexType name="StringLength0to100" mixed="true"/>
	<xs:complexType name="StringLength0to50" mixed="true"/>
	<xs:complexType name="iata_StringLength0to255" mixed="true"/>
	<xs:complexType name="StringLength0to15" mixed="true"/>
	<xs:complexType name="TimeType" mixed="true"/>
	<xs:complexType name="TTY_Address" mixed="true"/>
	<xs:complexType name="iata_UpperCaseAlphaLength1to2" mixed="true"/>
	<xs:complexType name="iata_UpperCaseAlphaNumericLength2to3" mixed="true"/>
	<xs:complexType name="iata_UpperCaseAlphaNumericLength3to5" mixed="true"/>
	<xs:complexType name="UpperCaseAlphaNumericStringLength1to10" mixed="true"/>
	<xs:complexType name="UpperCaseAlphaNumericStringLength1to2" mixed="true"/>
	<xs:complexType name="UsageType" mixed="true"/>
	<xs:complexType name="iata_AddressType" mixed="true">
		<xs:annotation>
			<xs:documentation>Provides address information</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FormattedInd" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specifies if the associated data is formatted or not.  When true, then it is formatted; when false, then not formatted.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefaultInd" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When true, the receiving system should assume the default value if the user specifies no overriding value or action.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UseType" type="IATA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the use of the address (e.g. mailing, delivery, billing.etc.)  Not applicable - no code list exists.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RPH" type="iata_RPH_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used elsewhere in the message to reference this specific address.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="IATA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the type of address (e.g. home, business, other). Refer to IATA PADIS Code List data element 3299.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StreetNmbr" minOccurs="0">
				<xs:annotation>
					<xs:documentation>May contain suffixes to the street name.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="POBox" type="iata_StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines a Post Office Box number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StreetNmbrSuffix" type="iata_StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Usually a letter right after the street number (A in 66-A, B in 123-B etc).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StreetDirection" type="iata_StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Street direction of an address (e.g., N, E, S, NW, SW). 

</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RuralRouteNmbr" type="iata_NumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Numerical equivalent of a rural township as defined within a given area (e.g., 12, 99).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="BldgRoom" type="iata_StringLength0to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Building name, room, apartment, or suite number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AddressLine" type="iata_StringLength1to255" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation>When the address is unformatted (FormattedInd="false") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number and other suffixes will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CityName" type="iata_StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation>City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PostalCode" type="iata_StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Post Office Code number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="County" type="iata_StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation>County or Region Name (e.g., Fairfax).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StateProv" type="iata_StateProvType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>State or Province name (e.g., Texas) or code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CountryName" type="iata_CountryNameType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Country name (e.g., Ireland).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="iata_BankAcctType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Customer bank accounts for payments, either for paper checks or electronic funds transfer.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShareSynchInd" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="ShareMarketInd" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="BankID" type="iata_StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Code assigned by authorities to financial institutions; sometimes called bank routing number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AcctType" type="iata_StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Describes the bank account used for financing travel (e.g., checking, savings, investment).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BankAcctNumber" type="iata_StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifier for the account assigned by the bank.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChecksAcceptedInd" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">If true, checks are accepted. If false, checks are not accepted.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BankAcctName" type="iata_StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The name the account is held under.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="iata_CompanyNameType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Identifies a company by name.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength0to128">
				<xs:sequence>
					<xs:element name="CompanyShortName" type="iata_StringLength1to32" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Used to provide the company common name.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TravelSector" type="IATA_CodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Specifies the type of company..  Refer to IATA PADIS Code List for data element 9972.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Code" type="iata_StringLength1to16" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Identifies the IATA 2-3 character airline code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CodeContext" type="iata_StringLength1to32" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Identifies the context of the identifying code, such as DUNS, IATA or internal code, etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="iata_CountryNameType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">The name or code of a country (e.g. as used in an address or to specify citizenship of a traveller).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength0to64">
				<xs:sequence>
					<xs:element name="Code" type="iata_ISO3166" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">ISO 3166 code for a country.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="iata_DirectBillType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Company name and location for sending invoice for remittances for travel services.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShareSynchInd" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="ShareMarketInd" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="DirectBill_ID" type="iata_StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifier for the organization to be billed directly for travel services.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompanyName" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Company name to whom remittance should be directed.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="CompanyNameType">
							<xs:sequence>
								<xs:element name="ContactName" type="iata_StringLength1to64" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">This may be used to pass the name of the contact at the company for which the direct bill applies.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Address" type="iata_AddressType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Address where remittance should be directed.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="iata_ErrorsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection of errors that occurred during the processing of a message.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Error" type="iata_ErrorType" maxOccurs="99"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="iata_ErrorType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Standard way to indicate that an error occurred during the processing of an IATA message</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="FreeTextType">
				<xs:sequence>
					<xs:element name="Type" type="IATA_CodeType">
						<xs:annotation>
							<xs:documentation xml:lang="en">The Error element MUST contain the Type attribute that uses a recommended set of values to indicate the error type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type ="Unknown".  Refer to IATA PADIS Code List for data element 9321.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ShortText" type="iata_StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation>An error in textual format.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Code" type="IATA_CodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this refers to a table of coded values exchanged between applications to identify errors or warnings. Refer to IATA PADIS Code List data element 9321.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DocURL" type="xs:anyURI" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this URL refers to an online description of the error that occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Status" type="iata_StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, recommended values are those enumerated in the IATA_ErrorRS, (NotProcessed | Incomplete | Complete | Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Tag" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RecordID" type="iata_StringLength1to32" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NodeList" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">An XPath expression that selects all the nodes whose data caused this error.  Further, this expression should have an 	additional contraint which contains the data of the node.  This will provide the offending data back to systems that cannot maintain the original message. </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="iata_EquipmentType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Specifies the aircraft equipment type.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength0to64">
				<xs:sequence>
					<xs:element name="AirEquipType" type="iata_StringLength3">
						<xs:annotation>
							<xs:documentation xml:lang="en">This is the 3 character IATA code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ChangeofGauge" type="xs:boolean" default="false" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Indicates there is an equipment change.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="iata_FlightSegmentBaseType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Construct for holding a flight segment availability object.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DepartureDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The departure date and/or time of the flight segment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ArrivalDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The arrival date and/or time of the flight segment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StopQuantity" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en"> The number of stops the flight makes</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RPH" type="iata_RPH_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to provide a reference to this flight segment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InfoSource" type="iata_InfoSourceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to specify the source of the data being exchanged as determined by trading partners. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DepartureAirport">
				<xs:annotation>
					<xs:documentation xml:lang="en">Departure point of flight segment.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="LocationCode" type="iata_StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en"> Location code used to identify a specific airport.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CodeContext" type="iata_StringLength1to32" default="IATA" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifies the context of the identifying code, such as IATA, ARC, or internal code, etc.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Terminal" type="iata_StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en"> Arrival or departure terminal (e.g., Concourse A)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Gate" type="iata_StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en"> Arrival or departure gate (e.g., B12)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ArrivalAirport">
				<xs:annotation>
					<xs:documentation xml:lang="en">Arrival point of flight segment.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="LocationCode" type="iata_StringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en"> Location code used to identify a specific airport.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CodeContext" type="iata_StringLength1to32" default="IATA" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifies the context of the identifying code, such as IATA, ARC, or internal code, etc.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Terminal" type="iata_StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en"> Arrival or departure terminal (e.g., Concourse A)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Gate" type="iata_StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en"> Arrival or departure gate (e.g., B12)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="OperatingAirline" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en"> The operating airline of the flight if it is a codeshare  flight.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="OperatingAirlineType">
							<xs:sequence>
								<xs:element name="OperationalSuffix" type="OperationalSuffixType" minOccurs="0">
									<xs:annotation>
										<xs:documentation>The operation flight prefix/suffix for the flight.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Equipment" type="iata_EquipmentType" minOccurs="0" maxOccurs="2">
				<xs:annotation>
					<xs:documentation xml:lang="en"> The type of equipment  used for the  flight..</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FlightSegmentType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">FlightSegmentType extends FlightSegmentBaseType to provide additional functionality. 
	</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="FlightSegmentBaseType">
				<xs:sequence>
					<xs:element name="FlightNumber" type="iata_FlightNumberType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The marketing flight number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TourOperatorFlightID" type="iata_StringLength1to8" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">ID of a flight in the Tour Operator's inventory. This flight is not necessarily in the inventory of an airline. Rather, it is a code created by tour operators.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="OperationalSuffix" type="OperationalSuffixType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The operational flight prefix/suffix for the coupon.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MarketingAirline" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The marketing airline. This is required for use with scheduled airline messages but may be omitted for requests by tour operators. </xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:complexContent>
								<xs:extension base="CompanyNameType">
									<xs:sequence>
										<xs:element name="SingleVendorInd" minOccurs="0">
											<xs:annotation>
												<xs:documentation xml:lang="en">Indicates if program is affiliated with a group of related offers accumulating credits.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="ResBookDesigCode" type="iata_UpperCaseAlphaLength1to2" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The reservation booking designator of the marketing carrier.</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="iata_FreeTextType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Textual information to provide descriptions and/or additional information.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="__Dummy">
				<xs:sequence>
					<xs:element name="Language" type="xs:language" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Language identification.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="iata_OperatingAirlineType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">This is an extension of CompanyNameType to include a FlightNumber.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="CompanyNameType">
				<xs:sequence>
					<xs:element name="FlightNumber" type="iata_FlightNumberType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The operating flight number.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ResBookDesigCode" type="iata_UpperCaseAlphaLength1to2" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The reservation booking designator of the operating carrier when different from the marketing carrier.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="iata_PaymentDetailType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Details of payment.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="PaymentFormType">
				<xs:sequence>
					<xs:element name="PaymentAmount" minOccurs="0">
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="Amount" type="iata_Money" minOccurs="0">
									<xs:annotation>
										<xs:documentation>The monetary value.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ApprovalCode" type="iata_StringLength1to16" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The approval code returned as part of an authorization process.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="iata_PaymentFormType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Ways of providing funds for travel by the individual.</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0">
			<xs:element name="ShareSynchInd" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="ShareMarketInd" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="CostCenterID" type="iata_StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A reference to identify the billing department for allocating cost of travel to company account.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RPH" type="iata_RPH_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Provides a reference to a specific form of payment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PaymentTransactionTypeCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This is used to indicate either a charge or reserve (deposit).</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="PaymentCard" type="iata_PaymentCardType">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details of a debit or credit card.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BankAcct" type="iata_BankAcctType">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details of a bank account. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DirectBill" type="iata_DirectBillType">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details of a direct billing arrangement.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Voucher">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details of a document indicating prepayment.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="EffectiveDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ExpireDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="LoyaltyRedemption">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details of a loyalty redemption arrangement. This is normally miles or points. </xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CertificateNumber" type="iata_StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The loyalty redemption certificate number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MemberNumber" type="iata_StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The member loyalty number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ProgramName" type="iata_StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">This identifies the loyalty program.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PromotionCode" type="iata_StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Promotion code is the identifier used by the host to link directly with a specific named advertising campaign. By including the required code, the client is able to gain access to special offers which may have been created for a specifically targeted group via a CRM system or for a wider advertising campaign using Television or press adverts.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PromotionVendorCode" type="iata_ListOfStringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">List of the vendor codes associated with a promotion.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RedemptionQuantity" type="xs:positiveInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The quantity of loyalty units being redeemed.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="MiscChargeOrder">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details of a miscellaneous charge order (MCO).</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="TicketNumber" type="iata_StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The ticket number of the miscellaneous charge order (MCO).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Cash">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to indicate payment in cash.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CashIndicator" type="xs:boolean" default="true" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">If true, this indicates cash is being used.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Other">
				<xs:annotation>
					<xs:documentation>Used to specify any other form of payment.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Text" type="iata_StringLength1to32">
							<xs:annotation>
								<xs:documentation>Used to specify any other form of payment.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="iata_PaymentCardType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Identification about a specific credit card</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShareSynchInd" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="ShareMarketInd" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="CardType" type="iata_AlphaNumericStringLength1to3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the type of magnetic striped card.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CardCode" type="iata_PaymentCardCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The 2 character code of the credit card issuer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CardNumber" type="iata_NumericStringLength1to19" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Credit card number embossed on the card.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SeriesCode" type="iata_NumericStringLength1to8" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Verification digits printed on the card following the embossed number. This may also accommodate the customer identification/batch number (CID), card verification value (CVV2 ), card validation code number (CVC2) on credit card.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EffectiveDate" type="iata_MMYYDate" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpireDate" type="iata_MMYYDate" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaskedCardNumber" type="iata_AlphaNumericStringLength1to19" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">May be used to send a concealed credit card number (e.g., xxxxxxxxxxxx9922).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CardHolderRPH" type="iata_RPH_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Provides a reference pointer that links the payment card to the payment card holder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AddressValidation" type="iata_StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The address verification response code (AVS) when the ticketing agency performs address verification.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ApprovalCode" type="iata_AlphaNumericStringLength1to8" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A series of characters assigned by the applicable credit card company's authorization system to confirm the approval of a credit sale transaction.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CorporateContractCode" type="iata_AlphaNumericStringLength1" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to indicate whether the purchase is on behalf of a corporate client that has a contract ith the ticketing agency for the purchase of transportation and related services.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Text" type="iata_StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">May contain unique transaction information supplied to the airline/system provider by the credit card company.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExtendedPaymentCode" type="iata_AlphaNumericStringLength1to3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A code to indicate the number of months over which the customer wishes to pay where the credit card issuer permits.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ApprovalType" type="IATA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to specify how the approval code for a credit card sale was obtained.  Refer to IATA PADIS Code List for data element 9890.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="iata_Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The monetary value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CardHolderName" type="iata_StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of credit card holder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CardIssuerName" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Credit card issuing company.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="BankID" type="iata_StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code of bank issuing the card.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Address" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The address of the card holder.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="AddressType"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="CustomerFileRef" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A reference number to a commercial account used to further identify the holder of the credit card.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="URL" type="xs:anyURI" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">URL that identifies the location associated with the record identified by the UniqueID.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Type" type="IATA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A reference to the type of object defined by the UniqueID element. Refer to IATA PADIS Code List for data elemet 9972.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Instance" type="iata_StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="iata_StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A unique identifying value assigned by the creating system.  The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID_Context" type="iata_StringLength1to32" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Used to identify the source of the identifier (e.g., IATA, ABTA).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="iata_PersonNameType" mixed="true">
		<xs:annotation>
			<xs:documentation>This provides name information for a person.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShareSynchInd" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="ShareMarketInd" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="NameType" type="IATA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of name of the individual, such as former, nickname, alternate or alias name.  Not applicable, no code list exists.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NamePrefix" type="iata_StringLength1to16" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation>Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GivenName" type="iata_StringLength1to64" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation>Given name, first name or names</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MiddleName" type="iata_StringLength1to64" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation>The middle name of the person name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SurnamePrefix" type="iata_StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation>e.g "van der", "von", "de"</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Surname" type="iata_StringLength1to64">
				<xs:annotation>
					<xs:documentation>Family name, last name.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NameSuffix" type="iata_StringLength1to16" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation>Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NameTitle" type="iata_StringLength1to16" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation>Degree or honors (e.g., Ph.D., M.D.)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="iata_POS_Type" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Point of Sale (POS) is the details identifying the party or connection channel making the request.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Source" type="iata_SourceType" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">This holds details regarding the requestor. It may be repeated to also accommodate the delivery systems.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="iata_SourceType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Provides information on the source of a request.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AgentSine" type="iata_StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the party within the requesting entity.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PseudoCityCode" type="iata_StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">An identification code assigned to an office/agency by a reservation system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ISOCountry" type="iata_ISO3166" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The country code of the requesting party.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ISOCurrency" type="iata_AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The currency code in which the reservation will be ticketed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AgentDutyCode" type="iata_StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">An authority code assigned to a requestor.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AirlineVendorID" type="iata_UpperCaseAlphaNumericLength2to3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The IATA assigned airline code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AirportCode" type="iata_UpperCaseAlphaNumericLength3to5" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The IATA assigned airport code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FirstDepartPoint" type="iata_StringLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The point of first departure in a trip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ERSP_UserID" type="iata_StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Electronic Reservation Service Provider (ERSP) assigned identifier used to identify the individual using the ERSP system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TerminalID" type="iata_StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This is the electronic address of the device from which information is entered.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RequestorID" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">An identifier of the entity making the request  (e.g. ATA/IATA/ID number, Electronic Reservation Service Provider (ERSP), Association of British Travel Agents (ABTA)).  Refer to IATA PADIS Code List for data element 9972 for the code value for Type.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="UniqueID_Type">
							<xs:sequence>
								<xs:element name="MessagePassword" type="iata_StringLength1to16" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">This password provides an additional level of security that the recipient can use to validate the sending party's authority to use the message.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Position" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Latitude" type="iata_StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The measure of the angular distance on a meridian north or south of the equator.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Longitude" type="iata_StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The measure of the angular distance on a meridian east or west of the prime meridian.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Altitude" type="iata_StringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The height of an item, typically above sea level.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AltitudeUnitOfMeasureCode" type="IATA_CodeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provides the unit of measure for the altitude (e.g., feet, meters, miles, kilometers).  Not applicable - no code list exists.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="BookingChannel" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Specifies the booking channel type and whether it is the primary means of connectivity of the source.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Type" type="IATA_CodeType">
							<xs:annotation>
								<xs:documentation xml:lang="en">The type of booking channel (e.g. Global Distribution System (GDS), Alternative Distribution System (ADS), Sales and Catering System (SCS), Property Management System (PMS), Central Reservation System (CRS), Tour Operator System (TOS), Internet and ALL). Not applicable, no code list exists.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Primary" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates whether the enumerated booking channel is the primary means of connectivity used by the source.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CompanyName" type="iata_CompanyNameType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Identifies the company that is associated with the booking channel.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="iata_StateProvType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">State, province, or region name or code needed to identify location.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength0to64">
				<xs:sequence>
					<xs:element name="StateCode" type="iata_StateProvCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The standard code or abbreviation for the state, province, or region.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="iata_SuccessType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Standard way to indicate successful processing of an IATA message. Returning an empty element of this type indicates success.</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="iata_UniqueID_Type" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote). </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="URL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">URL that identifies the location associated with the record identified by the UniqueID.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="IATA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A reference to the type of object defined by the UniqueID element. Refer to IATA PADIS Code List for data elemet 9972.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Instance" type="iata_StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ID" type="iata_StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A unique identifying value assigned by the creating system.  The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ID_Context" type="iata_StringLength1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to identify the source of the identifier (e.g., IATA, ABTA).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompanyName" type="iata_CompanyNameType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the company that is associated with the UniqueID.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="iata_WarningType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Standard way to indicate successful processing of an IATA message, but one in which warnings are generated</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="FreeTextType">
				<xs:sequence>
					<xs:element name="Type" type="IATA_CodeType">
						<xs:annotation>
							<xs:documentation xml:lang="en">The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type ="Unknown".  Refer to IATA PADIS Code List data element 9321.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ShortText" type="iata_StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation>An error in textual format.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Code" type="IATA_CodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this refers to a table of coded values exchanged between applications to identify errors or warnings. Refer to IATA PADIS Code List data element 9321.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DocURL" type="xs:anyURI" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this URL refers to an online description of the error that occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Status" type="iata_StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, recommended values are those enumerated in the IATA_ErrorRS, (NotProcessed | Incomplete | Complete | Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Tag" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RecordID" type="iata_StringLength1to32" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="iata_WarningsType" mixed="true">
		<xs:annotation>
			<xs:documentation>A collection of warning information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Warning" type="iata_WarningType" maxOccurs="99">
				<xs:annotation>
					<xs:documentation>Used in conjunction with the Success element to define a business error.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="iata_Warnings" type="iata_WarningsType"/>
	<xs:element name="iata_Errors" type="iata_ErrorsType"/>
	<xs:complexType name="NumericStringLength10" mixed="true"/>
	<xs:complexType name="ttr_AlphaNumericStringLength1to10" mixed="true"/>
	<xs:complexType name="ttr_AlphaNumericStringLength1to19" mixed="true"/>
	<xs:complexType name="ttr_AlphaNumericStringLength2" mixed="true"/>
	<xs:complexType name="ttr_AlphaNumericStringLength6" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength2OrString0" mixed="true"/>
	<xs:complexType name="ttr_String0" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength6OrNumericStringLength10" mixed="true"/>
	<xs:complexType name="DateOrDateTimeOrString0" mixed="true"/>
	<xs:complexType name="ttr_StringLength0to64" mixed="true"/>
	<xs:complexType name="StringLength0to140" mixed="true"/>
	<xs:complexType name="ttr_StringLength1to20" mixed="true"/>
	<xs:complexType name="ttr_StringLength1to30" mixed="true"/>
	<xs:complexType name="ttr_StringLength1to35" mixed="true"/>
	<xs:complexType name="ttr_StringLength1to99" mixed="true"/>
	<xs:complexType name="StringLength3OrString0" mixed="true"/>
	<xs:complexType name="ttr_StringLength3" mixed="true"/>
	<xs:group name="TripSummary">
		<xs:sequence>
			<xs:element name="title" type="StringLength0to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Trip label or Name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="StringLength0to140" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Trip description</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeOrString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Start date of the trip</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="StringLength0to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the departure city</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3OrString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Start Trip Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="stateCode" type="AlphaNumericStringLength2OrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateName" type="StringLength0to64" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State Name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="AlphaNumericStringLength2OrString0" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="StringLength0to64" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country Name</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeOrString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>End date of the trip</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="StringLength0to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the Arrival City</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3OrString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>End Trip Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="stateCode" type="AlphaNumericStringLength2OrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateName" type="StringLength0to64" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State Name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="AlphaNumericStringLength2OrString0" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="StringLength0to64" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country Name</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="purpose" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Business or Leisure</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="privacy" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Public or Private - Type to be defined</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="BookingChannelOption" mixed="true"/>
	<xs:complexType name="CreationProcessOption" mixed="true"/>
	<xs:complexType name="CreationProcessType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Creation Process</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="type" type="CreationProcessOption" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Creation Process of the TTR element. Possible values are Manual, Mail parsing, External Web Services, Automatic creation, Other</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="ttr_StringLength1to35" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Creation Process description</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BookingChannelType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Booking Channel</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="code" type="BookingChannelOption" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Booking channel. Refer to the OTA Booking Channel Type (BCT) codeset list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="ttr_StringLength1to35" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Booking channel description</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FullOriginSystemType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Information about the origin system</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="type" type="ttr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Origin system determined from the CLAPP.
Possible values: TripConcierge Manual, Amadeus Integrated Partner, AeTM Web, AeTM Mobile, ePower, eRetail, Sell Classic, Sell Connect, Cross-Sell Notifier, TOMA, IRIS...</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="class" type="ttr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the system class that sent the request (G=customer GUI, E=end user GUI, M=middleware, R=robot),</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="category" type="ttr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies the business type of the origin system (e.g IBE=Internet Booking Engine, CM=Customer Managementm KSK=Kiosk).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="owner" type="ttr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">System owner code or name (e.g. IATA code, LSS organisation). Examples: 1A, AF, MCG-MMT, OPO.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="accessPoint" type="ttr_StringLength1to30" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Full name of the service access point (SAP) as defined in the service integrator (SI) database.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ExternalSystemType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Information about the external System corresponding to this ETR</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="creation" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Booking date in the external system with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="bkgReference" minOccurs="0" maxOccurs="30">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Owner" type="ttr_StringLength1to99" minOccurs="0"/>
						<xs:element name="Number" type="ttr_StringLength1to99" minOccurs="0"/>
						<xs:element name="additionalInformation" type="ttr_StringLength1to99" minOccurs="0"/>
						<xs:element name="links" type="ttr_StringLength1to99" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SystemInformation" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Value and Description</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="code" type="ttr_StringLength1to99" minOccurs="0"/>
			<xs:element name="description" type="ttr_StringLength1to99" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PropertiesListType" mixed="true"/>
	<xs:annotation>
		<xs:documentation xml:lang="en">.</xs:documentation>
	</xs:annotation>
	<xs:annotation>
		<xs:documentation xml:lang="en">.</xs:documentation>
	</xs:annotation>
	<xs:complexType name="etr_AlphaStringLength1" mixed="true"/>
	<xs:complexType name="etr_AlphaStringLength1to4" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to2" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to3" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to4" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to6" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to7" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to9" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to10" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to17" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to19" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to20" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to25" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to30" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to31" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to35" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to70" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to99" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength1to256" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength2" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength2to3" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength3" mixed="true"/>
	<xs:complexType name="etr_AlphaNumericStringLength3to7" mixed="true"/>
	<xs:complexType name="NumericStringLength1" mixed="true"/>
	<xs:complexType name="etr_NumericStringLength1to2" mixed="true"/>
	<xs:complexType name="etr_NumericStringLength1to4" mixed="true"/>
	<xs:complexType name="etr_NumericStringLength1to5" mixed="true"/>
	<xs:complexType name="NumericStringLength1to99" mixed="true"/>
	<xs:complexType name="etr_String0" mixed="true"/>
	<xs:complexType name="etr_StringLength1to17" mixed="true"/>
	<xs:complexType name="etr_StringLength1to20" mixed="true"/>
	<xs:complexType name="etr_StringLength1to25" mixed="true"/>
	<xs:complexType name="etr_StringLength1to30" mixed="true"/>
	<xs:complexType name="etr_StringLength1to31" mixed="true"/>
	<xs:complexType name="etr_StringLength1to35" mixed="true"/>
	<xs:complexType name="etr_StringLength1to60" mixed="true"/>
	<xs:complexType name="etr_StringLength1to64" mixed="true"/>
	<xs:complexType name="etr_StringLength1to70" mixed="true"/>
	<xs:complexType name="etr_StringLength1to99" mixed="true"/>
	<xs:complexType name="etr_StringLength1to109" mixed="true"/>
	<xs:complexType name="etr_StringLength1to128" mixed="true"/>
	<xs:complexType name="etr_StringLength1to199" mixed="true"/>
	<xs:complexType name="etr_StringLength1to256" mixed="true"/>
	<xs:complexType name="etr_BooleanOrString0" mixed="true"/>
	<xs:complexType name="DecimalOrString0" mixed="true"/>
	<xs:complexType name="PositiveIntegerOrString0" mixed="true"/>
	<xs:complexType name="etr_nonNegativeIntegerOrString0" mixed="true"/>
	<xs:complexType name="ETRStatusCodeWithoutHL" mixed="true"/>
	<xs:complexType name="ETRStatusCode" mixed="true"/>
	<xs:complexType name="ProviderTypeETR" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Provider Type for almost all elements except specificities needed for ETR Air, Train, Coach, etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ref" type="etr_AlphaNumericStringLength1to6" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provides provider's profile reference</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to70" minOccurs="0">
				<xs:annotation>
					<xs:documentation>provider name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="code" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
				<xs:annotation>
					<xs:documentation>provider code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="externalRef" type="etr_AlphaNumericStringLength1to10" minOccurs="0">
				<xs:annotation>
					<xs:documentation>External profile reference for imported profiles</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="etr_RailProviderType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Provider Type for ETR Train, Coach &amp; Transfer</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ref" type="etr_AlphaNumericStringLength1to6" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provides provider's profile reference</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to70" minOccurs="0">
				<xs:annotation>
					<xs:documentation>provider name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="code" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="24198">INVALID PROVIDER CODE</ama:error>
					</xs:appinfo>
					<xs:documentation>provider code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="externalRef" type="etr_AlphaNumericStringLength1to10" minOccurs="0">
				<xs:annotation>
					<xs:documentation>External profile reference for imported profiles</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="etr_RoomTypeEnum" mixed="true"/>
	<xs:complexType name="etr_MileageUnitType" mixed="true"/>
	<xs:complexType name="etr_MileageType" mixed="true">
		<xs:sequence>
			<xs:element name="distance" type="NumericStringLength1to8" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="24155">INVALID MILEAGE AMOUNT</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Mileage: Distance of the trip</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="unit" type="etr_MileageUnitType" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="987">MILEAGE TYPE MUST BE MILES/KILOMETERS</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Mileage Unit: Unit of distance</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OriginSystemTypeEnum" mixed="true"/>
	<xs:complexType name="etr_accomodationGuaranteePaymentForm" mixed="true"/>
	<xs:complexType name="etr_accomodationDepositPaymentForm" mixed="true"/>
	<xs:complexType name="OriginSystemType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Information about the origin system</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="type" type="OriginSystemTypeEnum" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Type of the origin system: TripConcierge Manual, Amadeus Integrated Partner, AeTM Web, AeTM Mobile, ePower, eRetail, Sell Classic, Sell Connect, Cross-Sell Notifier, TOMA, IRIS, Other</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Description of the origin system (notably in case of Other)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CruiseLocationCodeType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Location Code with mandatory attribute "type" filled with "PORT" to indicate that the value refers to the UNLoccode identifying port (not in RFD currently).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="type" fixed="PORT" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="ETRCommonElements">
		<xs:annotation>
			<xs:documentation xml:lang="en">Group containing the attributes common to all ETR, represented as XSD elements, except the ServiceProvider which is specific for some ETR elements like ETR Air and description which is mandatory for some ETR elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="originSystem" type="OriginSystemType" minOccurs="0"/>
			<xs:element name="creationChannel" type="FullOriginSystemType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provides information on the CLAPP - Client Application.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bkgChannel" type="BookingChannelType" minOccurs="0"/>
			<xs:element name="externalSystem" type="ExternalSystemType" minOccurs="0"/>
			<xs:element name="creation" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Creation date time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="process" type="CreationProcessType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="modification" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Modification date time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="confirmation" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="deadline" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Confirmation date time limit for Option</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="productDescription" minOccurs="0" maxOccurs="100">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="text" minOccurs="0" maxOccurs="50">
							<xs:annotation>
								<xs:documentation>Indicates the text compound</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="__Dummy">
										<xs:sequence>
											<xs:element name="language" type="xs:language" minOccurs="0"/>
											<xs:element name="type" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Text type (i.e.i.e. html, shortDescription, longDescription...)</xs:documentation>
												</xs:annotation>
												<xs:complexType mixed="true"/>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="media" minOccurs="0" maxOccurs="50">
							<xs:annotation>
								<xs:documentation>Indicates image coumpound. html <img/>
								</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="name" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The name of the image</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="type" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Text type (i.e.i.e. html, shortDescription, longDescription...)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="encoding" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Specifies the content encoding 3 letter code (JPG, PNG, GIF) </xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="size" type="PositiveIntegerOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The size of the content in bytes.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="src" type="xs:anyURI" minOccurs="0">
										<xs:annotation>
											<xs:documentation>source</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="etr_AlphaNumericStringLength1to10" minOccurs="0"/>
									<xs:element name="width" type="xs:nonNegativeInteger" minOccurs="0"/>
									<xs:element name="height" type="xs:nonNegativeInteger" minOccurs="0"/>
									<xs:element name="caption" type="etr_StringLength1to128" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The caption associated to a specific image which can be provided in different languages.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="language" type="xs:language" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="iframe" minOccurs="0" maxOccurs="50">
							<xs:annotation>
								<xs:documentation>Indicates the iframe compound.                         html <ifame/>
								</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="name" type="xs:string" minOccurs="0"/>
									<xs:element name="src" type="xs:anyURI" minOccurs="0"/>
									<xs:element name="width" type="xs:nonNegativeInteger" minOccurs="0"/>
									<xs:element name="height" type="xs:nonNegativeInteger" minOccurs="0"/>
									<xs:element name="border" type="xs:nonNegativeInteger" minOccurs="0"/>
									<xs:element name="srcdoc" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>source doc</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="processing" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="mode" minOccurs="0">
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="creator" type="SystemInformation" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identifies the application used to create the element. For example: Amadeus Cross-Sell Notifier Travel Agent Traveller Travel Arranger System</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="properties" type="PropertiesListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Possible values: 
- TravelAgencyResp which Indicates whether the element is under the Travel Agency responsibility and affects her accountancy or not.
- ByPassBillingIndicator which allows superseding the billing information.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="ETR_ActivityMiscellaneousType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="ACT" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type, to be displayed in some displays dynamically. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Title</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="duration" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Duration of the activity</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in Party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="seatNbr" type="etr_AlphaNumericStringLength1to4" minOccurs="0" maxOccurs="9">
				<xs:annotation>
					<xs:documentation xml:lang="en">Seat number, maximum of 9 occurrences</xs:documentation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="101">INVALID SEAT NUMBER</ama:error>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32685">INVALID START DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Service date (start date) and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32688">INVALID END DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">End date and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ticket" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Ticket number</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="etr_FlightIdentifierType" mixed="true">
		<xs:annotation>
			<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
				<ama:error code="728">INVALID FLIGHT NUMBER</ama:error>
			</xs:appinfo>
			<xs:documentation xml:lang="en">Flight Number possibly with a Suffix</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="NumericStringLength1to4">
				<xs:sequence>
					<xs:element name="suffix" type="etr_AlphaStringLength1" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ETR_AirType" mixed="true">
		<xs:sequence>
			<xs:element name="boundID" type="etr_StringLength1to99" minOccurs="0"/>
			<xs:element name="type" type="StringLength3" fixed="AIR" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bkgClass" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="13114">INVALID BOOKING CLASS CODE</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Booking class</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="agreement" type="etr_StringLength1to60" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Airline alliance, group information</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ruleNumber" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Rule number required for some providers to complete the booking</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="oneStepBooking" type="etr_BooleanOrString0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>It toggles one vs two step booking flow</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="airProcessing" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List of properties related to the segment:
- eTicketCandidate, 
- open,
- shuttle,
- lightTicketing,
- synchroWithWebfare
Multiple properties allowed
(eg "eTicketCandidate open")</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Marketing service provider information.
Special XSD definition for ETR Air because the provider code is limited to 2to3 char for ETR Air.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ref" type="etr_AlphaNumericStringLength1to6" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Provides provider (Marketing airline)'s profile reference</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="code" type="etr_AlphaNumericStringLength2to3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="817">INVALID AIRLINE CODE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Provider code (Marketing Airline code)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="name" type="etr_StringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provider name (Marketing Airline name)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="identifier" type="etr_FlightIdentifierType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Marketing Flight Number possibly with a Suffix</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="partnerInfo" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Operating Information</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="serviceProvider" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="code" type="etr_AlphaNumericStringLength2to3" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="817">INVALID AIRLINE CODE</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Operating Airline code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="name" type="etr_StringLength1to60" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Operating Airline name</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="identifier" type="etr_FlightIdentifierType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Operating Flight Number possibly with a Suffix</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32682">INVALID DEPARTURE DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure date (Service date) with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="etr_StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Departure Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the departure city</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="airportName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Name of the departure airport</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Pickup location address information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="via" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation>Technical stops</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="startDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error facet="use" code="31768">MANDATORY DEPARTURE DATE MISSING</ama:error>
									<ama:error code="32682">INVALID DEPARTURE DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure date (Service date) with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="endDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error facet="use" code="31768">MANDATORY DEPARTURE DATE MISSING</ama:error>
									<ama:error code="32682">INVALID DEPARTURE DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure date (Service date) with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="etr_StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Departure Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the departure city</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="airportName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Name of the departure airport</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error facet="minOccurs" code="31766">MANDATORY DEPARTURE POINT MISSING</ama:error>
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Stop location address information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="vehicle" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Change of gauge</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="code" type="etr_AlphaNumericStringLength1to3" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Equipment code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="description" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Equipment description</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32684">INVALID ARRIVAL DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival date with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="etr_StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Arrival Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the arrival city</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="airportName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Name of the arrival airport</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="visaAlert" type="etr_BooleanOrString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicator to define if a Visa is needed for the arrival country (Yes) or not (No)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility  -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Pickup location address information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="vehicle" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" type="etr_AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Equipment code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="description" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Equipment description</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="meal" minOccurs="0" maxOccurs="5">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Code of the meal served on board</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Description of the meal served on board</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="duration" type="DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Flight duration</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mileage" type="etr_MileageType" minOccurs="0"/>
			<xs:element name="baggage" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="quantity" type="Numeric1to99" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11713">INVALID BAGGAGE ALLOWANCE VALUE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Baggage allowance</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="unit" type="etr_StringLength1to99" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11713">INVALID BAGGAGE ALLOWANCE VALUE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">pieces or kg</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkIn" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="endDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="31980">INVALID CHECK-IN TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-in deadline time - Only the time is stored for now</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ticket" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="7121">TICKET NUMBER</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Ticket number</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="issuanceDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Ticket Issuance date</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="cabin" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="bkgClass" type="etr_AlphaNumericStringLength1to7" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="10007">CABIN NUMBER INVALID. PLEASE ENTER A NEW CABIN NUMBER</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Category code of the cabin</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="route" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ID" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Emissions" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:documentation>Gas emissions</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="type" type="xs:string">
							<xs:annotation>
								<xs:documentation>Types of emissions: CO2, NOx, CO, etc.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Amount" type="xs:integer">
							<xs:annotation>
								<xs:documentation>Defines the amiount without decimal separator (i.e Amount=8500 and DecimalPlaces=2 represents 85.00)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="unit" type="AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Store unit of emission: kpp (kilogram per pax), etc.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AirSeatNumberType" mixed="true"/>
	<xs:complexType name="ETR_AirSeatType" mixed="true">
		<xs:sequence>
			<xs:element name="code" type="AlphaNumericStringLength1to8" form="unqualified" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This code is used to identify the seat type</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Status code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRSSR" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRSSR to indicate that the element is an ETR special service request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="seatNbr" type="AirSeatNumberType" minOccurs="0" maxOccurs="9">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error facet="maxOccurs" code="32003">9 SEAT NUMBERS MAXIMUM PER AIR EXTENDED CONTENT ARE ALLOWED</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Seat number, maximum of 9 occurrences</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="serviceProvider" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" type="etr_AlphaNumericStringLength2to3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="817">INVALID AIRLINE CODE</ama:error>
								</xs:appinfo>
								<xs:documentation>service provider code (airline code)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="priceCategory" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" minOccurs="0">
							<xs:annotation>
								<xs:documentation>the RFIC chargeability indicator defined for the sellable object</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="subCode" minOccurs="0">
							<xs:annotation>
								<xs:documentation>the RFISC chargeability indicator defined for the sellable object</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="mode" minOccurs="0">
							<xs:annotation>
								<xs:documentation>chargeable, exempted, nonChargeable, pack</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="characteristics" type="characteristicList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>window, aisle, exit row, chargeable...</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="characteristicValueType" mixed="true"/>
	<xs:complexType name="characteristicValueListType" mixed="true"/>
	<xs:complexType name="characteristicList" mixed="true"/>
	<xs:complexType name="ETR_ApartmentType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="APT" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="2716">HOTEL NAME TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Residence name/Reference Name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bkgClass" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="10474">INVALID ROOM CATEGORY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Apartement category: U-Unknown (value by default), B-Budget, T-Standard, S-Superior, X-Deluxe
Temporary solution waiting to define Apartement as real elements linkned to the ETR Apartement and Pax.
				</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="accomodationType" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="9441">INVALID ROOM TYPE</ama:error>
					</xs:appinfo>
					<xs:documentation> Apartment type: U-Unknown (value by default), S-Studio, D-2-bedroom apartment, R-3-bedroom apartment, F- 4-bedroom apartment
Temporary solution waiting to define Apartment as real elements linkned to the ETR Apartment and Pax
				</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="10915">INVALID NUMBER OF ROOMS</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Quantity (number of apartments)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="additionalServices" type="etr_StringLength1to70" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32104">INVALID FIELD LENGTH ADDITIONAL SERVICES</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">This attribute indicates the additional services that have been requested by the Travel Agent. Additional services are services booked on top of the apartment (generally meal -breakfast, fullboard- or extra bed-crib, ...)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="roomRateDescription" type="etr_StringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32107">INVALID FIELD LENGTH ROOM RATE DESCRIPTION</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Room/Rate description</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelPolicies" type="etr_StringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32108">INVALID FIELD LENGTH CANCELLATION POLICIES</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Cancellation policy</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="inclusions" type="etr_StringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32109">INVALID FIELD LENGTH RATE INCLUSIONS</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Rate inclusions</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="otherRules" type="etr_StringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32110">INVALID FIELD LENGTH OTHER INFORMATION</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Other rules</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Service provider information (Apartment chain information)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="4412">INVALID CHECK-IN DATE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-in date (service date)  - Only date is stored for Apartment in this attribute</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Location(city) code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address). Mandotory for some elements like ETR Hotel.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="contact" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Apartment's onwer phone information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="phone" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32804">INVALID PHONE NUMBER</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="4413">INVALID CHECK-OUT DATE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-out date - Only date is stored for Apartement in this attribute</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkIn" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="startDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="31980">INVALID CHECK-IN TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-in time (indicates the expected time limit (local time) from when the guests can arrive at the property on check-in day) - Only time is stored for Apartment in this attribute</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkOut" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="endDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32105">INVALID CHECK-OUT TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-out time (indicates the time limit (local time) when the guests should leave the property on check-out day)  - Only time is stored for Apartment in this attribute</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="customers" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of the guests: number of adults, number of children by age</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="adults" type="etr_NumericStringLength1to2" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32101">NUMBER OF ADULTS IS TOO HIGH</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">number of adults</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="children" minOccurs="0" maxOccurs="9">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32102">NUMBER OF CHILDREN IS TOO HIGH</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">number of children (for the age in attribute)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="NumericStringLength1to2">
										<xs:sequence>
											<xs:element name="age" type="etr_NumericStringLength1to2" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">age of children</xs:documentation>
													<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
														<ama:error code="3171">CHECK AGES</ama:error>
													</xs:appinfo>
												</xs:annotation>
											</xs:element>
											<xs:element name="ageCode" type="StringLength1to64" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">ageCode (specific to Apartment property)</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="guarantee" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Guarantee information</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:annotation>
						<xs:documentation xml:lang="en">Form of payment</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="paymentForm" type="etr_accomodationGuaranteePaymentForm" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Form of Payment to guarantee the booking</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="paymentDetails" type="etr_StringLength1to31" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Payment details</xs:documentation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11883">INVALID FORMAT ENTERED FOR FOP ELEMENT</ama:error>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="deposit" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Deposit information</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:annotation>
						<xs:documentation xml:lang="en">Form of Payment how the deposit was done for the booking</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="paymentForm" type="etr_accomodationDepositPaymentForm" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Form of payment used to perform the deposit</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="paymentDetails" type="etr_StringLength1to31" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Payment details</xs:documentation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11883">INVALID FORMAT ENTERED FOR FOP ELEMENT</ama:error>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements">
				<xs:annotation>
					<xs:documentation xml:lang="en">ServiceProvider contains chain information</xs:documentation>
				</xs:annotation>
			</xs:group>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_BikeType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="BKE" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description of the bike booked (model).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="31979">INVALID QUANTITY</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Number of bikes that are rent.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="oneWayIndicator" type="etr_BooleanOrString0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Set manually by agent in case arrival differs from departure</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32685">INVALID START DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure date (Service date) and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32688">INVALID END DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival date (Service date) and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<!--***********************************
Declaration of basic types we use
***********************************-->
	<!--**********   Simple Types   **********-->
	<xs:complexType name="CityCodeType" mixed="true"/>
	<!-- Used to have a length limit on PPC -->
	<xs:complexType name="FareFamilyType" mixed="true"/>
	<xs:complexType name="IntegerLength1to13" mixed="true"/>
	<xs:complexType name="ListStringLength1to16" mixed="true"/>
	<xs:complexType name="ListStringLenght1to32" mixed="true"/>
	<!-- Location Validity Type declaration. This a 1-9 chars string -->
	<xs:complexType name="LocationValidityType" mixed="true"/>
	<xs:complexType name="LoyaltyProgramType" mixed="true"/>
	<!-- String Redefinitions-->
	<xs:complexType name="String3to6" mixed="true"/>
	<xs:complexType name="StringLength1to3" mixed="true"/>
	<xs:complexType name="StringLength1to6" mixed="true"/>
	<xs:complexType name="StringLength1to13" mixed="true"/>
	<xs:complexType name="StringLength1to15" mixed="true"/>
	<xs:complexType name="qt_StringLength1to16" mixed="true"/>
	<xs:complexType name="qt_StringLength1to32" mixed="true"/>
	<!--**********   Complex Types   **********-->
	<xs:complexType name="CodeContextAndTypeType" mixed="true">
		<xs:sequence>
			<xs:element name="Code" type="xs:string" minOccurs="0"/>
			<xs:element name="Context" type="xs:string" minOccurs="0"/>
			<xs:element name="Type" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConversionRateType" mixed="true">
		<xs:sequence>
			<xs:element name="Rate" type="xs:integer"/>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0"/>
			<xs:element name="Type" type="xs:string" minOccurs="0"/>
			<xs:element name="From" type="CodeContextAndTypeType"/>
			<xs:element name="To" type="CodeContextAndTypeType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DateTimeAndLocationType" mixed="true">
		<xs:sequence>
			<xs:element name="DateTime" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation xml:lang="en">Date and time for this point</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Location">
				<xs:annotation>
					<xs:documentation>Location information</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:annotation>
						<xs:documentation xml:lang="en">Location has a code and a
							CodeContext</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="Code" type="iata_AlphaNumericStringLength1to4" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provider code in given code context (f.e. Airline
					IATA code)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Context" type="iata_AlphaNumericStringLength1to4" default="IATA" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Code context for given's code (f.e. IATA, OTA,
					etc...)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DisruptionFlightsType" mixed="true">
		<xs:sequence>
			<xs:element name="Order" type="xs:positiveInteger" minOccurs="0"/>
			<xs:element name="TicketNumber" type="IntegerLength1to13" minOccurs="0"/>
			<xs:element name="CouponNumber" type="xs:positiveInteger" minOccurs="0"/>
			<xs:element name="DisruptionTag" type="ListStringLenght1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Tag to indicate that the coupon has been identified as disrupted by ATU process</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FareBasisType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en"> A Fare Basis has 3 attributes: - A Ticket
				Designator (1to6-char string), optional - A Fare Basis Code (1to9-char string)- A Primary Code (1to3-char string),
				optional </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PrimaryCode" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="FareBasisCode" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="TicketDesignator" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FlagType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en"> Flag type is the definition
				of all possible boolean flags that are present in Quotation
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ListStringLenght1to32">
				<xs:sequence>
					<xs:element name="Type" type="xs:string">
						<xs:annotation>
							<xs:documentation xml:lang="en">Define the type of flag which are used
							(Technical, Functional)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BaggageAllowanceType" mixed="true">
		<xs:annotation>
			<xs:documentation>Free Baggage Allowance defined by a weight, a number of pieces or nothing: 23K, 2PC, NO, XX, NIL</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength1to3">
				<xs:sequence>
					<xs:element name="AllowanceType" type="StringLength1to3" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Allowance or charge qualifier: N for Number of pieces, W for Weight, 702 for something else</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MeasureUnit" type="StringLength1" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Qualifier of the unit of measure: K for Kilograms, L for Pounds</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PassengerTypeCodeType" mixed="true">
		<xs:annotation>
			<xs:documentation>Define the generic type for the PassengerTypeCode element</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength1to32">
				<xs:sequence>
					<xs:element name="Type" type="qt_StringLength1to32">
						<xs:annotation>
							<xs:documentation>Define the type of PTC: PNR PTC, Discount PTC, Priced PTC...</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PointType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A Point is an integer with a "Type"
attribute.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="__Dummy">
				<xs:sequence>
					<xs:element name="Type" type="AlphaNumericStringLength1to71" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Define the type: miles (e.g. for Awards) or points (e.g.
for Miles and Cash)</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="QtPriceType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en"> Price Type is the definition of a fare with some
				special properties. It contains: - A Type (string), mandatory - An Amount (decimal),
				optional - A Currency Code (3 alphas), optional - A Decimal Place (positive
				integer), optional </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="IDCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used only in case the other codes are not suitable, e.g. T01 when Price is an Airline Fees.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Description" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes more precisely a Price (or Tax), e.g. "Issuance Fee for Credit Card" when Price is an Airline Fees.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MiscValue" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Type" type="AlphaNumericStringLength1to71" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="qt_TaxType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A Tax is a common Price coupled to several indicators :
				- IsTaxExempted (boolean), optional - Nature Code (string), optional - Tax Indicator
				(string), optional - IsoCode (string), optional - Tax Rate (decimal), optional.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="QtPriceType">
				<xs:sequence>
					<xs:element name="IsExempted" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Attribute set to Y if tax is exempted </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NatureCode" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Nature Code</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Indicator" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Used to specify if the tax is: - X new - O Old - Q
							Refundable - G - U</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="IsoCode" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Iso Country Code</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Rate" type="xs:decimal" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Rate</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TypedDateTimeType" mixed="true">
		<xs:complexContent>
			<xs:extension base="__Dummy">
				<xs:sequence>
					<xs:element name="Type">
						<xs:annotation>
							<xs:documentation>NVA: Not Valid After = Valid until "To"
						NVB: Not Valid Before = Valid from "From"</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="UpsellType" mixed="true">
		<xs:annotation>
			<xs:documentation>Define the generic type for the Upsell element</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Indicator" type="StringLength1to3" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specify the type of upsell. 1 - Upsell and 2 - Price by fare Family .</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<!-- Add future upsell new data here -->
	</xs:complexType>
	<xs:complexType name="UseCaseType" mixed="true">
		<xs:annotation>
			<xs:documentation>Define the generic type for the UseCase element</xs:documentation>
		</xs:annotation>
		<xs:sequence minOccurs="0">
			<xs:element name="Name" type="qt_StringLength1to32">
				<xs:annotation>
					<xs:documentation>ATC, ATU...</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Types" type="ListStringLenght1to32" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Dynamic Waiver (DW), Irregular flag (IRR), Non-Revenue Flag (NRV)...</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="System">
				<xs:annotation>
					<xs:documentation>Info about pricing engine</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="StringLength1to32">
							<xs:sequence>
								<xs:element name="Owner" type="qt_StringLength1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Fare or Fee Owner</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Mode" type="ListStringLenght1to32" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Additional information on the type of call to the pricing system: AIDL, FSC, TLA...
Indicates if an internal processing was performed on Pricing Gateway side to specify a sub use-case to call the pricing engine</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--**********   Attribute Groups   **********-->
	<!--**********   Groups   **********-->
	<xs:group name="PriceComponentGroup">
		<xs:annotation>
			<xs:documentation xml:lang="en"> Pure Prices data should be added here. It extends
				generic context and so have a mandatory "Type" attribute. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Price" minOccurs="0" maxOccurs="999">
				<xs:annotation>
					<xs:documentation>Represent generic monetary
								information.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Amount" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IDCode" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used only in case the other codes are not suitable, e.g. T01 when Price is an Airline Fees.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Description" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Describes more precisely a Price (or Tax), e.g. "Issuance Fee for Credit Card" when Price is an Airline Fees.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MiscValue" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Type" type="AlphaNumericStringLength1to71" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--                    <xs:element name="Fare"     type="FareType"    minOccurs="0" maxOccurs="999"/>-->
			<xs:element name="Tax" minOccurs="0" maxOccurs="999">
				<xs:annotation>
					<xs:documentation>Represent tax information</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Amount" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IDCode" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used only in case the other codes are not suitable, e.g. T01 when Price is an Airline Fees.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Description" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Describes more precisely a Price (or Tax), e.g. "Issuance Fee for Credit Card" when Price is an Airline Fees.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MiscValue" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Type" type="AlphaNumericStringLength1to71" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IsExempted" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Attribute set to Y if tax is exempted </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="NatureCode" type="AlphaNumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Nature Code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Indicator" type="AlphaNumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used to specify if the tax is: - X new - O Old - Q
							Refundable - G - U</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IsoCode" type="iata_AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Iso Country Code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Rate" type="xs:decimal" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Rate</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Bound" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tax applicable to a specific bound, such as airport tax. DE for departure or AR for arrival</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Point" type="PointType" minOccurs="0" maxOccurs="999">
				<xs:annotation>
					<xs:documentation>Define points and miles information</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="PricingInfoGroup">
		<xs:annotation>
			<xs:documentation xml:lang="en"> Pricing related data should be added here. It extends
				generic context and so have a mandatory "Type" attribute. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Number" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Numeric ID</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Indicator" minOccurs="0" maxOccurs="99">
				<xs:annotation>
					<xs:documentation>Used to store indicators that are not boolean such as the Issuance Indicator, FCPI, TST Pricing indicator</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="StringLength1to32">
							<xs:sequence>
								<xs:element name="Type" type="qt_StringLength1to32" minOccurs="0"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="ProductGroup">
		<xs:sequence>
			<xs:element name="Provider" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Full provider's name (free text). It provides also 2
						attributes used to specify the provider code in a given context (f.e. Air
						France =&gt; AF in IATA standard). </xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="AlphaNumericStringLength1to71">
							<xs:sequence>
								<xs:element name="Code" type="iata_AlphaNumericStringLength1to4" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Provider code in given code context (f.e. Airline
					IATA code)</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Context" type="iata_AlphaNumericStringLength1to4" default="IATA" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Code context for given's code (f.e. IATA, OTA,
					etc...)</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Start" type="DateTimeAndLocationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Start Information</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="End" type="DateTimeAndLocationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>End Information</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="TicketingInfoGroup">
		<xs:annotation>
			<xs:documentation xml:lang="en"> Pricing related data should be added here. It extends
				generic context and so have a mandatory "Type" attribute. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Number" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Numeric ID</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="ValidityContextGroup">
		<xs:annotation>
			<xs:documentation xml:lang="en"> This is the context for all Validity data (locations,
				dates...). </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Location" minOccurs="0" maxOccurs="999">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Code" type="iata_AlphaNumericStringLength1to4" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provider code in given code context (f.e. Airline
					IATA code)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Context" type="iata_AlphaNumericStringLength1to4" default="IATA" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Code context for given's code (f.e. IATA, OTA,
					etc...)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Type">
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="DateTime" type="TypedDateTimeType" minOccurs="0" maxOccurs="999"/>
		</xs:sequence>
	</xs:group>
	<!--***********************************-->
	<!-- Declaration of basic types we use -->
	<!--***********************************-->
	<!-- Fare Basis Type declaration. A Fare Basis is a limited string with two attributes: Ticket Designator and Primary Code -->
	<xs:complexType name="AppendedContextType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en"> This is the context for all appended data (free texts).
                Is contains some data like Appended Messages etc... </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Message" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BaggageTypeType" mixed="true"/>
	<xs:complexType name="BaggageUnitType" mixed="true"/>
	<xs:complexType name="BankerRateType" mixed="true">
		<xs:annotation>
			<xs:documentation>A Banker Rate consists of a couple Currency (see Currency Type) + Rate
                (float).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Currency" type="CurrencyType"/>
			<xs:element name="Rate" type="xs:float"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BaseValueType" mixed="true">
		<xs:sequence>
			<xs:element name="Subtype" type="xs:string" minOccurs="0"/>
			<xs:element name="Date" minOccurs="0" maxOccurs="1">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="DateOrDateTimeType">
							<xs:sequence>
								<xs:element name="Type" type="xs:string" minOccurs="0"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<!--xs:attribute name="Description" type="xs:string" use="optional"/-->
	</xs:complexType>
	<xs:complexType name="CarrierCodeType" mixed="true"/>
	<xs:complexType name="ConditionsType" mixed="true"/>
	<xs:complexType name="CountryCodeType" mixed="true"/>
	<xs:complexType name="CouponTypeType" mixed="true"/>
	<xs:complexType name="CurrencyCodeType" mixed="true"/>
	<xs:complexType name="CurrencyType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en"> Currency_type is the representation of IATA definition
                of a currency. It's a couple CurrencyCode (3 alphas) + DecimalPlace (positive
                integer). </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DeliveryModeType" mixed="true"/>
	<xs:complexType name="DisplayTypeType" mixed="true"/>
	<xs:complexType name="DocumentTypeType" mixed="true"/>
	<xs:complexType name="FareCalcType" mixed="true">
		<xs:complexContent>
			<xs:extension base="__Dummy">
				<xs:sequence>
					<xs:element name="hasFareBasis" type="xs:boolean" minOccurs="0"/>
					<xs:element name="isAuto" type="xs:boolean" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FareFlexibilityTypeType" mixed="true"/>
	<xs:complexType name="FareOrRateType" mixed="true">
		<xs:complexContent>
			<xs:extension base="BaseValueType">
				<xs:sequence>
					<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Amount" type="xs:integer" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="IDCode" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Used only in case the other codes are not suitable, e.g. T01 when Price is an Airline Fees.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Description" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Describes more precisely a Price (or Tax), e.g. "Issuance Fee for Credit Card" when Price is an Airline Fees.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MiscValue" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
					<xs:element name="Type" type="AlphaNumericStringLength1to71" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="IncludeVAT" type="xs:boolean" minOccurs="0"/>
					<xs:element name="Quantity" minOccurs="0" maxOccurs="3">
						<xs:complexType mixed="true">
							<xs:complexContent>
								<xs:extension base="__Dummy">
									<xs:sequence>
										<xs:element name="Type" type="xs:string"/>
										<xs:element name="Unit" type="xs:string" minOccurs="0"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FareType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en"> Fare Type is the definition of a fare with some special
                properties. It contains: - A Type (string), mandatory - An Amount (decimal),
                optional - A Currency Code (3 alphas), optional - A Decimal Place (positive
                integer), optional - A Flexibility (FareFlexibilityType_type), optional
            </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="QtPriceType">
				<xs:sequence>
					<xs:element name="Flexibility" type="xs:integer" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FareTypeType" mixed="true"/>
	<xs:complexType name="InConnectionWithType" mixed="true">
		<xs:annotation>
			<xs:documentation>In ConnectionWith type is just an aggregation of: A Carrier Code, A
                Document Serial Number (see ICWTicket Type), A list of Coupon Number (integers), A
                Coupon Type (specific to ICW, as following: * kQT_UndefinedCouponType = 0, *
                kQT_Paper_Coupon = 1, * kQT_Electronic_Coupon = 2) </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CarrierCode" type="CarrierCodeType" minOccurs="0"/>
			<xs:element name="DocumentSerialNumber" type="TicketReferenceType" minOccurs="0"/>
			<xs:element name="CouponNumber" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="CouponType" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IndicatorType" mixed="true"/>
	<xs:complexType name="InterntationalIndicatorType" mixed="true"/>
	<xs:complexType name="IRUType" mixed="true"/>
	<xs:complexType name="IssueIndicatorType" mixed="true"/>
	<xs:complexType name="ItineraryBlobType" mixed="true">
		<xs:annotation>
			<xs:documentation>This is a way to transport and store data unchecked but used by
                someone else.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ID">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Blob" type="xs:string"/>
			<!-- Next element chould not be handled as simple string, but as a true EDI Def, but this not possible right now -->
			<xs:element name="EDIDef" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="qt_LocationType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Location has a code and a CodeContext</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Code" type="iata_AlphaNumericStringLength1to4" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Provider code in given code context (f.e. Airline
					IATA code)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Context" type="iata_AlphaNumericStringLength1to4" default="IATA" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Code context for given's code (f.e. IATA, OTA,
					etc...)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NotionalFareType" mixed="true">
		<xs:annotation>
			<xs:documentation>Notional Fare contains: A NfClassOfService (Indicator) A NfCarrierCode
                (CarrierCode) A NfBreakPointIndicator (String) A NfMileage (Integer) A NfBoardPoint
                (City Code) A NfOffPoint (City Code) A NfHighestCoupon (Fare) A NfCoupon (Fare)
            </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ClassOfService" type="IndicatorType"/>
			<xs:element name="CarrierCode" type="CarrierCodeType"/>
			<xs:element name="BreakPointIndicator" type="xs:string"/>
			<xs:element name="Mileage" type="xs:integer"/>
			<xs:element name="BoardPoint" type="CityCodeType"/>
			<xs:element name="OffPoint" type="CityCodeType"/>
			<xs:element name="HighestCoupon" type="FareType"/>
			<xs:element name="Coupon" type="FareType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OfficeType" mixed="true">
		<xs:sequence>
			<xs:element name="Name" type="xs:string"/>
			<xs:element name="Amid" type="xs:nonNegativeInteger"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PassengerPriceCodeType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">PassengerPriceCodeType is a string with a minimum and a
                maximum length (resp. 3 and 6 characters)</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="String3to6">
				<xs:sequence>
					<xs:element name="Occurence" type="xs:nonNegativeInteger" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PassengerReferenceType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Used to have a reference to a passenger. Contains: -
                Passenger's Name (string) - Passenger's Tattoo (integer) - Passenger's Number
                (integer) - Passenger's Ptc (string) - IsInfant (boolean, default to false) -
                ParentTattoo (integer, used if current passenger is an infant) </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string"/>
			<xs:element name="Tattoo" type="xs:integer"/>
			<xs:element name="Number" type="xs:integer" minOccurs="0"/>
			<xs:element name="PTC" type="xs:string" minOccurs="0"/>
			<!-- IsInfant removed. It is now managed through default value of ParentTattoo (is ==0, then not an infant)
            <xs:element name="IsInfant"     type="xs:boolean"   minOccurs="0" maxOccurs="1" default="false"/> -->
			<xs:element name="ParentTattoo" type="xs:integer" default="0" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PresentAtType" mixed="true"/>
	<xs:complexType name="PresentToType" mixed="true"/>
	<xs:group name="QtExt_PriceComponentGroup">
		<xs:annotation>
			<xs:documentation xml:lang="en"> Pure Prices data should be added here. It extends
				generic context and so have a mandatory "Type" attribute. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Price" type="QtPriceType" minOccurs="0" maxOccurs="999">
				<xs:annotation>
					<xs:documentation>Represent generic monetary
								information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Tax" minOccurs="0" maxOccurs="999">
				<xs:annotation>
					<xs:documentation>Represent tax information</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Amount" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IDCode" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used only in case the other codes are not suitable, e.g. T01 when Price is an Airline Fees.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Description" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Describes more precisely a Price (or Tax), e.g. "Issuance Fee for Credit Card" when Price is an Airline Fees.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MiscValue" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Type" type="AlphaNumericStringLength1to71" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IsExempted" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Attribute set to Y if tax is exempted </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="NatureCode" type="AlphaNumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Nature Code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Indicator" type="AlphaNumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used to specify if the tax is: - X new - O Old - Q
							Refundable - G - U</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IsoCode" type="iata_AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Iso Country Code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Rate" type="xs:decimal" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Rate</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Bound" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tax applicable to a specific bound, such as airport tax. DE for departure or AR for arrival</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Point" type="PointType" minOccurs="0" maxOccurs="999">
				<xs:annotation>
					<xs:documentation>Define points and miles information</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PricingInfo" type="PricingInfoType" minOccurs="0" maxOccurs="2"/>
			<xs:element name="ConvertRate" type="ConversionRateType" minOccurs="0" maxOccurs="3"/>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="PriceComponentType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en"> Pure Prices data should be added here. It extends
                generic context and so have a mandatory "Type" attribute. </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="TypedContextType">
				<xs:sequence>
					<xs:element name="Price" type="QtPriceType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Represent generic monetary
                                information.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<!--                    <xs:element name="Fare"     type="FareType"    minOccurs="0" maxOccurs="unbounded"/>-->
					<xs:element name="Tax" type="qt_TaxType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Represent tax information</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PriceStructureType" mixed="true">
		<xs:sequence>
			<xs:element name="Type" type="xs:string" minOccurs="0"/>
			<xs:element name="Subtype" type="xs:string" minOccurs="0"/>
			<xs:element name="Applicability" type="xs:string" minOccurs="0"/>
			<xs:element name="ConvertRate" type="ConversionRateType" minOccurs="0" maxOccurs="3"/>
			<xs:element name="CancellationPolicy" type="etr_StringLength1to256" minOccurs="0" maxOccurs="1"/>
			<xs:choice minOccurs="0">
				<xs:element name="Tax" type="SaleTaxType"/>
				<xs:element name="Price" type="FareOrRateType"/>
				<xs:element name="VAT" type="VatType"/>
				<xs:element name="Point" type="PointType"/>
			</xs:choice>
			<!-- <xs:element name="Subvalues" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:sequence> -->
			<xs:element name="PriceStructure" type="PriceStructureType" minOccurs="0" maxOccurs="99"/>
			<!-- </xs:sequence>
                </xs:complexType>
            </xs:element> -->
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PricingInfoType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en"> Pricing related data should be added here. It extends
                generic context and so have a mandatory "Type" attribute. </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="TypedContextType">
				<xs:sequence>
					<xs:element name="Type" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Type attribute is used to provide info on how the pricing was returned. Possible values are: Global (for a global price including all travellers) and Individual (price is for one person applicable to each linked travellers).</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
					<xs:element name="FareBasis" type="FareBasisType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Classic IATA Fare Basis definition. Used in case of non-GDS Air ETR (like ATAC). It contains 3 attributes: PrimaryCode, TicketDesignator and FareBasisCode.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PricingTypeType" mixed="true"/>
	<xs:complexType name="qt_ProductType" mixed="true">
		<xs:sequence>
			<xs:element name="Provider" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Full provider's name (free text). It provides also 2
                        attributes used to specify the provider code in a given context (f.e. Air
                        France =&gt; AF in IATA standard). </xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="__Dummy">
							<xs:sequence>
								<xs:element name="Code" type="iata_AlphaNumericStringLength1to4" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Provider code in given code context (f.e. Airline
					IATA code)</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Context" type="iata_AlphaNumericStringLength1to4" default="IATA" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Code context for given's code (f.e. IATA, OTA,
					etc...)</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="start" type="DateTimeAndLocationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Start Information</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="End" type="DateTimeAndLocationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>End Information</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProductTypeType" mixed="true"/>
	<xs:complexType name="RailBookingClassCodeType" mixed="true"/>
	<xs:complexType name="ReservationInfoType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en"> Pricing related data should be added here. It extends
                generic context and so have a mandatory "Type" attribute. </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="TypedContextType">
				<xs:sequence>
					<xs:element name="Number" type="xs:integer" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RficType" mixed="true"/>
	<xs:complexType name="RfiDescriptionType" mixed="true"/>
	<xs:complexType name="RoutingInfoType" mixed="true">
		<xs:annotation>
			<xs:documentation>Routing Info Type is a group of Data. It contains: A Carrier Code, Two
                City Codes (CityFrom and CityTo), An Indicator (1 char). </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CarrierCode" type="CarrierCodeType"/>
			<xs:element name="CityFrom" type="CityCodeType"/>
			<xs:element name="CityTo" type="CityCodeType"/>
			<xs:element name="Indicator" type="IndicatorType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SaleTaxType" mixed="true">
		<xs:complexContent>
			<xs:extension base="FareOrRateType">
				<xs:sequence>
					<xs:element name="Indicator" type="xs:string" minOccurs="0"/>
					<xs:element name="ID" type="xs:string" minOccurs="0"/>
					<xs:element name="ComputationMethod" type="xs:string" minOccurs="0"/>
					<xs:element name="NatureCode" type="xs:string" minOccurs="0"/>
					<xs:element name="IsoCode" type="xs:string" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SegmentOpenIndicatorType" mixed="true"/>
	<xs:complexType name="StringToStringMapType" mixed="true">
		<xs:annotation>
			<xs:documentation>This an unbounded list of couple (Key, Value), both being
                strings.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Item" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Key" type="xs:string"/>
						<xs:element name="Value" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TaxesStatusType" mixed="true"/>
	<xs:complexType name="TechnicalUseCaseType" mixed="true"/>
	<xs:complexType name="TicketingInfoType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en"> Ticketing related data should be added here. It extends
                generic context and so have a mandatory "Type" attribute. </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="TypedContextType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TicketReferenceType" mixed="true">
		<xs:annotation>
			<xs:documentation>ICWTicket Type is a reference to ticket. It contains: An Airline Code,
                A Ticket Number (9-10 chars string) Two Conjonctives (2 chars strings)
            </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AirlineCode" type="CarrierCodeType"/>
			<xs:element name="TicketNumber">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="FirstConjonctive">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="SecondConjonctive">
				<xs:complexType mixed="true"/>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TicketTypeType" mixed="true"/>
	<xs:complexType name="TransfertType" mixed="true"/>
	<xs:complexType name="TypedContextType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en"> This is a generic context. Is contains only one
                mandatory "Type" attribute. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="State" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define the status: current or original (i.e. the one at creation
                    time).</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TypedLocationType" mixed="true">
		<xs:complexContent>
			<xs:extension base="LocationType">
				<xs:sequence>
					<xs:element name="Type">
						<xs:annotation>
							<xs:documentation>Type of location time (e.g. start and
                            end)</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ValidityContextType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en"> This is the context for all Validity data (locations,
                dates...). </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Location" type="TypedLocationType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="DateTime" type="TypedDateTimeType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VatType" mixed="true">
		<xs:complexContent>
			<xs:extension base="BaseValueType">
				<xs:sequence>
					<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Amount" type="xs:integer" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="IDCode" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Used only in case the other codes are not suitable, e.g. T01 when Price is an Airline Fees.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Description" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Describes more precisely a Price (or Tax), e.g. "Issuance Fee for Credit Card" when Price is an Airline Fees.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MiscValue" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
					<xs:element name="Type" type="AlphaNumericStringLength1to71" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Indicator" type="xs:string" minOccurs="0"/>
					<xs:element name="ID" type="xs:string" minOccurs="0"/>
					<xs:element name="ComputationMethod" type="xs:string" minOccurs="0"/>
					<xs:element name="CountryCode" type="xs:string" minOccurs="0"/>
					<xs:element name="Base" type="FareOrRateType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Price Type declaration. A Price includes 4 attributes: Amount (float), Currency (3 alphas), DecimalPlaces (non-negative integer) and Type (free text). -->
	<!-- Fare Type declaration. A Fare is a Price with some additional data (flexibility etc...) -->
	<!-- Currency Type declaration. A Currency is couple: Currency (3 alphas), DecimalPlaces (non-negative integer) -->
	<!-- Currency Code declaration. A IATA Currency code is a 3 characters string. -->
	<!-- Indicator Type declaration. An indicator is a single character string. -->
	<!-- Indicator Type declaration. An indicator is a single character string. -->
	<!-- Tax Type declaration. A tax is a Fare with specific indicators. -->
	<!-- Prevision of futures changes: Discount, Margin etc... -Not used right now-
    <xs:complexType name="DiscountType">
        <xs:annotation>
            <xs:documentation  xml:lang="en">Fill description for Discount here.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="PriceType">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="MarginType">
        <xs:annotation>
            <xs:documentation  xml:lang="en">Fill description for Margin here.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="PriceType">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    -->
	<!-- City Code Type declaration. A City Code is a string with 3 to 6 chars. -->
	<!-- Carrier Code Type Declaration. A Carrier Code is a string with 2 to 3 alphanums characters. -->
	<!-- Carrier Code Type Declaration. A Carrier Code is a string with 2 to 3 alphanums characters. -->
	<!-- String to String Map Type declaration. This a list of couple (Key, Value), both data being standard strings. -->
	<!--***********************************-->
	<!--**********************************-->
	<!-- Types related to Pricing Records -->
	<!--**********************************-->
	<!-- Passenger Price Code Type declaration. This is a string with 3 to 6 chars -->
	<!-- Used to have a length limit on PPC -->
	<!-- Passenger Reference declaration.-->
	<!-- Quotation Product Type declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!-- Office Type declaration. This is a n Office Name and an Office Amid -->
	<!--**********************************-->
	<!--********************************************-->
	<!-- Types related to Itinerary Pricing Records -->
	<!--********************************************-->
	<!-- Technical UseCase Type declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!-- Pricing Type declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!--********************************************-->
	<!--*******************************************-->
	<!-- Types related to Document Pricing Records -->
	<!--*******************************************-->
	<!-- Document Type declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!--*******************************************-->
	<!--************************************************************-->
	<!-- Types related to Generic Quotation (common to Iti and Doc) -->
	<!--************************************************************-->
	<!-- Issue Indicator Type declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!-- Fare Type declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!-- Taxes Status Type declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!-- IRU Type declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!-- International Indicator Type declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!-- Banker Rate Type declaration. This is a couple: Currency (Currency_type), Rate (float). -->
	<!-- Fare Calculation Type declaration. This is actually a string with 2 attributes. -->
	<!-- Loyalty Program Type declaration. This is actually a string with 2 attributes. -->
	<!-- Itineray Blobs. This is used to store unprocessed data for other tasks. -->
	<!--************************************************************-->
	<!--**************************************-->
	<!-- Types related to Itinerary Quotation -->
	<!--**************************************-->
	<!-- Ticket Type declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!-- Delivery Mode Type declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!--**************************************-->
	<!--*************************************-->
	<!-- Types related to Document Quotation -->
	<!--*************************************-->
	<!-- Display Type declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!-- RFIC Type declaration. This a 1-3 chars string. -->
	<!-- RFI Description Type declaration. This a 0-221 chars string. -->
	<!--*************************************-->
	<!--*******************************************-->
	<!-- Types related to Fare Component Quotation -->
	<!--*******************************************-->
	<!--*******************************************-->
	<!--***********************************-->
	<!-- Types related to Coupon Quotation -->
	<!--***********************************-->
	<!-- Coupon Type declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!-- Fare Flexibility Type declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!-- Fare Family Type declaration. This a 8 chars string. -->
	<!--*************************************-->
	<!--*********************************************-->
	<!-- Types related to Itinerary Coupon Quotation -->
	<!--*********************************************-->
	<!-- Segment Open Indicator declaration. This is a bounded integer, to match C/C++ enum implementation. -->
	<!-- Baggage Allowance Type declaration. Baggage Allow contains: a Measure (float), a Bagg. Type (nil, weight, pc etc...) and a Bagg. Unit (Kg, Pounds, PCs), -->
	<!-- Baggage Type declaration. Bagg Type is used mainly in Baggage Allowance. -->
	<!-- Baggage Unit declaration. Bagg Unit is used mainly in Baggage Allowance. -->
	<!-- Notional Fare Type declaration. This includes several specific data to Notional Fare. -->
	<!-- Location Validity Type declaration. This a 1-9 chars string -->
	<!-- Condition Type declaration. This a 1-250 chars string -->
	<!-- Rail Booking Class Code Type declaration. This a 1-3 chars string -->
	<!--*********************************************-->
	<!--********************************************-->
	<!-- Types related to Document Coupon Quotation -->
	<!--********************************************-->
	<!-- Present At Type declaration. This a 1-62 chars string -->
	<!-- Present To Type declaration. This a 1-69 chars string -->
	<!-- In Connection With Type declaration. It contains a Carrier Code, a Document Serial Number, a Coupon Type and a Coupon Number List. -->
	<!-- ICWTicket Type. Reference to a ticket, used in In Connection With structure. -->
	<!-- Routing Info Type declaration. It contains 2 City Codes, a Carrier Code and an Indicator. -->
	<!--******************************************************************-->
	<!--              Types related to functionnal packages               -->
	<!-- Extends those types to have specific data at any quotation level -->
	<!--******************************************************************-->
	<!--******************************************************************-->
	<!--********************** SALES QUOTATION TYPES *********************-->
	<!--******************************************************************-->
	<!--******************************************************************-->
	<!---->
	<!--****************************************************************************-->
	<!-- Declaration of QtElementGroup : real data of Element quotation (top level) -->
	<!--****************************************************************************-->
	<xs:group name="QtElementGroup">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				This is the top of quotation element hierarchy: all others quotations elements must include this group.
				This involves that every data specified in this group are common to every single quotation; this enables evolution and addition of generic data management.
				Currently, it contains:
				- A list of Fares,
				- A list of Taxes,
				- A Quotation Type
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="PriceComponentGroup"/>
			<xs:element name="QuotationType" type="FullQuotationType_Type"/>
			<xs:element name="Flag" type="FlagType" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation>Used to transmit list of technical or functional boolean flags such as IsConfidential, IsIssued, IsAutomatic...</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="QtExt_ElementGroup">
		<xs:annotation>
			<xs:documentation xml:lang="en">
				This is the top of quotation element hierarchy: all others quotations elements must include this group.
				This involves that every data specified in this group are common to every single quotation; this enables evolution and addition of generic data management.
				Currently, it contains:
				- A list of Fares,
				- A list of Taxes,
				- A Quotation Type
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="QtExt_PriceComponentGroup"/>
			<xs:element name="QuotationType" type="FullQuotationType_Type"/>
			<xs:element name="Flags" type="FlagType" minOccurs="0" maxOccurs="5"/>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="EnumQuotationTypeType" mixed="true"/>
	<xs:complexType name="FullQuotationType_Type" mixed="true">
		<xs:complexContent>
			<xs:extension base="EnumQuotationTypeType">
				<xs:sequence>
					<xs:element name="Description" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Offer a 'human-readable' description of Quotations' SBM type. Possible values are:
							"QT_DEFAULT" for basic untyped quotations,
							"QT_GEN" for abstract Generics (Iti, Doc),
							"QT_PR" for abstract Pricing Records (Package, ItiPR, DocPR etc...),
							"QT_DOC_PR" for Document Pricing Records,
							"QT_ITI_PR" for Itinerary Pricing Records,
							"QT_ITI" for Itineraries,
							"QT_ATC_PR" for ATC Pricing Records,
							"QT_DOC" for Documents,
							"QT_OBF_DET" for OBs,
							"QT_OBF" for OB Fees,
							"QT_CPN" for abstract Coupons (ItiCoupon, DocCoupons),
							"QT_PCK" for Packages,
							"QT_DOC_CPN" for Document Coupons,
							"QT_ITI_CPN" for Itinerary Coupons,
							"QT_MRK" for Mark-ups,
							"QT_REF" for Refunds,
							"QT_EXT_PR" for Extended Pricing Records,
							"QT_ADN" for Add-ons,
							"QT_UNKNOWN" for Unknowns,
							"QT_FAR_COM" for Fare Components.
							"QT_USE" for  Used
							"QT_ITI_USE" for Itinerary Used
							"QT_OCF" for OC fees
							"QT_ITI_SER" for Itinerary Services
							"QO_ITI_PR" for Old Itinerary Pricing Records,
							"QO_ITI" for Old Itineraries,
							"QO_FAR_COM" for Old Fare Components.
							"QO_ITI_CPN" for Old Itinerary Coupons,
							"QO_ITI_USE" for Old Itinerary Used,
							"QT_BND" for Bound
						</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--	Uncomment this to be able to use auto-instanciation tools
	<xs:element name="QtElementImplementation" type="QtElement"/>-->
	<xs:element name="qt_QtElement">
		<xs:annotation>
			<xs:documentation xml:lang="en">
                This is the Quotation Element declaration.
            </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:sequence>
				<xs:element name="State" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true"/>
				</xs:element>
				<xs:group ref="QtElementGroup"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<!--*******************************************************************-->
	<!-- Declaration of QtAtc type that includes the real data (group) -->
	<!--*******************************************************************-->
	<xs:group name="AtcPricingInfoGroup">
		<xs:annotation>
			<xs:documentation>
				This is the Quotation ATC Pricing context Type declaration.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="PricingInfoGroup"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="QtAtcGroup">
		<xs:sequence>
			<xs:group ref="QtElementGroup"/>
			<xs:element name="PricingInfo" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:group ref="AtcPricingInfoGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<!--xs:element name="QtAtc">
		<xs:complexType>
			<xs:sequence minOccurs="1" maxOccurs="1">
				<xs:group ref="QtAtcGroup"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element-->
	<!--*******************************************************************-->
	<!-- Declaration of QtBound type that includes the real data (group) -->
	<xs:group name="BoundPricingInfoGroup">
		<xs:annotation>
			<xs:documentation>
                This is the Quotation Bound Pricing context Type declaration.
            </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="QtElementGroup"/>
			<xs:group ref="PricingInfoGroup"/>
		</xs:sequence>
	</xs:group>
	<!--*******************************************************************-->
	<!-- Declaration of QtGeneric type that includes the real data (group) -->
	<xs:group name="ComponentPricingInfoGroup">
		<xs:annotation>
			<xs:documentation>
                This is the Quotation Generic Pricing context Type declaration.
            </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="PricingInfoGroup"/>
			<xs:element name="Location" minOccurs="0" maxOccurs="2">
				<xs:annotation>
					<xs:documentation>Location information</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Code" type="iata_AlphaNumericStringLength1to4" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provider code in given code context (f.e. Airline
					IATA code)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Context" type="iata_AlphaNumericStringLength1to4" default="IATA" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Code context for given's code (f.e. IATA, OTA,
					etc...)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Type">
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!-- Those two has been merged in Location : they now have a "Type" attribute (From or To)
                        <xs:element name="Origin"                           type="CityCodeType"            minOccurs="0" maxOccurs="1"/>
                        <xs:element name="Destination"                      type="CityCodeType"            minOccurs="0" maxOccurs="1"/>-->
		</xs:sequence>
	</xs:group>
	<!--*******************************************************************-->
	<!-- Declaration of QtCoupon type that includes the real data (group) -->
	<!--*******************************************************************-->
	<xs:group name="CouponPricingInfoGroup">
		<xs:annotation>
			<xs:documentation>
                This is the Quotation Coupon Pricing context Type declaration.
            </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="PricingInfoGroup"/>
		</xs:sequence>
	</xs:group>
	<!--*************************************************************************-->
	<!-- Declaration of QtFareComponent type that includes the real data (group) -->
	<!--*************************************************************************-->
	<xs:group name="FareComponentPricingInfoGroup">
		<xs:sequence>
			<xs:group ref="ComponentPricingInfoGroup"/>
			<xs:element name="FareBasis" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="FareBasisCode" type="StringLength1to15" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Fare Basis Code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TicketDesignator" type="StringLength1to13" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Ticket Designator</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Upsell" type="UpsellType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Upsell is sales technique whereby a seller induces the customer to purchase more expensive items</xs:documentation>
				</xs:annotation>
			</xs:element>
			<!-- Same as Upsell: some future info may come in there -->
			<xs:element name="FareFamily" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Fare Family groups certain number of fares</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Code" type="iata_AlphaNumericStringLength1to30" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Owner" type="AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation>CompanyOwner</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="QtFareComponentType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">
                This is the Quotation Fare Component Type declaration. Quotation Fare
                Component is a quotation type to store pricing data relative to a group of Coupons.
                It includes, like all others quotations types, Quotation Element.
            </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="State" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:group ref="QtElementGroup"/>
			<xs:element name="PricingInfo" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Seasonality" type="iata_AlphaLength1" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the Seasonality (e.g. High, Low...)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TripIndicator" type="iata_AlphaNumericStringLength1to14" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the trip (e.g. Round trip, One Way...)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:group ref="FareComponentPricingInfoGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--xs:element name="QtFareComponent" type="QtFareComponentType"/-->
	<!--*******************************************************************-->
	<!-- Declaration of QtGeneric type that includes the real data (group) -->
	<!--*******************************************************************-->
	<xs:group name="GenericPricingInfoGroup">
		<xs:annotation>
			<xs:documentation>
                This is the Quotation Generic Pricing context Type declaration.
            </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="PricingInfoGroup"/>
			<xs:element name="LoyaltyProgram" type="LoyaltyProgramType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Represent the Loyalty program used:
0 Undefined,
1 Miles and Cash,
2 Promo Certificate,
3 Transitional Certificate,
4 Companions Certificate,
5 Award Pricing		</xs:documentation>
				</xs:annotation>
			</xs:element>
			<!--xs:element name="OverrideInformation" minOccurs="0" maxOccurs="999">
				<xs:annotation>
					<xs:documentation>ReasonCode for fields being in TST/TSM</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="Type"  use="required">
						<xs:annotation>
							<xs:documentation>Field being updated or pricing option override</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="[a-zA-Z]{1,25}"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>			
					<xs:attribute name="ReasonCode" use="required">
						<xs:annotation>
							<xs:documentation>Code</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="[a-zA-Z0-9]{1,320}"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="Comments"  use="optional">
						<xs:annotation>
							<xs:documentation>Code Description</xs:documentation>
						</xs:annotation>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1"/>
								<xs:maxLength value="320"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element-->
		</xs:sequence>
	</xs:group>
	<!-- ***************************************************************-->
	<!--
	<xs:element name="QtGeneric">
		<xs:complexType>
			<xs:sequence minOccurs="1" maxOccurs="1">
				<xs:group ref="GenericPricingInfoGroup"/>
			</xs:sequence>
			<xs:attributeGroup ref="TypedContextAttributeGroup"/>
		</xs:complexType>
	</xs:element> 
    -->
	<!--*********************************************************************-->
	<!-- Declaration of QtItiCoupon type that includes the real data (group) -->
	<!--*********************************************************************-->
	<xs:group name="ItineraryCouponPricingInfoGroup">
		<xs:sequence>
			<xs:group ref="CouponPricingInfoGroup"/>
			<xs:element name="PricedPTC" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates which Passenger Type Code SSP has used for computing the price returned. Ex: ADT, CHD
					</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="FareBasis" type="FareBasisType" minOccurs="0"/>
			<xs:element name="ClassOfService" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Class of Service at Pricing/Repricing time</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="BaggageAllowance" type="BaggageAllowanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Free Baggage allowance information details</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="ItineraryCouponTicketingInfoGroup">
		<xs:sequence>
			<xs:element name="FlightReference" type="DisruptionFlightsType" minOccurs="0" maxOccurs="999"/>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="QtCouponItineraryType" mixed="true">
		<xs:annotation>
			<xs:documentation>
                This is the Quotation Itinerary Coupon Type declaration. Quotation Itinerary Coupon
                is a quotation type to store specific data at Coupon level for TST representation.
                This means that any data added at this level is not accessible to Document Coupon,
                avoiding useless data at unwanted level. It includes, Quotation Coupon Element.
            </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="State" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:group ref="QtElementGroup"/>
			<xs:element name="PricingInfo" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:group ref="ItineraryCouponPricingInfoGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ProductInfo" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:group ref="ProductGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="TicketingInfo" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:group ref="ItineraryCouponTicketingInfoGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="qt_QtCouponItinerary" type="QtCouponItineraryType"/>
	<!--    Uncomment this to be able to use auto-instance generation
    <xs:element name="ListQtItiCoupon">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="QtItiCoupon" type="QtCouponItineraryType" minOccurs="2" maxOccurs="2"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
     -->
	<!--*******************************************************************-->
	<!-- Declaration of QtItinerary type that includes the real data (group) -->
	<!--*******************************************************************-->
	<xs:group name="ItineraryPricingInfoGroup">
		<xs:sequence>
			<xs:group ref="GenericPricingInfoGroup"/>
			<xs:element name="PFCTaxes" minOccurs="0" maxOccurs="999">
				<xs:annotation>
					<xs:documentation>Airport breakdown tax at coupon level.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Amount" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IDCode" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used only in case the other codes are not suitable, e.g. T01 when Price is an Airline Fees.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Description" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Describes more precisely a Price (or Tax), e.g. "Issuance Fee for Credit Card" when Price is an Airline Fees.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MiscValue" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Type" type="AlphaNumericStringLength1to71" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IsExempted" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Attribute set to Y if tax is exempted </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="NatureCode" type="AlphaNumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Nature Code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Indicator" type="AlphaNumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used to specify if the tax is: - X new - O Old - Q
							Refundable - G - U</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IsoCode" type="iata_AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Iso Country Code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Rate" type="xs:decimal" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Rate</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Bound" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tax applicable to a specific bound, such as airport tax. DE for departure or AR for arrival</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Airport" type="CityCodeType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="ItineraryTicketingInfoGroup">
		<xs:sequence>
			<xs:element name="LastDateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Last Date to Ticket in UTC</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="QtItineraryGroup">
		<xs:sequence>
			<xs:group ref="QtElementGroup"/>
			<xs:element name="PricingInfo" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="DateTime" type="xs:dateTime" minOccurs="0"/>
						<xs:group ref="ItineraryPricingInfoGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="TicketingInfo" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:group ref="ItineraryTicketingInfoGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<!--xs:element name="QtItinerary">
		<xs:complexType>
			<xs:sequence minOccurs="1" maxOccurs="1">
				<xs:group ref="QtItineraryGroup"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element-->
	<!--*******************************************************************-->
	<!-- Declaration of QtItinerary type that includes the real data (group) -->
	<xs:complexType name="QtItineraryTechnicalType" mixed="true">
		<xs:annotation>
			<xs:documentation>
                This is the Quotation Itinerary Coupon Type declaration. Quotation Itinerary Coupon
                is a quotation type to store specific data at Coupon level for TST representation.
                This means that any data added at this level is not accessible to Document Coupon,
                avoiding useless data at unwanted level. It includes, Quotation Coupon Element.
            </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="State" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:group ref="QtItineraryGroup"/>
			<xs:element name="Blob" minOccurs="0" maxOccurs="999">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="__Dummy">
							<xs:sequence>
								<xs:element name="Message" type="xs:string" minOccurs="0"/>
								<xs:element name="Version" type="xs:int" minOccurs="0"/>
								<xs:element name="Release" type="xs:int" minOccurs="0"/>
								<xs:element name="Agency" type="xs:string" minOccurs="0"/>
								<xs:element name="ID" type="xs:string" minOccurs="0"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--*******************************************************************-->
	<!--    Uncomment this to be able to use auto-instance generation tools-->
	<xs:element name="qt_QtItineraryTechnical" type="QtItineraryTechnicalType"/>
	<!--*******************************************************************-->
	<!-- Declaration of QtItinerary type that includes the real data (group) -->
	<!--*******************************************************************-->
	<xs:group name="PricingRecordPricingInfoGroup">
		<xs:annotation>
			<xs:documentation>
                This is the Quotation Generic Pricing context Type declaration.
            </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="PricingInfoGroup"/>
			<xs:choice>
				<xs:element name="UseCase" type="UseCaseType" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Define the use case leading to the creation of the Quotation: ATC, ATU, First Pricing, Best pricer...
And also a sub type if needed: Dynamic Waiver, Irregular flag...</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="ProcessFlag" minOccurs="0" maxOccurs="3">
					<xs:annotation>
						<xs:documentation>Possible Values: 	
							- ATU Involuntary Amadeus Ticket Change			
							- HTF Hold The fare
							maxOccurs is set to 3 since we have define just three value and this Flag is deprecated.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true"/>
				</xs:element>
			</xs:choice>
			<xs:element name="Originator" type="PointOfSaleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the pricing office</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PassengerTypeCode" type="PassengerTypeCodeType" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation>Defines the different types of PTC: PTC in PNR, PricedPTC, PricingPTC</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<!--******************************************************************
	<xs:complexType name="QtPricingRecordType">
		<xs:annotation>
			<xs:documentation>
				This is the Quotation Pricing Record Type declaration. Quotation Pricing Record is a quotation type to store shared data for all Pricing Record. It includes, like all others quotations types, Quotation Element.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="QtElementType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PricingRecordPricingInfoType">
		<xs:annotation>
			<xs:documentation>
				This is the Quotation Generic Pricing context Type declaration.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="PricingInfoType"/>
		</xs:complexContent>
	</xs:complexType>
	   Uncomment this to be able to use auto-instance generation tools-->
	<!--*******************************************************************-->
	<!-- Declaration of QtItinerary type that includes the real data (group) -->
	<!--*******************************************************************-->
	<xs:group name="ItineraryPricingRecordPricingInfoGroup">
		<xs:annotation>
			<xs:documentation>
                This is the Quotation Generic Pricing context Type declaration.
            </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="PricingRecordPricingInfoGroup"/>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="QtItineraryPricingRecordType" mixed="true">
		<xs:annotation>
			<xs:documentation>
				This is the Quotation Itinerary Pricing Record Type declaration. it is used for TST pricing record. It includes Quotation Pricing Record Type.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="State" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:group ref="QtElementGroup"/>
			<xs:element name="PricingInfo" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:group ref="ItineraryPricingRecordPricingInfoGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--    Uncomment this to be able to use auto-instance generation tools-->
	<xs:element name="qt_QtItineraryPricingRecord" type="QtItineraryPricingRecordType"/>
	<!--*********************************************************************-->
	<!-- Declaration of QtItiService type that includes the real data (group) -->
	<!--*********************************************************************-->
	<xs:complexType name="QtItineraryServiceType" mixed="true">
		<xs:annotation>
			<xs:documentation>
				This is the Quotation Itinerary Pricing Record Type declaration. it is used for TST pricing record. It includes Quotation Pricing Record Type.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="State" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:group ref="QtElementGroup"/>
			<xs:element name="PricingInfo" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:group ref="PricingInfoGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="qt_QtItineraryService" type="QtItineraryServiceType"/>
	<!--    Uncomment this to be able to use auto-instance generation
    <xs:element name="ListQtItiService">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="QtItiService" type="QtItineraryServiceType" minOccurs="2" maxOccurs="2"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
     -->
	<!--*******************************************************************-->
	<!-- Declaration of QtOCFees type that includes the real data (group) -->
	<!--*******************************************************************-->
	<xs:complexType name="QtOCFeesType" mixed="true">
		<xs:annotation>
			<xs:documentation>
				This is the Quotation Itinerary Pricing Record Type declaration. it is used for TST pricing record. It includes Quotation Pricing Record Type.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="State" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:group ref="QtElementGroup"/>
			<xs:element name="PricingInfo" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:group ref="PricingInfoGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--*******************************************************************-->
	<!-- Declaration of QtOCFees type that includes the real data (group) -->
	<!--*******************************************************************-->
	<xs:group name="RefundPricingInfoGroup">
		<xs:sequence>
			<xs:group ref="PricingInfoGroup"/>
			<xs:element name="RefundedItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Refunded Itinerary</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="WaiverCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Waiver Code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataSourceIdentifier" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>R REFUND RECORD AGT-38262475 AA/17FEB12 F TKT-Y
â¢ M for manual refund;
â¢ F for automated refund;
â¢ L for mixed (manual and automated) refund;
â¢ A for full refund with commission penalty (CP element);
â¢ C for ATC refund;
â¢ P for ATC refund with commission penalty or miscellaneous fee (MF element) update;
â¢ N for ATC refund with other updates in the refund record.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CancellationFeeCom" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Amount" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PricingCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The pricing code is extracted from the TST. The meaning of the different values is:
â¢ I IATA priced by Fare Serve;
â¢ A ATAF priced by Fare Server;
â¢ M Priced by Manually created TST (with fare server interaction);
â¢ N Priced by Manually created TST (without fare server interaction for future use);
â¢ B Negotiated Rate (F) or (G) that has been manually updated;
â¢ G Negotiated Rate with Agent/Consolidator as net updater;
â¢ F Negotiated Rate with Airline as net updater;
â¢ O RBD override;
â¢ T IATA priced Inclusive Tour (IT) priced by Fare Server.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SettlementAuthorizationCode" type="xs:string" minOccurs="1" maxOccurs="21">
				<xs:annotation>
					<xs:documentation>SAC is a number provided at refund processing time (TRFP) and automatically added in correspondent refund record. Or it could be manually added to the refund record.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="QtRefundType" mixed="true">
		<xs:annotation>
			<xs:documentation>This is the Quotation Refund Record Type declaration.
            </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="State" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:group ref="QtElementGroup"/>
			<xs:element name="PricingInfo" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:group ref="RefundPricingInfoGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="qt_QtRefund" type="QtRefundType"/>
	<!--*************************************************************************-->
	<!-- Declaration of QtFareComponent type that includes the real data (group) -->
	<!--*************************************************************************-->
	<xs:complexType name="QtServiceComponentType" mixed="true">
		<xs:annotation>
			<xs:documentation>
				This is the Quotation Itinerary Pricing Record Type declaration. it is used for TST pricing record. It includes Quotation Pricing Record Type.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="State" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:group ref="QtElementGroup"/>
			<xs:element name="PricingInfo" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Seasonality" type="iata_AlphaLength1" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the Seasonality (e.g. High, Low...)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:group ref="ComponentPricingInfoGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--*******************************************************************-->
	<!--    Uncomment this to be able to use auto-instance generation tools
    <xs:element name="ListQtServiceComponent">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="QtServiceComponent" type="QtServiceComponentType" minOccurs="1" maxOccurs="2"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    -->
	<!--*******************************************************************-->
	<!-- Declaration of QtOCFees type that includes the real data (group) -->
	<!--*******************************************************************-->
	<xs:group name="UsedProductPricingInfoGroup">
		<xs:sequence>
			<xs:group ref="PricingInfoGroup"/>
			<xs:element name="FareBasis" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="PrimaryCode" type="StringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Primary Code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="FareBasisCode" type="StringLength1to6" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Fare Basis Code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TicketDesignator" type="StringLength1to6" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Ticket Designator</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="UsedProductProductInfoGroup">
		<xs:sequence>
			<xs:group ref="ProductGroup"/>
		</xs:sequence>
	</xs:group>
	<!--*******************************************************-->
	<xs:group name="UsedProductTicketingInfoGroup">
		<xs:sequence>
			<xs:element name="FlightReference" type="DisruptionFlightsType" minOccurs="0" maxOccurs="999"/>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="QtUsedProductType" mixed="true">
		<xs:annotation>
			<xs:documentation>
                This is the Quotation Itinerary Coupon Type declaration. Quotation Itinerary Coupon
                is a quotation type to store specific data at Coupon level for TST representation.
                This means that any data added at this level is not accessible to Document Coupon,
                avoiding useless data at unwanted level. It includes, Quotation Coupon Element.
            </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="State" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:group ref="QtElementGroup"/>
			<xs:element name="PricingInfo" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:group ref="UsedProductPricingInfoGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ProductInfo" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Type" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Type of Product:
											AIR</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Subtype" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Subtype of Product:
											Flown</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Identifier" type="iata_FlightNumberType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Flight Number</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ClassOfService" type="StringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Class of Service</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:group ref="UsedProductProductInfoGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="TicketingInfo" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:group ref="UsedProductTicketingInfoGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--xs:element name="QtUsedProduct" type="QtUsedProductType"/-->
	<xs:complexType name="TermsAndCondtionsType" mixed="true">
		<xs:annotation>
			<xs:documentation>This is used to store all conditions and applicable terms for one given product or one given package.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ModificationRule" type="ModificationRuleType" minOccurs="0" maxOccurs="99"/>
			<xs:element name="Description" type="DescriptionType" minOccurs="0" maxOccurs="99"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ModificationRuleType" mixed="true">
		<xs:sequence>
			<xs:element name="modification" type="RestrictedCategoryType">
				<xs:annotation>
					<xs:documentation>This defines what type of modification is concerned in this rule.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="circumstances" type="RestrictedCategoryListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is normally used for air travel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Conditions" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="validity" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="duration" type="xs:duration" minOccurs="0">
										<xs:annotation>
											<xs:documentation>This is used to determine the Validity Period after/before a date (e.g. -P2D meaning 2 days before a date). If both a start date and an end date are specified, then this "Duration" attribute should not be used.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="start" type="ExtendedDateTimeType" minOccurs="0"/>
									<xs:element name="end" type="ExtendedDateTimeType" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="ExceptionalEvents" minOccurs="0" maxOccurs="99">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="event" type="EventType" minOccurs="1" maxOccurs="99"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Terms" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:annotation>
						<xs:documentation>This is used to list all the Terms of the rule (e.g. Penalty).</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="Penalty" type="PenaltyType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Description" type="DescriptionType" minOccurs="0" maxOccurs="99"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EventType" mixed="true">
		<xs:annotation>
			<xs:documentation>Defines the events under which a rule can apply.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="element" type="EventElementType" minOccurs="0"/>
			<xs:element name="status" type="EventStatusType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EventElementType" mixed="true"/>
	<xs:complexType name="EventStatusType" mixed="true"/>
	<xs:complexType name="PenaltyType" mixed="true">
		<xs:sequence>
			<xs:element name="Price" type="QtPriceType" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:documentation>Only for Air Travel: The "Type" attribute in "PriceType" must be used to specify if the Penalty is for "ADV" or "BDV" or ...</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Tax" type="qt_TaxType" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:documentation>Only for Air Travel: The "Type" attribute in "PriceType" must be used to specify if the Penalty is for "ADV" or "BDV" or ...</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Points" type="PointType" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:documentation>Penalty charges expressed in loyalty program unit, e.g. 100 MILES.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RetainedValue" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:documentation>Charges that apply without necessarily getting a benefit or service, e.g. 1 NIGHT.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="__Dummy">
							<xs:sequence>
								<xs:element name="Type" type="xs:string" minOccurs="0"/>
								<xs:element name="Unit">
									<xs:annotation>
										<xs:documentation>Unit e.g. Night.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CategoryListType" mixed="true"/>
	<xs:complexType name="RestrictedCategoryListType" mixed="true"/>
	<xs:complexType name="AlphabeticDateType" mixed="true"/>
	<xs:complexType name="ExtendedDateTimeType" mixed="true">
		<xs:annotation>
			<xs:documentation>This type is used to specify a Date(with or without offset) expressed in a standard format in addition to the name of an associated event.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="dateTime" type="DateOrTimeOrDateTimeType" minOccurs="0"/>
			<xs:element name="name" type="AlphabeticDateType" minOccurs="0"/>
			<xs:element name="offset" type="xs:duration" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RestrictedCategoryType" mixed="true"/>
	<xs:complexType name="RestrictedSubCategoryType" mixed="true"/>
	<xs:complexType name="DescriptionType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Textual information to provide description and/or additional information.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="__Dummy">
				<xs:sequence>
					<xs:element name="language" type="xs:language" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Language identification.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="type" type="AlphaNumericStringLength1to3" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="QuotationTreeGenericType" mixed="true">
		<xs:annotation>
			<xs:documentation>Generic type for the quotation tree display</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Quotation" minOccurs="1" maxOccurs="999">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="QuotationGenericElementType">
							<xs:sequence>
								<xs:element name="ID" type="xs:NMTOKEN" minOccurs="0">
									<xs:annotation>
										<xs:documentation source="Universal Unique ID"/>
									</xs:annotation>
								</xs:element>
								<xs:element name="TID" type="xs:NMTOKEN" minOccurs="0">
									<xs:annotation>
										<xs:documentation source="Temporary Unique ID"/>
									</xs:annotation>
								</xs:element>
								<xs:element name="RefIDs" type="xs:NMTOKENS" minOccurs="0">
									<xs:annotation>
										<xs:documentation source="Simple space separated list of UUIDs that this element is linked to."/>
									</xs:annotation>
								</xs:element>
								<xs:element name="LegacyID" type="xs:NMTOKEN" minOccurs="0">
									<xs:annotation>
										<xs:documentation source="Tattoo type for usage in legacy PNRACC based messages."/>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="QuotationGenericElementType" mixed="true">
		<xs:annotation>
			<xs:documentation>Generic type to describe all types of branch of the quotation tree</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="QtElementGroup"/>
			<xs:element name="PricingInfo" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Type" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Type attribute is used to provide info on how the pricing was returned. Possible values are: Global (for a global price including all travellers) and Individual (price is for one person applicable to each linked travellers).</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Number" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Numeric ID</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PassengerTypeCode" type="PassengerTypeCodeType" minOccurs="0" maxOccurs="3">
							<xs:annotation>
								<xs:documentation>Defines the different types of PTC: PTC in PNR, PTC used for pricing, Priced PTC</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:group ref="PricingRecordPricingInfoGenericGroup" minOccurs="0"/>
						<xs:group ref="ItineraryPricingInfoGenericGroup" minOccurs="0"/>
						<xs:group ref="FareComponentPricingInfoGenericGroup" minOccurs="0"/>
						<xs:group ref="ItineraryCouponPricingInfoGenericGroup" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ConvertRate" type="ConversionRateType" minOccurs="0" maxOccurs="3"/>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="PricingRecordPricingInfoGenericGroup">
		<xs:annotation>
			<xs:documentation>group containing pricing information specific to Quotation Pricing Record</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Indicator" type="IndicatorType" minOccurs="0" maxOccurs="99">
				<xs:annotation>
					<xs:documentation>Used to store indicators that are not boolean such as the Issuance Indicator, FCPI, TST Pricing indicator</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UseCase" type="UseCaseType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Define the use case leading to the creation of the Quotation: ATC, ATU, First Pricing, Best pricer...
And also a sub type if needed: Dynamic Waiver, Irregular flag...</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Originator" type="PointOfSaleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the pricing office</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="ItineraryPricingInfoGenericGroup">
		<xs:annotation>
			<xs:documentation>group containing pricing information specific to Quotation Itinerary</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LoyaltyProgram" type="LoyaltyProgramType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Represent the Loyalty program used:
0 Undefined,
1 Miles and Cash,
2 Promo Certificate,
3 Transitional Certificate,
4 Companions Certificate,
5 Award Pricing		</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PFCTaxes" minOccurs="0" maxOccurs="999">
				<xs:annotation>
					<xs:documentation>Airport breakdown tax at coupon level.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Amount" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IDCode" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used only in case the other codes are not suitable, e.g. T01 when Price is an Airline Fees.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Description" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Describes more precisely a Price (or Tax), e.g. "Issuance Fee for Credit Card" when Price is an Airline Fees.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MiscValue" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Type" type="AlphaNumericStringLength1to71" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IsExempted" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Attribute set to Y if tax is exempted </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="NatureCode" type="AlphaNumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Nature Code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Indicator" type="AlphaNumericStringLength1to5" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used to specify if the tax is: - X new - O Old - Q
							Refundable - G - U</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IsoCode" type="iata_AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Iso Country Code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Rate" type="xs:decimal" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Rate</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Bound" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tax applicable to a specific bound, such as airport tax. DE for departure or AR for arrival</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Airport" type="CityCodeType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="FareComponentPricingInfoGenericGroup">
		<xs:annotation>
			<xs:documentation>group containing pricing information specific to Quotation Fare Component</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Location" minOccurs="0" maxOccurs="2">
				<xs:annotation>
					<xs:documentation>Location information</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Code" type="iata_AlphaNumericStringLength1to4" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provider code in given code context (f.e. Airline
					IATA code)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Context" type="iata_AlphaNumericStringLength1to4" default="IATA" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Code context for given's code (f.e. IATA, OTA,
					etc...)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Type">
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!-- Same as Upsell: some future info may come in there -->
			<xs:element name="Upsell" type="UpsellType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Upsell is sales technique whereby a seller induces the customer to purchase more expensive items</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FareFamily" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Fare Family groups certain number of fares</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Code" type="iata_AlphaNumericStringLength1to30" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Owner" type="AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation>CompanyOwner</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="ItineraryCouponPricingInfoGenericGroup">
		<xs:annotation>
			<xs:documentation>group containing pricing information specific to Quotation Itinerary Coupon</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FareBasis" type="FareBasisType" minOccurs="0"/>
			<xs:element name="ClassOfService" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Class of Service at Pricing/Repricing time</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="BaggageAllowance" type="BaggageAllowanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Free Baggage Allowance defined by a weight, a number of pieces or nothing: 23K, 2PC, NO, XX, NIL</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="CarCategoryTypeEnum" mixed="true"/>
	<xs:complexType name="ETR_CarType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="CCR" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="00973">INVALID CONFIRMATION NUMBER</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32808">INVALID CANCELLATION NUMBER</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to convey Car rental company's information. </xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ref" type="etr_AlphaNumericStringLength1to6" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Car rental company associated profile reference</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="code" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="10426">INVALID CAR COMPANY CODE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Car rental company code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="name" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32696">INVALID CAR COMPANY NAME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Car rental company name</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to convey the pickup information  (pickup date, pickup time, pickup location..) of the car booking.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32698">INVALID PICKUP DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Pickup date (service date) with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="providerLocationCode" type="etr_AlphaNumericStringLength1to10" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11361">INVALID LOCATION CODE</ama:error>
								</xs:appinfo>
								<xs:documentation>Used to specify a non airport Location Code for Pickup.  This code should be unique to clearly identify the location.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Pickup Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Pickup location address information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32123">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="12701">INVALID STATE CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="contact" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Pickup location phone information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="phone" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32804">INVALID PHONE NUMBER</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Equipment description</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to convey the drop-off information (drop-off date, drop-off time, drop-off location..) of the car booking.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32801">INVALID DROP-OFF DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Drop-off date (service date) with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="providerLocationCode" type="etr_AlphaNumericStringLength1to10" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11361">INVALID LOCATION CODE</ama:error>
								</xs:appinfo>
								<xs:documentation>Used to specify a non airport Location Code for Drop-off. This code should be unique to clearly identify the location.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility  -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Drop-off Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Drop-off location address information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32123">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="12701">INVALID STATE CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="contact" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Drop-off location phone information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="phone" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32804">INVALID PHONE NUMBER</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Equipment description</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="vehicle" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against ACRISS Special equipment is under creation BE's responsibility  -->
					</xs:appinfo>
					<xs:documentation>Information on the vehicle booked.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32805">INVALID VEHICLE CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against ACRISS Vehicle code is under creation BE's responsibility  -->
								</xs:appinfo>
								<xs:documentation>The ACRISS Code defining the Vehicle.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="description" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32806">INVALID VEHICLE DESCRIPTION FORMAT</ama:error>
								</xs:appinfo>
								<xs:documentation>Description of the vehicle booked.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="option" minOccurs="0" maxOccurs="99">
							<xs:annotation>
								<xs:documentation>Used to convey information about special equipments (GPS, Baby seat,..) associated to the car booking.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="code" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="00534">INVALID SPECIAL EQUIPMENT CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against ACRISS Special equipment is under creation BE's responsibility  -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Equipment code</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="description" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32811">INVALID SPECIAL EQUIPMENT DESCRIPTION FORMAT</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Equipment description</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="conditions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to convey all information about the rate.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="rate" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="category" type="CarCategoryTypeEnum" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="00422">RATE CATEGORY NOT IN SYSTEM</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format  -->
											</xs:appinfo>
											<xs:documentation>The RateCategory attribute defines a set of valid values for the category of a rate. Typically rates are offered as either Leisure rates or Business (Corporate) rates, with a business rate usually including additional costs such as the cost of insurance, etc.  This set of values defines the rate categories.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="code" type="etr_AlphaNumericStringLength1to6" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="00533">INVALID RATE CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format  -->
											</xs:appinfo>
											<xs:documentation>Car rental company's code for the rate.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="description" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="00984">INVALID RATE DESCRIPTION FLD</ama:error>
											</xs:appinfo>
											<xs:documentation>Rate Code description</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
								<!-- The promotional Code is not yet included in ETR SOR, this information is thus commented for now
					<xs:attribute use="optional" name="promotionalCode">
						<xs:annotation>
							<xs:documentation>Used to convey the value of a promotional Code applied to the rate.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					-->
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="delivery" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to convey Delivery information.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Collection or Delivery addresses</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32123">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="12701">INVALID STATE CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="siteID" type="etr_AlphaNumericStringLength1to10" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="23150">INVALID FORMAT SITE ID FIELD SR</ama:error>
											</xs:appinfo>
											<xs:documentation>Used to convey the Site Identifier Reference as defined in Car rental company's system.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="siteName" type="etr_AlphaNumericStringLength1to30" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="23151">INVALID FORMAT SITE NAME FIELD SN</ama:error>
											</xs:appinfo>
											<xs:documentation>Used to convey the Site Name as defined in Car rental company's system.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="contact" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Collection or Delivery phone information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="phone" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32804">INVALID PHONE NUMBER</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Equipment description</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="collection" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to convey Collection information.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Collection or Delivery addresses</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32123">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="12701">INVALID STATE CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="siteID" type="etr_AlphaNumericStringLength1to10" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="23150">INVALID FORMAT SITE ID FIELD SR</ama:error>
											</xs:appinfo>
											<xs:documentation>Used to convey the Site Identifier Reference as defined in Car rental company's system.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="siteName" type="etr_AlphaNumericStringLength1to30" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="23151">INVALID FORMAT SITE NAME FIELD SN</ama:error>
											</xs:appinfo>
											<xs:documentation>Used to convey the Site Name as defined in Car rental company's system.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="contact" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Collection or Delivery phone information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="phone" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32804">INVALID PHONE NUMBER</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Equipment description</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="payment" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to convey payment information. (including Voucher) </xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="voucher" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Details of voucher information indicating prepayment.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="type" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="08340">INVALID VOUCHERVALUE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against Voucher value list is under creation BE's responsibility  -->
											</xs:appinfo>
											<xs:documentation>Indicates what part of the amount the Voucher covers. (e.g. Full credit, partial credit)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="amount" type="etr_nonNegativeIntegerOrString0" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32813">INVALID PARTIAL CREDIT VOUCHER VALUE</ama:error>
											</xs:appinfo>
											<xs:documentation>Indicates the amount covered in case of partial credit voucher.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="currency" type="etr_AlphaNumericStringLength1to3" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32814">INVALID PARTIAL CREDIT VOUCHER CURRENCY</ama:error>
											</xs:appinfo>
											<xs:documentation>Indicates the currency in case of partial credit voucher.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="decimalPlace" type="etr_nonNegativeIntegerOrString0" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32813">INVALID PARTIAL CREDIT VOUCHER VALUE</ama:error>
											</xs:appinfo>
											<xs:documentation>Indicates the decimal place in case of partial credit voucher.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="billingNumber" type="etr_AlphaNumericStringLength1to25" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="08342">INVALID BILLING NUMBER</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against Voucher value list is under creation BE's responsibility  -->
											</xs:appinfo>
											<xs:documentation>Reference number of the Billing Account that will be charged for the payment.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="providerReference" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32812">INVALID PROVIDER VOUCHER SEQUENCE NUMBER</ama:error>
											</xs:appinfo>
											<xs:documentation>Unique Identifier created by the Car rental provider to identify this voucher.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!-- The loyalty numebrs (CD, ID) are not yet included in ETR SOR, this information is thus commented for now
			<xs:element minOccurs="0" name="customerReferences" maxOccurs="5">
				<xs:annotation>
					<xs:documentation>Used to convey information about the customer's loyalty programs.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute use="optional" name="type">
						<xs:annotation>
							<xs:documentation>Used to specify the type of loyalty program. (eg. Corporate ID, Customer ID,..)</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute use="optional" name="value">
						<xs:annotation>
							<xs:documentation>Used to pass the identifier of the customer within the loyalty program.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		-->
			<xs:group ref="ETRCommonElements"/>
			<xs:element name="estimatedTotalRate" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Amount" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<!-- xs:attributeGroup ref="ETRCommonAttributes"/ -->
	</xs:complexType>
	<xs:complexType name="ETR_CoachType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="COA" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bkgClass" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Booking class</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="etr_RailProviderType" minOccurs="0"/>
			<xs:element name="identifier" type="etr_AlphaNumericStringLength1to6" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Line number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="seatNbr" type="etr_AlphaNumericStringLength1to4" minOccurs="0" maxOccurs="9">
				<xs:annotation>
					<xs:documentation xml:lang="en">Seat number, maximum of 9 occurrences</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32682">INVALID DEPARTURE DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure date (Service date) with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the departure point</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="etr_StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32089">DEPARTURE/ARRIVAL TERMINAL TOO LONG</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Departure Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32684">INVALID ARRIVAL DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival date with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the arrival point</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="etr_StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32089">DEPARTURE/ARRIVAL TERMINAL TOO LONG</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Arrival Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="vehicle" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="description" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32187">EQUIPMENT DESCRIPTION TOO LONG</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Equipment description</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="mileage" type="etr_MileageType" minOccurs="0"/>
			<xs:element name="baggage" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="quantity" type="Numeric1to99" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="12712">INVALID BAGGAGE PIECES - CHECK FORMAT</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Number of Baggage Items</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkIn" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="endDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="31980">INVALID CHECK-IN TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-in deadline time - Only the time is stored for now</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ticket" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32088">TICKET NUMBER TOO LONG</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Ticket number</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_CruiseType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="CRU" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="negoSpaceId" type="etr_AlphaNumericStringLength1to17" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">he group identifier in the cruise line system. If the cruise is part of a group booking</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32682">INVALID DEPARTURE DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Sailing Departure date (Service date) with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
							</xs:appinfo>
								<xs:documentation xml:lang="en">Name of the departure port</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="CruiseLocationCodeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure portcode</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32684">INVALID ARRIVAL DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival date with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
							</xs:appinfo>
								<xs:documentation xml:lang="en">Name of the arrival port</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="CruiseLocationCodeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival portcode</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkIn" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="startDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="31980">INVALID CHECK-IN TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">boarding time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="endDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="31980">INVALID CHECK-IN TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">boarding deadline time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="vehicle" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="name" type="etr_StringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Ship name</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="code" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Ship code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="description" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Ship description</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="duration" type="DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Duration of the sailing by night</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ticket" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="7121">TICKET NUMBER</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Ticket number</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="issuanceDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Ticket Issuance date</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="mileage" type="etr_MileageType" minOccurs="0"/>
			<xs:element name="cabin" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to7" minOccurs="0"/>
						<xs:element name="bkgClass" type="etr_AlphaNumericStringLength1to7" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="10007">CABIN NUMBER INVALID. PLEASE ENTER A NEW CABIN NUMBER</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Category code of the cabin (berthed category)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="stop" minOccurs="0" maxOccurs="200">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="locationCode" type="CruiseLocationCodeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
								</xs:appinfo>
								<xs:documentation xml:lang="en">port Of call code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Name of the port of Call</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="start" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32682">INVALID DEPARTURE DATE/TIME</ama:error>
												<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">arrival date to the port of call with optional time</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="end" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32682">INVALID DEPARTURE DATE/TIME</ama:error>
												<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">departure date from the port of call with optional time</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="diningOptions" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="mealPlan" type="etr_StringLength1to99" minOccurs="0"/>
						<xs:element name="shiftOfMeal" type="AlphaNumericStringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation> dining seating code (ex FIRST, SECOND, OPEN...)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="insurance" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" type="etr_AlphaNumericStringLength3to7" minOccurs="0">
							<xs:annotation>
								<xs:documentation>cruise compagny's insurance</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="description" type="etr_StringLength1to99" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Description of the insurance</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
		<!-- NB: the cruise adds-on such as packages (hotel, shore excursion), dining, transfers and insurance should be handled in the appropriate extended content product type: Hotel, Excursion, Insurance, Restaurant and Transfer and then linked to the Cruise ETR. -->
	</xs:complexType>
	<xs:complexType name="ETR_DocumentationType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="DCM" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation>Name of the documentation</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="31979">INVALID QUANTITY</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Number of documentations</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="author" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="02709">NAME TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation>The author of the documentation</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="3337">INVALID DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date and possibly time at which the documentation will be delivered</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_EatAndDrinkMiscellaneousType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="EAT" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">TITLE NAME/TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Eat and Drink Name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="03337">INVALID DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Eat and Drink Reservation start date (Service Date) and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Eat and Drink Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_ExcursionType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="EXC" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Title</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="duration" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Duration of the excursion</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in Party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32685">INVALID START DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Service date (start date) and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32688">INVALID END DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">End date and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ticket" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Ticket number</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FerryLocationCodeType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Location Code: when the "type" attribute is not present (or present with value IATA), then the Location Code value is IATA (in this case, the IATA location code is checked against RFD). Else, the location code value is not IATA. In this case, the "type"  attribute gives an indication about the type of location code. For ETR Ferry, the Location Code value must be 3 for the port code.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StringLength3">
				<xs:sequence>
					<xs:element name="type" type="etr_AlphaNumericStringLength3to7" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ETR_FerryType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="FER" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bkgClass" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Booking class</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32682">INVALID DEPARTURE DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Sailing Departure date (Service date) with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
							</xs:appinfo>
								<xs:documentation xml:lang="en">Name of the departure port</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="FerryLocationCodeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
								</xs:appinfo>
								<xs:documentation>departure port code.when the "type" attribute is not present (or present with value IATA), then the Location Code value is IATA. Else, the location code value is not IATA. In this case, the "type"  attribute gives an indication about the type of location code.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32684">INVALID ARRIVAL DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival date with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
							</xs:appinfo>
								<xs:documentation xml:lang="en">Name of the arrival port</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="FerryLocationCodeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival port code</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkIn" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="startDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="31980">INVALID CHECK-IN TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">boarding time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="endDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="31980">INVALID CHECK-IN TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">boarding deadline time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="vehicle" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="name" type="etr_StringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Ship name</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="code" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Ship code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="description" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Ship description</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ticket" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="7121">TICKET NUMBER</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Ticket number</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="issuanceDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Ticket Issuance date</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="mileage" type="etr_MileageType" minOccurs="0"/>
			<xs:element name="travelerVehicle" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="type" minOccurs="0">
							<xs:annotation>
								<xs:documentation>vehicule type: car, bike, motocycle, campingcar...</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ref" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
							<xs:annotation>
								<xs:documentation>vehicula plate</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="description" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">vehicule description or length</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
		<!-- NB: the cruise adds-on such as packages (hotel, shore excursion), dining, transfers and insurance should be handled in the appropriate extended content product type: Hotel, Excursion, Insurance, Restaurant and Transfer and then linked to the Cruise ETR. -->
	</xs:complexType>
	<xs:complexType name="ETR_GoodiesType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="GOO" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation>Name of the goodies</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="31979">INVALID QUANTITY</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Number of goodies</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="3337">INVALID DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date and possibly time of the goodies</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_HotelType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="HHL" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="2716">HOTEL NAME TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Hotel name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="propertyCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Code of the property in Amadeus</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bkgClass" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="10474">INVALID ROOM CATEGORY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Room category: U-Unknown, B-Budget , T-Standard, S-Superior, X-Deluxe, E-Executive, J-Junior Suite, D-Suite standard, I-Suite Deluxe.
Temporary solution waiting to define Room as real elements linkned to the ETR Hotel and Pax.
				</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="accomodationType" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="9441">INVALID ROOM TYPE</ama:error>
					</xs:appinfo>
					<xs:documentation> Room type: U-Unknown, S-Single, D-Double, R-Triple, Y-Family Room.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="10915">INVALID NUMBER OF ROOMS</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Quantity (number of rooms)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="additionalServices" type="etr_StringLength1to70" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32104">INVALID FIELD LENGTH ADDITIONAL SERVICES</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">This attribute indicates the additional services that have been requested by the Travel Agent. Additional services are services booked on top of the room (generally meal -breakfast, fullboard- or extra bed-crib, ...)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="roomRateDescription" type="etr_StringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32107">INVALID FIELD LENGTH ROOM RATE DESCRIPTION</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Room/Rate description</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelPolicies" type="etr_StringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32108">INVALID FIELD LENGTH CANCELLATION POLICIES</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Cancellation policy</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="inclusions" type="etr_StringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32109">INVALID FIELD LENGTH RATE INCLUSIONS</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Rate inclusions</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="otherRules" type="etr_StringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32110">INVALID FIELD LENGTH OTHER INFORMATION</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Other rules</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bedType" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Bed type</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bedNumber" type="etr_nonNegativeIntegerOrString0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Number of Beds</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="amenities" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>List amenities available in the property</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Service provider information (Hotel chain information)</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="ProviderTypeETR">
							<xs:sequence>
								<xs:element name="source" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Type of provider: GDS, CRS, Multi source</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="chain" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Hotel Chain information</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ref" type="etr_AlphaNumericStringLength1to6" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Hotel chain's profile reference</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="name" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Hotel chain name</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="code" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Hotel chain code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="externalRef" type="etr_AlphaNumericStringLength1to10" minOccurs="0">
							<xs:annotation>
								<xs:documentation>External profile reference for imported profiles</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="4412">INVALID CHECK-IN DATE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-in date (service date)  - Only date is stored for Hotel in this attribute</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Location(city) code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address). Mandotory for some elements like ETR Hotel.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="contact" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Hotel phone information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="phone" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32804">INVALID PHONE NUMBER</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="fax" type="etr_StringLength1to99" minOccurs="0"/>
									<xs:element name="email" type="etr_StringLength1to99" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="4413">INVALID CHECK-OUT DATE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-out date - Only date is stored for Hotel in this attribute</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="duration" type="DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Total stay duration . Number of nights</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="checkIn" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="startDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="31980">INVALID CHECK-IN TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-in time (indicates the expected time limit (local time) from when the guests can arrive at the property on check-in day) - Only time is stored for Hotel in this attribute</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkOut" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="endDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32105">INVALID CHECK-OUT TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-out time (indicates the time limit (local time) when the guests should leave the property on check-out day)  - Only time is stored for Hotel in this attribute</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="customers" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of the guests: number of adults, number of children by age</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="adults" type="etr_NumericStringLength1to2" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32101">NUMBER OF ADULTS IS TOO HIGH</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">number of adults</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="children" minOccurs="0" maxOccurs="9">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32102">NUMBER OF CHILDREN IS TOO HIGH</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">number of children (for the age in attribute)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="NumericStringLength1to2">
										<xs:sequence>
											<xs:element name="age" type="etr_NumericStringLength1to2" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">age of children</xs:documentation>
													<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
														<ama:error code="3171">CHECK AGES</ama:error>
													</xs:appinfo>
												</xs:annotation>
											</xs:element>
											<xs:element name="ageCode" type="StringLength1to64" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">ageCode (specific to Hotel property)</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="diningOptions" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="mealPlan" type="etr_AlphaNumericStringLength1to99" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="guarantee" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Guarantee information</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:annotation>
						<xs:documentation xml:lang="en">Form of payment</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="paymentForm" type="etr_accomodationGuaranteePaymentForm" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Form of Payment to guarantee the booking</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="paymentDetails" type="etr_StringLength1to31" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Payment details</xs:documentation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11883">INVALID FORMAT ENTERED FOR FOP ELEMENT</ama:error>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="deposit" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Deposit information</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:annotation>
						<xs:documentation xml:lang="en"> Price Type is the definition of a fare with some
                special properties. It contains: - A Type (string), mandatory - An Amount (decimal),
                optional - A Currency Code (3 alphas), optional - A Decimal Place (positive
                integer), optional </xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Amount" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Type" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="paymentForm" type="etr_accomodationDepositPaymentForm" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Form of Payment to guarantee the booking</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="paymentDetails" type="etr_StringLength1to31" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Payment details</xs:documentation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11883">INVALID FORMAT ENTERED FOR FOP ELEMENT</ama:error>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements">
				<xs:annotation>
					<xs:documentation xml:lang="en">For Hotel, serviceProvider contains chain information</xs:documentation>
				</xs:annotation>
			</xs:group>
			<xs:element name="code" minOccurs="0" maxOccurs="10">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="type" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Type of identification code: booking code, inventory block code</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="rate" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="description" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Rate description</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="code" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Rate plan code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="inclusions" type="etr_StringLength1to256" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32109">INVALID FIELD LENGTH RATE INCLUSIONS</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Rate inclusions</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="room" minOccurs="0" maxOccurs="10">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to10" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="salesConditions" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Amount" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_InsuranceType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="INS" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="insuranceType" type="xs:string" minOccurs="0"/>
			<xs:element name="name" type="etr_AlphaNumericStringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Insurance product name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="code" type="etr_AlphaNumericStringLength1to4" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="10161">INVALID PRODUCT CODE</ama:error>
					</xs:appinfo>
					<xs:documentation>Insurance product code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractId" type="xs:string" minOccurs="0"/>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ref" type="etr_AlphaNumericStringLength1to6" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Provides provider's profile reference</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="code" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="09471">INVALID INSURANCE PROVIDER</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Provider code (Insurance provider code)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="name" type="etr_StringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provider name (Insurance provider name)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">First day insured</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Last day insured</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="validity" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="zoneCode" type="etr_AlphaNumericStringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="833">INVALID GEOGRAPHICAL ZONE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Geographical zone covered by the insurance</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="countryCode" type="ISO3166" minOccurs="0" maxOccurs="198">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="47">INVALID COUNTRY CODE</ama:error>
								</xs:appinfo>
								<xs:documentation>List of covered countries (IATA country code on 2 char)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="option" minOccurs="0" maxOccurs="7">
				<xs:annotation>
					<xs:documentation>Insurance product options (e.g. extra coverages)</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" type="etr_AlphaNumericStringLength1to17" minOccurs="0"/>
						<xs:element name="description" type="etr_AlphaNumericStringLength1to99" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="conditions" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="url" type="xs:string" minOccurs="0"/>
						<xs:element name="coverage" minOccurs="0" maxOccurs="50">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="code" type="etr_AlphaNumericStringLength1to17" minOccurs="0"/>
									<xs:element name="name" type="etr_AlphaNumericStringLength1to70" minOccurs="0"/>
									<xs:element name="deductible" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="amount" type="etr_nonNegativeIntegerOrString0" minOccurs="0"/>
												<xs:element name="currency" type="etr_AlphaNumericStringLength1to3" minOccurs="0"/>
												<xs:element name="decimalPlace" type="etr_nonNegativeIntegerOrString0" minOccurs="0"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="upperLimit" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="amount" type="etr_nonNegativeIntegerOrString0" minOccurs="0"/>
												<xs:element name="currency" type="etr_AlphaNumericStringLength1to3" minOccurs="0"/>
												<xs:element name="decimalPlace" type="etr_nonNegativeIntegerOrString0" minOccurs="0"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="emergency" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="contact" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="firstName" type="etr_AlphaNumericStringLength1to70" minOccurs="0"/>
									<xs:element name="lastName" type="etr_AlphaNumericStringLength1to70" minOccurs="0"/>
									<xs:element name="phone" type="xs:string" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<!-- <xs:element minOccurs="0" name="root" type="ETR_InsType"/> -->
	<xs:complexType name="ETR_LeisureEquipmentType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="LEQ" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Name of the leisure equipment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="31979">INVALID QUANTITY</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Number of leisure equipments</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="duration" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32949">INVALID DURATION</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Duration of the leisure equipment rental</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32685">INVALID START DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Start date and possibly time of the leisure equipment rental</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32688">INVALID END DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">End date and possibly time of the leisure equipment rental</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_LocalServiceType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="LCS" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Name of the local service</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="31979">INVALID QUANTITY</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Number of local service</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="duration" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32949">INVALID DURATION</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Duration of the local service</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32685">INVALID START DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Start date and possibly time of the local service</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Start Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32688">INVALID END DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">End date and possibly time of the local service</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_MeetingType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="MTG" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Restaurant Name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32685">INVALID START DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Service date (start date) and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address (with room information)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="room" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="identifier" type="etr_StringLength1to25" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">Meeting room number</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="type" type="etr_RoomTypeEnum" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">Meeting room type: PRI for Private or PUB for Public</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="videoConf" type="etr_BooleanOrString0" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Video Conference indicator: specify if the room is equipped for Video Conference</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32688">INVALID END DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">End date and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_MoveMiscellaneousType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="MOV" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functioanal product type, to be displayed in some displays dynamically. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Move miscellaneous title</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32682">INVALID DEPARTURE DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure date (Service date) and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="etr_StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Departure Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32684">INVALID ARRIVAL DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival date and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="etr_StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Arrival Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility  -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="vehicle" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" type="etr_AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">"vehicle" code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="description" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">"vehicle" description</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="mileage" type="etr_MileageType" minOccurs="0"/>
			<xs:element name="baggage" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="quantity" type="Numeric1to99" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11713">INVALID BAGGAGE ALLOWANCE VALUE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Baggage allowance</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkIn" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="endDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="31980">INVALID CHECK-IN TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-in deadline time - Only the time is stored for now</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ticket" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Ticket number</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_ParkingType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="PRK" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Parking Name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="31979">INVALID QUANTITY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Quantity (number of parking places)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="identifier" type="etr_AlphaNumericStringLength1to6" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifier of the reserved places (eg 220A), maximum of 9 occurences</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32685">INVALID START DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Start date (Service date) and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Parking Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32688">INVALID END DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">End date and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="transfer" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Information about the transfer from the Parking to the Terminal, the Cinema, etc.</xs:documentation>
				</xs:annotation>
				<!-- path under review -->
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="duration" type="xs:duration" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Access time to the flight terminal, cinema, etc.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="vehicle" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Information about the vehicle to be parked</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="registration" type="etr_StringLength1to20" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Vehicle registration plate</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="color" type="etr_StringLength1to20" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Vehicle color</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="description" type="etr_StringLength1to20" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Vehicle model</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="category" type="etr_StringLength1to20" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Vehicle category</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_RestaurantType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="RST" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Name of the restaurant</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32685">INVALID START DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Restaurant reservation date and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Restaurant Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="validity" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="startDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date from which the voucher is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="endDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date until which the voucher is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_ServiceType" mixed="true">
		<xs:sequence>
			<xs:element name="code" type="etr_AlphaNumericStringLength1to4" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="8110">INVALID SSR</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">The SSR code is used to identify the service type</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to109" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="descDetail" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description text value.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="Weight" type="xs:string" use="optional"/>
							<xs:attribute name="Text" type="xs:string" use="optional"/>
							<xs:attribute name="Unit" type="xs:string" use="optional"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="31979">INVALID QUANTITY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Quantity: the number of services of the same type</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Status code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRSSR" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRSSR to indicate that the element is an ETR special service request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="ProviderTypeETR"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="priceCategory" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" type="etr_StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation>the RFIC chargeability indicator defined for the sellable object </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="subCode" type="etr_StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation>the RFISC chargeability indicator defined for the sellable object </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="mode" type="etr_StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation>pricing mode of the service, Pack, Manual, Auto, Exempted...</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="text" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="__Dummy">
							<xs:sequence>
								<xs:element name="label" type="etr_StringLength1to20" minOccurs="0"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="04242">THE SSR DATE IS NOT VALID</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Service start date</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Service end date</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements">
				<xs:annotation>
					<xs:documentation xml:lang="en">For Hotel, serviceProvider contains chain information</xs:documentation>
				</xs:annotation>
			</xs:group>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_ServiceMiscellaneousType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="SCE" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Title</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="duration" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Duration of the service</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Quantity</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="priceCategory" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" type="etr_StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation>the RFIC chargeability indicator defined for the sellable object </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="subCode" type="etr_StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation>the RFISC chargeability indicator defined for the sellable object </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="mode" type="etr_StringLength1to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation>pricing mode of the service, Pack, Manual, Auto, Exempted...</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="text" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="__Dummy">
							<xs:sequence>
								<xs:element name="label" type="etr_StringLength1to20" minOccurs="0"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32685">INVALID START DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Start date (Service date) and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32688">INVALID END DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">End date and possibly time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_ShowAndEventType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="SHO" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Name of the show or event</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="duration" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32949">INVALID DURATION</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Duration of the show or event</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="seatNbr" type="etr_AlphaNumericStringLength1to4" minOccurs="0" maxOccurs="9">
				<xs:annotation>
					<xs:documentation xml:lang="en">Seat number, maximum of 9 occurrences</xs:documentation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error facet="maxLength" code="32951">SEAT NUMBER TOO LONG</ama:error>
						<ama:error code="101">INVALID SEAT NUMBER</ama:error>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ticket" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Ticket number</xs:documentation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error facet="maxLength" code="32088">TICKET NUMBER TOO LONG</ama:error>
									<ama:error code="7121">INVALID TICKET NUMBER</ama:error>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32685">INVALID START DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date and possibly time at which the show or event will take place</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="contact" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Local contact information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="phone" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32804">INVALID PHONE NUMBER</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32688">INVALID END DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date and possibly time at which the show or event should end</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="validity" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="startDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date from which the ticket is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="endDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date until which the ticket is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="rate" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="description" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Rate description</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="code" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Rate plan code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="inclusions" type="etr_StringLength1to256" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32109">INVALID FIELD LENGTH RATE INCLUSIONS</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Rate inclusions</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_SleepMiscellaneousType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="SLP" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="2716">HOTEL NAME TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Hotel name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="10915">INVALID NUMBER OF ROOMS</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Quantity (number of rooms)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="additionalServices" type="etr_StringLength1to70" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32104">INVALID FIELD LENGTH ADDITIONAL SERVICES</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">This attribute indicates the additional services that have been requested by the Travel Agent. Additional services are services booked on top of the room (generally meal -breakfast, fullboard- or extra bed-crib, ...)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="roomRateDescription" type="etr_StringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32107">INVALID FIELD LENGTH ROOM RATE DESCRIPTION</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Room/Rate description</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelPolicies" type="etr_StringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32108">INVALID FIELD LENGTH CANCELLATION POLICIES</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Cancellation policy</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="inclusions" type="etr_StringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32109">INVALID FIELD LENGTH RATE INCLUSIONS</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Rate inclusions</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="otherRules" type="etr_StringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32110">INVALID FIELD LENGTH OTHER INFORMATION</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Other rules</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Service provider information (Hotel chain information)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="4412">INVALID CHECK-IN DATE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-in date (service date)  - Only date is stored for Hotel in this attribute</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Location(city) code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address). Mandotory for some elements like ETR Hotel.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="4413">INVALID CHECK-OUT DATE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-out date - Only date is stored for Hotel in this attribute</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkIn" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="startDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="31980">INVALID CHECK-IN TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-in time (indicates the expected time limit (local time) from when the guests can arrive at the property on check-in day) - Only time is stored for Hotel in this attribute</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkOut" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="endDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32105">INVALID CHECK-OUT TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-out time (indicates the time limit (local time) when the guests should leave the property on check-out day)  - Only time is stored for Hotel in this attribute</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="customers" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of the guests: number of adults, number of children by age</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="adults" type="etr_NumericStringLength1to2" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32101">NUMBER OF ADULTS IS TOO HIGH</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">number of adults</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="children" minOccurs="0" maxOccurs="9">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32102">NUMBER OF CHILDREN IS TOO HIGH</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">number of children (for the age in attribute)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="NumericStringLength1to2">
										<xs:sequence>
											<xs:element name="age" type="etr_NumericStringLength1to2" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">age of children</xs:documentation>
													<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
														<ama:error code="3171">CHECK AGES</ama:error>
													</xs:appinfo>
												</xs:annotation>
											</xs:element>
											<xs:element name="ageCode" type="StringLength1to64" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">ageCode (specific to Hotel property)</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="guarantee" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Guarantee information</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:annotation>
						<xs:documentation xml:lang="en">Form of payment</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="paymentForm" type="etr_accomodationGuaranteePaymentForm" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Form of Payment to guarantee the booking</xs:documentation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="2213">INVALID FORM OF PAYMENT</ama:error>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="paymentDetails" type="etr_StringLength1to31" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Payment details</xs:documentation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11883">INVALID FORMAT ENTERED FOR FOP ELEMENT</ama:error>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="deposit" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Deposit information</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:annotation>
						<xs:documentation xml:lang="en">Form of Payment how the deposit was done for the booking</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="paymentForm" type="etr_accomodationDepositPaymentForm" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Form of payment used to perform the deposit</xs:documentation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="2213">INVALID FORM OF PAYMENT</ama:error>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="paymentDetails" type="etr_StringLength1to31" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Payment details</xs:documentation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11883">INVALID FORMAT ENTERED FOR FOP ELEMENT</ama:error>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements">
				<xs:annotation>
					<xs:documentation xml:lang="en">For Hotel, serviceProvider contains chain information</xs:documentation>
				</xs:annotation>
			</xs:group>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_SportActivityType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="SPO" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Name of the sport activity</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="duration" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32949">INVALID DURATION</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Duration of the sport activity</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="seatNbr" type="etr_AlphaNumericStringLength1to4" minOccurs="0" maxOccurs="9">
				<xs:annotation>
					<xs:documentation xml:lang="en">Seat number, maximum of 9 occurrences</xs:documentation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error facet="maxLength" code="32951">SEAT NUMBER TOO LONG</ama:error>
						<ama:error code="101">INVALID SEAT NUMBER</ama:error>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ticket" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Ticket number</xs:documentation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error facet="maxLength" code="32088">TICKET NUMBER TOO LONG</ama:error>
									<ama:error code="7121">INVALID TICKET NUMBER</ama:error>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32685">INVALID START DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date and possibly time at which the sport activity will take place</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32688">INVALID END DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date and possibly time at which the sport activity should end</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="validity" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="startDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date from which the ticket is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="endDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date until which the ticket is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_TaxiType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="TXI" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Quantity</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Codeset list "shared". "private" taxi service</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32682">INVALID DEPARTURE DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure date (Service date) with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="etr_StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Departure Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32684">INVALID ARRIVAL DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival date with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="etr_StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Arrival Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility  -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="vehicle" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" type="etr_AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">vehicle code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="description" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">vehicle description</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="mileage" type="etr_MileageType" minOccurs="0"/>
			<xs:element name="baggage" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="quantity" type="Numeric1to99" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11713">INVALID BAGGAGE ALLOWANCE VALUE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Baggage allowance</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TrainLocationCodeType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Location Code: when the "type" attribute is not present (or present with value IATA), then the Location Code value is IATA (in this case, the IATA location code is checked against RFD). Else, the location code value is not IATA. In this case, the "type"  attribute gives an indication about the type of location code. For ETR Train, the Location Code value must be 3 to 7 char-length (7 is for UIC station codes).</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="AlphaNumericStringLength3to7">
				<xs:sequence>
					<xs:element name="type" type="etr_AlphaNumericStringLength1to4" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ETR_TrainType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="TRN" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bkgClass" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Booking class</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="etr_RailProviderType" minOccurs="0"/>
			<xs:element name="identifier" type="etr_AlphaNumericStringLength1to6" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Train number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32682">INVALID DEPARTURE DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure date (Service date) with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
							</xs:appinfo>
								<xs:documentation xml:lang="en">Name of the departure point</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="platform" type="etr_StringLength1to20" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Reference of the departure platform</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="TrainLocationCodeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32055">INVALID STATION CODE LENGTH</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Station code, can be UIC code (with type=UIC or other value) or closest IATA code (with no type)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32684">INVALID ARRIVAL DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival date with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
							</xs:appinfo>
								<xs:documentation xml:lang="en">Name of Station the arrival point</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="platform" type="etr_StringLength1to20" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Reference of the arrival platform</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="TrainLocationCodeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32055">INVALID STATION CODE LENGTH</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Station code, can be UIC code (with type=UIC or other value) or closest IATA code (with no type)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="duration" type="DurationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Train duration</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="vehicle" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" type="etr_AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Equipment code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="description" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32187">EQUIPMENT DESCRIPTION TOO LONG</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Equipment description</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="mileage" type="etr_MileageType" minOccurs="0"/>
			<xs:element name="collectionReference" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:documentation>collection reference number</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ticket" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32088">TICKET NUMBER TOO LONG</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Ticket number</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_TrainSeatType" mixed="true">
		<xs:sequence>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="811">INVALID STATUS CODE</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Status code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRSSR" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRSSR to indicate that the element is an ETR special service request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="seat" minOccurs="0" maxOccurs="9">
				<xs:complexType mixed="true">
					<xs:annotation>
						<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
							<ama:error facet="maxOccurs" code="32003">9 SEAT NUMBERS MAXIMUM PER ETR ARE ALLOWED</ama:error>
						</xs:appinfo>
						<xs:documentation xml:lang="en">Seat/coach number pairs, maximum of 9 occurrences</xs:documentation>
					</xs:annotation>
					<xs:sequence>
						<xs:element name="seatNbr" type="etr_AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="8713">INVALID SEAT NUMBER</ama:error>
								</xs:appinfo>
								<xs:documentation>Seat number</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="coachNbr" type="etr_AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32933">INVALID COACH NUMBER</ama:error>
								</xs:appinfo>
								<xs:documentation>Coach number</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="locationCode" type="TrainLocationCodeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32055">INVALID STATION CODE LENGTH</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="locationCode" type="TrainLocationCodeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32055">INVALID STATION CODE LENGTH</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="serviceProvider" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="817">INVALID AIRLINE CODE</ama:error>
								</xs:appinfo>
								<xs:documentation>service provider code (train provider code, hard coded to 00)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_TransferType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="TRF" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bkgClass" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Booking class</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="etr_RailProviderType" minOccurs="0"/>
			<xs:element name="identifier" type="etr_AlphaNumericStringLength1to6" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Line number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32682">INVALID DEPARTURE DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure date (Service date) with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the departure point</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="etr_StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32089">DEPARTURE/ARRIVAL TERMINAL TOO LONG</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Departure Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32684">INVALID ARRIVAL DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival date with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the arrival point</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="etr_StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32089">DEPARTURE/ARRIVAL TERMINAL TOO LONG</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Arrival Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="vehicle" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" type="etr_AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">vehicle code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="description" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32187">EQUIPMENT DESCRIPTION TOO LONG</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">vehicle description</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="mileage" type="etr_MileageType" minOccurs="0"/>
			<xs:element name="baggage" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="quantity" type="Numeric1to99" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="12712">INVALID BAGGAGE PIECES - CHECK FORMAT</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Number of Baggage Items</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkIn" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="endDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="31980">INVALID CHECK-IN TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-in deadline time - Only the time is stored for now</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ticket" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32088">TICKET NUMBER TOO LONG</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Ticket number</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_UrbanTransportationType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="UTP" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bkgClass" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Booking class</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="etr_RailProviderType" minOccurs="0"/>
			<xs:element name="identifier" type="etr_AlphaNumericStringLength1to6" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Line number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32682">INVALID DEPARTURE DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure date (Service date) with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the departure point</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="etr_StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32089">DEPARTURE/ARRIVAL TERMINAL TOO LONG</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Departure Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32684">INVALID ARRIVAL DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival date with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the arrival point</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="etr_StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32089">DEPARTURE/ARRIVAL TERMINAL TOO LONG</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Arrival Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="vehicle" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" minOccurs="0">
							<xs:annotation>
								<xs:documentation>vehicule name (Bus, Metro, Tramway, Other)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="description" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32187">EQUIPMENT DESCRIPTION TOO LONG</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">vehicle description</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="mileage" type="etr_MileageType" minOccurs="0"/>
			<xs:element name="baggage" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="quantity" type="Numeric1to99" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="12712">INVALID BAGGAGE PIECES - CHECK FORMAT</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Number of Baggage Items</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkIn" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="endDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="31980">INVALID CHECK-IN TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-in deadline time - Only the time is stored for now</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ticket" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32088">TICKET NUMBER TOO LONG</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Ticket number</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_VaccineType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="VCN" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Name of the vaccine</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="31979">INVALID QUANTITY</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Number of vaccines</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="3337">INVALID DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">The date of the sting</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="validity" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="startDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="3337">INVALID DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date from which the vaccine is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="endDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="3337">INVALID DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date until which the vaccine is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_VisaType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="VSA" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Title of the VISA</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="31979">INVALID QUANTITY</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Number of VISA</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="category" type="etr_StringLength1to30" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The type of the VISA (Business, Tourism).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="purpose" type="etr_StringLength1to30" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Purpose of the requested VISA (Work in USA)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="processType" type="etr_StringLength1to30" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specifies how the Visa request is processed (regular, urgent...)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="3337">INVALID DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">The date when the VISA has been delivered</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="validity" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="startDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="3337">INVALID DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date from which the VISA is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="endDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="3337">INVALID DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date until which the VISA is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="47">INVALID COUNTRY CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Destination country of the VISA (2 character standard IATA country code)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="entryIndicator" type="etr_BooleanOrString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique or Multiple entry in the country indicator</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ETR_VisitType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="VST" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1778">NAME/TITLE TOO LONG</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Name of the visit (Eiffel Tower visit)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="31979">INVALID QUANTITY</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation>Number of tickets</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="ETRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL, TT)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="confirmNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="etr_AlphaNumericStringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="overrideStatus" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Enable to override status code (e.g. for Offers)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MBOProductCode" type="etr_StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">MBO product code = freetext on 20 char. Sub product of the MBO. E.g. for EC Air : international, domestic, european</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ETRItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderTypeETR" minOccurs="0"/>
			<xs:element name="seatNbr" type="etr_AlphaNumericStringLength1to4" minOccurs="0" maxOccurs="9">
				<xs:annotation>
					<xs:documentation xml:lang="en">Seat number, maximum of 9 occurrences</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ticket" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Ticket number</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32685">INVALID START DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date and possibly time at which the visit will take place</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Visit Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Location Address</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="validity" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="startDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date from which the ticket is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="endDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date until which the ticket is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReferralType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Booking Channel</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="RFS" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ETRItinerary to indicate that the element is an ETR itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="onlineFlow" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Flow used to create the booking: Multiple Destinations, CrossSell, UpSell, Shopping Cart, Package</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="creation" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Creation date time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="modification" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Modification date time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="partner" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="identifier" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Affiliated ID of the partner which redirects the traveller to client website</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="url" type="xs:anyURI" minOccurs="0">
							<xs:annotation>
								<xs:documentation>URL of the website that has redirected the user to the client application</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="etr_AttachmentType" mixed="true">
		<xs:annotation>
			<xs:documentation>Structure of attachment element</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="StringLength1to128">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<!-- NB: In case the attachment name is not specified by the user, the system returns the following error -->
						<ama:error facet="use" code="33159">MANDATORY ATTACHMENT NAME MISSING</ama:error>
						<ama:error code="33160">INVALID ATTACHMENT NAME</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Specifies the name of the attachment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="encoding" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<!-- NB: In case the document format is not valid (i.e. not taken from the below list), the following error message is returned by the system:  -->
						<ama:error code="33158">FILE ENCODING NOT SUPPORTED BY ATTACHMENT PRODUCT</ama:error>
					</xs:appinfo>
					<xs:documentation>Specifies the content encoding of the  file in the attachment. 3 letter code (JPG, PDF, PNG, GIF, TXT) </xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="size" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The size of the attachment, in bytes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="url" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<!-- NB: In case the Url link is not valid -->
						<ama:error code="1569">Invalid Url link</ama:error>
					</xs:appinfo>
					<xs:documentation>URL to download the attachment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Document">
				<xs:annotation>
					<xs:documentation>Information related to the attached document</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Type">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="code">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<!-- NB: In case the document type is not specified by the user, the system returns the following error -->
												<ama:error facet="use" code="33161">MANDATORY ATTACHMENT DOCUMENT TYPE MISSING</ama:error>
												<!-- NB: In case the provided document type is not valid (i.e. not taken from the below list), the following error message is returned by the system:  -->
												<ama:error code="33162">INVALID ATTACHMENT DOCUMENT TYPE</ama:error>
											</xs:appinfo>
											<xs:documentation>Specifies the type of document in the attachment. 3 letter code (PIC, INV, OTH, VOU). </xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="desc" type="StringLength1to255" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="33163">INVALID ATTACHMENT DOCUMENT TYPE DESCRIPTION</ama:error>
											</xs:appinfo>
											<xs:documentation>Can only be used if Type code is Other.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="Source">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="code">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<!-- NB: In case the document source is not specified by the user, the system returns the following error -->
												<ama:error facet="use" code="33164">MANDATORY ATTACHMENT DOCUMENT SOURCE MISSING</ama:error>
												<!-- NB: In case the provided document source is not valid (i.e. not taken from the below list), the following error message is returned by the system:  -->
												<ama:error code="33165">INVALID ATTACHMENT DOCUMENT SOURCE</ama:error>
											</xs:appinfo>
											<xs:documentation>Specifies the source of document in the attachment i.e. who issued the document. 3 letter code (TRA, TRL, PRO, OTH).</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="desc" type="StringLength1to255" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="33166">INVALID ATTACHMENT DOCUMENT SOURCE DESCRIPTION</ama:error>
											</xs:appinfo>
											<xs:documentation>Can only be used if Source is Other.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="ETRCommonElements">
				<xs:annotation>
					<xs:documentation xml:lang="en">ServiceProvider contains chain information</xs:documentation>
				</xs:annotation>
			</xs:group>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TravelRequestType" mixed="true">
		<xs:sequence>
			<xs:element name="status" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="00811">INVALID STATUS CODE</ama:error>
					</xs:appinfo>
					<xs:documentation>The status of the Travel Request can be Active, Rejected, Processed, Approved or Expired.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="label" type="etr_StringLength1to35">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error facet="use" code="33260">TRAVEL REQUEST NAME MISSING</ama:error>
						<ama:error code="33261">TRAVEL REQUEST NAME TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation>Label designating the Travel Request</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="tripType" type="etr_StringLength1to35" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="33262">INVALID FIELD LENGTH TRIP TYPE</ama:error>
					</xs:appinfo>
					<xs:documentation>Trip type, i.e. business, leisure....</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="creation">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime">
							<xs:annotation>
								<xs:documentation>The creation date and time of the Travel Request</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="office" type="etr_AlphaNumericStringLength1to10" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The office with which the Travel Request is created</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="validity" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="endDateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="15646">INVALID VALIDITY DATES</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the complete check is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation>The validity date of the Travel Request</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="description" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="33263">INVALID FIELD LENGTH DESCRIPTION</ama:error>
					</xs:appinfo>
					<xs:documentation>Description up to 500 charaters</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="freeText500Type">
							<xs:sequence>
								<xs:element name="type" type="etr_StringLength1to35" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="33264">INVALID FIELD LENGTH TYPE</ama:error>
										</xs:appinfo>
										<xs:documentation>Type of the description. i.e. Travel description, Travel Request Reason...</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="lang" type="AlphaLength1to2" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="02038">INVALID LANGUAGE CODE</ama:error>
											<!-- NB: complete check on the BE -->
										</xs:appinfo>
										<xs:documentation>Language code. Language used in the description. </xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32685">INVALID START DATE/TIME</ama:error>
									<!-- NB: complete check on the BE -->
								</xs:appinfo>
								<xs:documentation>Start date and time of the whole trip</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="timeWindow" type="xs:duration" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="33292">INVALID TIME WINDOW</ama:error>
								</xs:appinfo>
								<xs:documentation>Acceptable time window</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="regionName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="33266">INVALID FIELD LENGTH REGION NAME</ama:error>
											</xs:appinfo>
											<xs:documentation>Region location name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32123">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation>City location name</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32688">INVALID END DATE/TIME</ama:error>
									<!-- NB: complete check on the BE -->
								</xs:appinfo>
								<xs:documentation>End date and time of the whole trip</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="timeWindow" type="xs:duration" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="33292">INVALID TIME WINDOW</ama:error>
								</xs:appinfo>
								<xs:documentation>Acceptable time window</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="regionName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="33266">INVALID FIELD LENGTH REGION NAME</ama:error>
											</xs:appinfo>
											<xs:documentation>Region location name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32123">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation>City location name</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="passengerNumber" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="adults" type="etr_NumericStringLength1to2" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32101">NUMBER OF ADULTS IS TOO HIGH</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">number of adults</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="children" minOccurs="0" maxOccurs="9">
							<xs:annotation>
								<xs:documentation xml:lang="en">number of children (for the age in attribute)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="etr_NumericStringLength1to2">
										<xs:sequence>
											<xs:element name="age" type="etr_NumericStringLength1to2">
												<xs:annotation>
													<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
														<ama:error code="03171">CHECK AGES</ama:error>
														<!-- NB: complete check on the BE -->
													</xs:appinfo>
													<xs:documentation xml:lang="en">age of children</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="priceRange" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="minPrice" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Minimum price acceptable for the whole trip</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Amount" type="xs:integer" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="IDCode" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Used only in case the other codes are not suitable, e.g. T01 when Price is an Airline Fees.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Description" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Describes more precisely a Price (or Tax), e.g. "Issuance Fee for Credit Card" when Price is an Airline Fees.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="MiscValue" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Type" type="AlphaNumericStringLength1to71" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="maxPrice" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Maximum price acceptable for the whole trip</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Amount" type="xs:integer" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="IDCode" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Used only in case the other codes are not suitable, e.g. T01 when Price is an Airline Fees.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Description" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Describes more precisely a Price (or Tax), e.g. "Issuance Fee for Credit Card" when Price is an Airline Fees.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="MiscValue" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Type" type="AlphaNumericStringLength1to71" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="expense" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Amount of the expense required by the traveler</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="__Dummy">
							<xs:sequence>
								<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Amount" type="xs:integer" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="IDCode" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Used only in case the other codes are not suitable, e.g. T01 when Price is an Airline Fees.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Description" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Describes more precisely a Price (or Tax), e.g. "Issuance Fee for Credit Card" when Price is an Airline Fees.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="MiscValue" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="Type" type="AlphaNumericStringLength1to71" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="requireAdvanceExpense" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Yes if the traveler asks for an advanced expense. By default set at No.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="approval" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="costCenter" type="etr_StringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Center responsible for the trip approval</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="minPrice" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Represent generic monetary		information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Amount" type="xs:integer" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="IDCode" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Used only in case the other codes are not suitable, e.g. T01 when Price is an Airline Fees.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Description" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Describes more precisely a Price (or Tax), e.g. "Issuance Fee for Credit Card" when Price is an Airline Fees.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="MiscValue" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Type" type="AlphaNumericStringLength1to71" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="maxPrice" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Represent generic monetary		information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Amount" type="xs:integer" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="IDCode" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Used only in case the other codes are not suitable, e.g. T01 when Price is an Airline Fees.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Description" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Describes more precisely a Price (or Tax), e.g. "Issuance Fee for Credit Card" when Price is an Airline Fees.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="MiscValue" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Type" type="AlphaNumericStringLength1to71" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="tripJustification" type="freeText500Type" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Explanation for the trip approval</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SpecializationRequestType" mixed="true">
		<xs:sequence>
			<xs:element name="directOption" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="33286">INVALID DIRECT OPTION VALUE</ama:error>
					</xs:appinfo>
					<xs:documentation>Set at Yes if the traveler wants a direct trip. </xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="expectedReply">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="type">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="33268">INVALID EXPECTED REPLY VALUE</ama:error>
								</xs:appinfo>
								<xs:documentation>Type of the reply requested: OFR, PRP or BKG</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="numberMaxOfOffers" type="etr_AlphaNumericStringLength1to2" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="27551">MAXIMUM NUMBER OF OFFERS REACHED</ama:error>
									<!-- NB: complete check on the BE -->
								</xs:appinfo>
								<xs:documentation>By default, set at 20</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="preferedServiceProvider" minOccurs="0" maxOccurs="3">
				<xs:annotation>
					<xs:documentation xml:lang="en">Prefered service prodivers information.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ref" type="etr_AlphaNumericStringLength1to6" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="33287">INVALID PROVIDER'S PROFILE REFERENCE</ama:error>
								</xs:appinfo>
								<xs:documentation>Provides provider's profile reference</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="name" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="33288">INVALID PROVIDER NAME</ama:error>
								</xs:appinfo>
								<xs:documentation>provider name</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="code" type="etr_AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24198">INVALID PROVIDER CODE</ama:error>
								</xs:appinfo>
								<xs:documentation>provider code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="externalRef" type="etr_AlphaNumericStringLength1to10" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="33289">INVALID PROVIDER'S EXTERNAL PROFILE REFERENCE</ama:error>
								</xs:appinfo>
								<xs:documentation>External profile reference for imported profiles</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="acceptableRadius" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="distance" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="33290">THE DISTANCE MUST BE BETWEEN 1 AND 9999</ama:error>
								</xs:appinfo>
								<xs:documentation>Acceptable distance around the location point</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="unit" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="33291">INVALID DISTANCE UNIT</ama:error>
								</xs:appinfo>
								<xs:documentation>Unit distance: kilometers or miles</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="timeWindow" type="xs:duration" minOccurs="0" maxOccurs="2">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="33292">INVALID TIME WINDOW</ama:error>
					</xs:appinfo>
					<xs:documentation>Time window acceptable for the start and end dates of a service</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="via" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation>If the traveler wants to have a stop during the trip</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="47">INVALID COUNTRY CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32986">INVALID LATITUDE</ama:error>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32987">INVALID LONGITUDE</ama:error>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
						<xs:element name="regionName" type="etr_StringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="33266">INVALID FIELD LENGTH REGION NAME</ama:error>
								</xs:appinfo>
								<xs:documentation>Region location</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32123">INVALID FIELD LENGTH CITY NAME</ama:error>
								</xs:appinfo>
								<xs:documentation>City location</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="freeText500Type" mixed="true"/>
	<xs:complexType name="TTR_ActorType" mixed="true">
		<xs:complexContent>
			<xs:extension base="PassengerNameOrString0Type">
				<xs:sequence>
					<xs:element name="type" type="StringLength3" fixed="SKH" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="subtype" type="StringLength1to16" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Functional subtype, used to identify which XSD should be applied to validate the element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="roles" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>List of roles for the actor: 
- Traveller, 
- Buyer,
- Payer 
- OwnerOffice
- CreatorOffice
- UpdatorOffice
Multiple roles allowed
(eg "Traveller Buyer")</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NewActor" minOccurs="0" maxOccurs="5">
						<xs:complexType mixed="true">
							<xs:complexContent>
								<xs:extension base="__Dummy">
									<xs:sequence>
										<xs:element name="ID" type="xs:string" minOccurs="0"/>
										<xs:element name="DateOfBirth" type="xs:dateTime" minOccurs="0"/>
										<xs:element name="Name" minOccurs="0" maxOccurs="10">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="Type" type="etr_StringLength1to20" minOccurs="0"/>
													<xs:element name="LastName" type="xs:string" minOccurs="0"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
					<xs:element name="nationality" minOccurs="0" maxOccurs="5">
						<xs:complexType mixed="true">
							<xs:complexContent>
								<xs:extension base="__Dummy">
									<xs:sequence>
										<xs:element name="code" type="xs:string" minOccurs="0"/>
										<xs:element name="IATAcode" type="xs:string" minOccurs="0"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
					<xs:element name="creation" minOccurs="0">
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="24806">INVALID DATE</ama:error>
										</xs:appinfo>
										<xs:documentation xml:lang="en">Creation date time</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="modification" minOccurs="0">
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="24806">INVALID DATE</ama:error>
										</xs:appinfo>
										<xs:documentation xml:lang="en">Modification date time</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="contact" minOccurs="0" maxOccurs="99">
						<xs:annotation>
							<xs:documentation>Contact information.</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="contactType" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Purpose of contact : eg. GST, CTC , AP..</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ContactRefusedInd" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Indicator if contact refused or not ..</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="phone" minOccurs="0" maxOccurs="10">
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:element name="label" type="etr_StringLength1to20" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Type of phone number: eg. Mobile, Home, Office, ...</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="type" type="xs:string" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Purpose of phone: eg. Standard, Notification, Emergency...</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="overseasCode" type="etr_AlphaNumericStringLength1to9" minOccurs="0">
												<xs:annotation>
													<xs:documentation>International country calling code</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
												<xs:annotation>
													<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
														<ama:error code="47">INVALID COUNTRY CODE</ama:error>
														<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
													</xs:appinfo>
													<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="addresseeName" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Adressee name, if different from actor name.</xs:documentation>
												</xs:annotation>
												<xs:complexType mixed="true"/>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
								<xs:element name="email" minOccurs="0" maxOccurs="5">
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:element name="label" type="etr_StringLength1to99" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Type of email address: eg. Mobile, Home, Office, ...</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="type" type="xs:string" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Purpose of email: eg. Standard, Notification, Emergency...</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="addresseeName" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Adressee name, if different from actor name.</xs:documentation>
												</xs:annotation>
												<xs:complexType mixed="true"/>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="address" minOccurs="0" maxOccurs="3">
						<xs:annotation>
							<xs:documentation xml:lang="en">Home Address, Billing Address</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="label" type="etr_StringLength1to199" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="32804">INVALID PHONE NUMBER</ama:error>
										</xs:appinfo>
										<xs:documentation>Home address, Billing address, ...</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
										</xs:appinfo>
										<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
										</xs:appinfo>
										<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
										</xs:appinfo>
										<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="47">INVALID COUNTRY CODE</ama:error>
											<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
										</xs:appinfo>
										<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="32986">INVALID LATITUDE</ama:error>
										</xs:appinfo>
									</xs:annotation>
								</xs:element>
								<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="32987">INVALID LONGITUDE</ama:error>
										</xs:appinfo>
									</xs:annotation>
								</xs:element>
								<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">City code</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
										</xs:appinfo>
										<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Country name</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="stateCode" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
											<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
										</xs:appinfo>
										<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
									<xs:annotation>
										<xs:documentation>State name</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="companyName" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Adressee company name if applicable.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="addresseeName" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Adressee name, T/O name if different from actor name.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="IATACountryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="47">INVALID COUNTRY CODE</ama:error>
											<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
										</xs:appinfo>
										<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="event" minOccurs="0" maxOccurs="10">
						<xs:annotation>
							<xs:documentation>Information about special events, dates (wedding, honeymoon,...)</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="description" type="etr_StringLength1to99" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="32804">INVALID PHONE NUMBER</ama:error>
										</xs:appinfo>
										<xs:documentation>Event description (wedding, honeymoon, ...)</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="date" type="xs:date" minOccurs="0"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="loyalty" minOccurs="0" maxOccurs="5">
						<xs:annotation>
							<xs:documentation>Loyalty program</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="companyCode" type="etr_AlphaNumericStringLength1to99" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Loyalty program code</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="process" type="etr_StringLength1to30" minOccurs="0"/>
								<xs:element name="vendor" type="etr_StringLength1to30" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Identify the brand of the Loyalty provider</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="program" type="etr_StringLength1to30" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Used to identify if a Vendor offers different sub-programs/brands</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="alliance" type="etr_StringLength1to30" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Alliance identifier</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="identifier" type="etr_AlphaNumericStringLength1to99" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Loyalty card number</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="level" type="etr_StringLength1to30" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Loyalty card tier level</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="levelDescription" type="etr_StringLength1to30" minOccurs="0"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="docRef" minOccurs="0" maxOccurs="10">
						<xs:annotation>
							<xs:documentation>Reference to identify the actor in a given document (Passport, Fiscal system)</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="type" type="etr_StringLength1to99" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="32804">INVALID PHONE NUMBER</ama:error>
										</xs:appinfo>
										<xs:documentation>Passport Number, MR (Membership reward), CPF, email, Partner Code, ...FF (Freqent Flyer)</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="description" type="etr_StringLength1to99" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="32804">INVALID PHONE NUMBER</ama:error>
										</xs:appinfo>
										<xs:documentation>Description of the document reference</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="issuer" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Entity or organisation that issued the document which this element refer to</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="issuerIATACountryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
									<xs:annotation>
										<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
											<ama:error code="47">INVALID COUNTRY CODE</ama:error>
											<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
										</xs:appinfo>
										<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="issuanceDate" type="xs:date" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Indicates the issuance date of the document</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="expirationDate" type="xs:date" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Indicates the ending date of the document</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="nationality" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Indicates the nationality </xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="nationalityIATACode" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Indicates the nationality (2 character standard IATA country code)</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="dateOfBirth" type="xs:date" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Indicates the date of birth</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="visa" minOccurs="0" maxOccurs="5">
									<xs:complexType mixed="true">
										<xs:complexContent>
											<xs:extension base="__Dummy">
												<xs:sequence>
													<xs:element name="visaNumber" type="xs:string" minOccurs="0"/>
													<xs:element name="visaType" type="xs:string" minOccurs="0"/>
													<xs:element name="durationOfStay" type="xs:integer" minOccurs="0"/>
													<xs:element name="enterBeforeDate" type="xs:dateTime" minOccurs="0"/>
													<xs:element name="numberOfEntries" type="xs:integer" minOccurs="0"/>
													<xs:element name="visaHostCountryCode" type="xs:string" minOccurs="0"/>
													<xs:element name="visaHostIATACountryCode" type="xs:string" minOccurs="0"/>
													<xs:element name="visaIssuanceDate" type="xs:date" minOccurs="0"/>
													<xs:element name="visaIssueCountryCode" type="xs:string" minOccurs="0"/>
													<xs:element name="visaIssueIATACountryCode" type="xs:string" minOccurs="0"/>
												</xs:sequence>
											</xs:extension>
										</xs:complexContent>
									</xs:complexType>
								</xs:element>
								<xs:element name="taxIdentifier" minOccurs="0" maxOccurs="unbounded">
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:element name="fiscalType" type="xs:string"/>
											<xs:element name="fiscalNumber" type="xs:string"/>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
								<xs:element name="birthPlace" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Indicates country code, where the passenger was born.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="redressCase" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A person's case of being registered with a country's redress program, which can eliminate watch list misidentification and assist in identity verification.</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="country" minOccurs="0">
									<xs:annotation>
										<xs:documentation>A nation with its own government, occupying a particular territory.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:element name="countryCode" type="xs:string" minOccurs="0"/>
											<xs:element name="countryName" type="xs:string" minOccurs="0"/>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
								<xs:element name="countryCode" type="xs:string">
									<xs:annotation>
										<xs:documentation>ISO Country code (can be extended by bilateral agreement in case of exceptions, ex. Kosovo) Examples: US, FR.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="programName" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>The name of the redress program (e.g. Secure Flight Program).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="redressCaseId" type="xs:string">
									<xs:annotation>
										<xs:documentation>A unique government-issued identifier assigned to a redress case.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="externalSystem" type="ExternalSystemType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference to identify the stakeholder in an external system </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AttachmentType" mixed="true">
		<xs:annotation>
			<xs:documentation>Structure of attachment element</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="StringLength1to128">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<!-- NB: In case the attachment name is not specified by the user, the system returns the following error -->
						<ama:error facet="use" code="14763">MANDATORY ATTACHMENT NAME MISSING</ama:error>
						<ama:error code="6749">NAME TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Specifies the name of the attachment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="encoding" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<!-- NB: In case the document format is not valid (i.e. not taken from the below list), the following error message is returned by the system:  -->
						<ama:error code="1778">FILE ENCODING NOT SUPPORTED BY ATTACHMENT PRODUCT</ama:error>
					</xs:appinfo>
					<xs:documentation>Specifies the content encoding of the  file in the attachment. 3 letter code (JPG, PDF, PNG, GIF, TXT) </xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="size" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The size of the attachment, in bytes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="url" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<!-- NB: In case the Url link is not valid -->
						<ama:error code="1569">Invalid Url link</ama:error>
					</xs:appinfo>
					<xs:documentation>URL to download the attachment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="ATTItinerary" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with ATTItinerary to indicate that the element is an ATT itinerary product</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Document">
				<xs:annotation>
					<xs:documentation>Information related to the attached document</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Type">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="code">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<!-- NB: In case the document type is not specified by the user, the system returns the following error -->
												<ama:error facet="use" code="31942">MANDATORY ATTACHMENT DOCUMENT TYPE MISSING</ama:error>
												<!-- NB: In case the provided document type is not valid (i.e. not taken from the below list), the following error message is returned by the system:  -->
												<ama:error code="1778">INVALID DOCUMENT TYPE</ama:error>
											</xs:appinfo>
											<xs:documentation>Specifies the type of document in the attachment. 3 letter code (PIC, INV, OTH, VOU). </xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="desc" type="StringLength1to255" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Can only be used if Type code is Other.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="Source">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="code">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<!-- NB: In case the document source is not specified by the user, the system returns the following error -->
												<ama:error facet="use" code="28746">MANDATORY ATTACHMENT SOURCE MISSING</ama:error>
												<!-- NB: In case the provided document source is not valid (i.e. not taken from the below list), the following error message is returned by the system:  -->
												<ama:error code="1657">INVALID DOCUMENT SOURCE</ama:error>
											</xs:appinfo>
											<xs:documentation>Specifies the source of document in the attachment i.e. who issued the document. 3 letter code (TRA, TRL, PRO, OTH).</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="desc" type="StringLength1to255" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Can only be used if Source is Other.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Content" type="xs:base64Binary">
				<xs:annotation>
					<xs:documentation>Content of the attachement in Base 64 format</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="ETRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TTR_FeeType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="FEE" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="etr_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error facet="maxLength" code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="category" type="etr_StringLength1to30" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error facet="maxLength" code="1891">INPUT TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation>The type of the Fee (Cancellation, Change, Booking, Service, Discount).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="purpose" type="etr_StringLength1to30" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error facet="maxLength" code="1891">INPUT TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation>Purpose of the Fee. Additional cost for: Air international, Hotel domestic, ...</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="applied" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="typeFamily" type="xs:string" fixed="" minOccurs="0"/>
			<xs:element name="validity" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="startDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date from which the Fee applies is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="endDateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Date until which the Fee applies is valid.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="creation" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Creation date time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="modification" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Creation date time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TTR_PackageType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="PAK" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="etr_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of the restaurant</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="externalSystem" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="ExternalSystemType">
							<xs:sequence>
								<xs:element name="identifier" minOccurs="0">
									<xs:complexType mixed="true">
										<xs:complexContent>
											<xs:extension base="__Dummy">
												<xs:sequence>
													<xs:element name="type" type="xs:string" minOccurs="0"/>
												</xs:sequence>
											</xs:extension>
										</xs:complexContent>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="creation" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Creation date time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="modification" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Modification date time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32685">INVALID START DATE/TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure date (Service date) with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the departure city</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="32688">INVALID END DATE/TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival date with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="etr_StringLength1to60" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the arrival city</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TTR_LoyaltyType" mixed="true">
		<xs:sequence>
			<xs:element name="companyCode" type="AlphaNumericStringLength2OrString0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Code of the company owning the card</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="vendor" type="etr_StringLength1to30" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identify the brand of the Loyalty provider</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="alliance" type="etr_StringLength1to30" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Alliance identifier</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="identifier" type="etr_AlphaNumericStringLength1to25" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Loyalty card number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Card owner identity</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="LastName" type="etr_StringLength1to30" minOccurs="0"/>
						<xs:element name="FirstName" type="etr_StringLength1to30" minOccurs="0"/>
						<xs:element name="Title" type="etr_StringLength1to30" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="level" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="etr_StringLength1to30">
							<xs:sequence>
								<xs:element name="type">
									<xs:annotation>
										<xs:documentation>Possible values are:
- Airline
- Alliance</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="priorityCode" type="NumericStringLength1" minOccurs="0"/>
								<xs:element name="description" type="etr_StringLength1to30" minOccurs="0"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="creation" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Creation date time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="modification" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Modification date time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PNRStatusCode" mixed="true"/>
	<xs:complexType name="ProviderType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Provider Type for almost all elements except specificities needed for PNR Air, Train, Coach, etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ref" type="AlphaNumericStringLength1to6" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provides provider's profile reference</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="StringLength1to70" minOccurs="0">
				<xs:annotation>
					<xs:documentation>provider name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="code" type="AlphaNumericStringLength1to35" minOccurs="0">
				<xs:annotation>
					<xs:documentation>provider code</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RailProviderType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Provider Type for PNR Train, Coach, Transfer</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ref" type="AlphaNumericStringLength1to6" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provides provider's profile reference</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="StringLength1to70" minOccurs="0">
				<xs:annotation>
					<xs:documentation>provider name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="code" type="AlphaNumericStringLength3" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="24198">INVALID PROVIDER CODE</ama:error>
					</xs:appinfo>
					<xs:documentation>provider code</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RoomTypeEnum" mixed="true"/>
	<xs:complexType name="MileageUnitType" mixed="true"/>
	<xs:complexType name="MileageType" mixed="true">
		<xs:sequence>
			<xs:element name="distance" type="NumericStringLength1to8" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="24155">INVALID MILEAGE AMOUNT</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Mileage: Distance of the trip</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="unit" type="MileageUnitType" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="987">MILEAGE TYPE MUST BE MILES/KILOMETERS</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Mileage Unit: Unit of distance</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="accomodationGuaranteePaymentForm" mixed="true"/>
	<xs:complexType name="accomodationDepositPaymentForm" mixed="true"/>
	<xs:group name="PNRCommonElements">
		<xs:annotation>
			<xs:documentation xml:lang="en">Group containing the attributes common to all PNR, represented as XSD elements, except the ServiceProvider which is specific for some PNR elements like PNR Air and description which is mandatory for some PNR elements</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="originSystem" type="FullOriginSystemType" minOccurs="0"/>
			<xs:element name="bkgChannel" type="BookingChannelType" minOccurs="0"/>
			<xs:element name="externalSystem" type="ExternalSystemType" minOccurs="0"/>
			<xs:element name="creation" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Creation date time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="confirmation" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Confirmation date time</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="SellableBoundaryType" mixed="true">
		<xs:sequence>
			<xs:element name="locationCode" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="dateTime" type="xs:dateTime" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SellableStatusType" mixed="true"/>
	<xs:complexType name="CompactPointOfSaleType" mixed="true">
		<xs:sequence>
			<xs:element name="OfficeId" minOccurs="0">
				<xs:annotation>
					<xs:documentation>OfficeId for Amadeus or external Id in case of TTY POS</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Sign" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Numeric and Alpha sign</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="UserSecurityEntity" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Subset of the office to define groups of users</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SecurityDetailsType" mixed="true">
		<xs:annotation>
			<xs:documentation>Element security data.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Owner" type="CompactPointOfSaleType" minOccurs="0" maxOccurs="1"/>
			<xs:element name="Creator" type="CompactPointOfSaleType" minOccurs="0" maxOccurs="1"/>
			<xs:element name="Updator" type="CompactPointOfSaleType" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GroupNameType" mixed="true">
		<xs:annotation>
			<xs:documentation>Type representing a Group Name</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="GroupType" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Standard group or Corporate group. Refer to Amadeus codeset list GRP</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" type="xs:string"/>
			<xs:element name="NIP" type="xs:positiveInteger"/>
			<xs:element name="NberUnassignedNames" type="xs:positiveInteger" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PassengerNameType" mixed="true">
		<xs:annotation>
			<xs:documentation>Type representing an Individual Name</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PTC" type="xs:string" minOccurs="0"/>
			<xs:element name="StaffType" type="xs:string" minOccurs="0"/>
			<xs:element name="DateOfBirth" type="xs:date" minOccurs="0"/>
			<xs:element name="Age" type="xs:nonNegativeInteger" minOccurs="0"/>
			<xs:element name="SpecialSeat" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>CBBG or EXST</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IdentificationCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>ID or CR field</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" minOccurs="0" maxOccurs="5">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Type" type="xs:string" minOccurs="0"/>
						<xs:element name="IsRef" type="xs:boolean" minOccurs="0"/>
						<xs:element name="LastName" type="xs:string" minOccurs="0"/>
						<xs:element name="FirstName" type="xs:string" minOccurs="0"/>
						<xs:element name="Title" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PassengerNameOrString0Type" mixed="true">
		<xs:annotation>
			<xs:documentation>Type representing an Individual Name</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PTC" type="xs:string" minOccurs="0"/>
			<xs:element name="StaffType" type="xs:string" minOccurs="0"/>
			<xs:element name="DateOfBirth" type="DateOrString0" minOccurs="0"/>
			<xs:element name="Age" type="nonNegativeIntegerOrString0" minOccurs="0"/>
			<xs:element name="SpecialSeat" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>CBBG or EXST</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IdentificationCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>ID or CR field</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" minOccurs="0" maxOccurs="5">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Type" type="xs:string" minOccurs="0"/>
						<xs:element name="IsRef" type="BooleanOrString0" minOccurs="0"/>
						<xs:element name="LastName" type="xs:string" minOccurs="0"/>
						<xs:element name="FirstName" type="xs:string" minOccurs="0"/>
						<xs:element name="Title" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NonCommercialNameType" mixed="true">
		<xs:annotation>
			<xs:documentation>Type representing a Non Commercial Name</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string"/>
			<xs:element name="NIP" type="xs:positiveInteger"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReferenceListType" mixed="true"/>
	<xs:complexType name="FlixContentType" mixed="true"/>
	<xs:complexType name="FlightMessageContentType" mixed="true"/>
	<xs:complexType name="FlightMessageType" mixed="true"/>
	<xs:complexType name="FlightIdentifierType" mixed="true">
		<xs:annotation>
			<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
				<ama:error code="728">INVALID FLIGHT NUMBER</ama:error>
			</xs:appinfo>
			<xs:documentation xml:lang="en">Flight Number possibly with a Suffix</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="NumericStringLength1to4">
				<xs:sequence>
					<xs:element name="suffix" type="AlphaStringLength1" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AirType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="AIR" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32999">DESCRIPTION FIELD TOO LONG</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Description or Free Text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="bkgClass" type="AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="13114">INVALID BOOKING CLASS CODE</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Booking class</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="PNRStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">status code (usual list, allowed values are HK, HX, HN, HL)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NIP" type="Numeric1to99" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="1194">INVALID NUMBER IN PARTY</ama:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Number in party</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="originalClass" type="AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Original booking class</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Marketing service provider information.
Special XSD definition for PNR Air because the provider code is limited to 2to3 char for ETR Air.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ref" type="AlphaNumericStringLength1to6" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Provides provider (Marketing airline)'s profile reference</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="code" type="AlphaNumericStringLength2to3" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="817">INVALID AIRLINE CODE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Provider code (Marketing Airline code)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="name" type="StringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provider name (Marketing Airline name)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="blackListed" type="xs:boolean" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="identifier" type="FlightIdentifierType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Marketing Flight Number possibly with a Suffix</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="partnerInfo" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Operating Information</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="serviceProvider" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="code" type="AlphaNumericStringLength2to3" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="817">INVALID AIRLINE CODE</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Operating Airline code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="name" type="StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Operating Airline name</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="identifier" type="FlightIdentifierType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Operating Flight Number possibly with a Suffix</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="start">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error facet="use" code="31768">MANDATORY DEPARTURE DATE MISSING</ama:error>
									<ama:error code="32682">INVALID DEPARTURE DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure date (Service date) with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Departure Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error facet="minOccurs" code="31766">MANDATORY DEPARTURE POINT MISSING</ama:error>
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Departure Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeType">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error facet="use" code="31770">MANDATORY ARRIVAL DATE MISSING</ama:error>
									<ama:error code="32684">INVALID ARRIVAL DATE/TIME</ama:error>
									<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival date with optional time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="terminal" type="StringLength1to25" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Arrival Terminal</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error facet="minOccurs" code="31767">MANDATORY ARRIVAL POINT MISSING</ama:error>
									<ama:error code="11177">INVALID CITY / AIRPORT IATA CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility  -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Arrival Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="vehicle" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" type="pnr_AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Equipment code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="description" type="StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Equipment description</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="mileage" type="MileageType" minOccurs="0"/>
			<xs:element name="baggage" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="quantity" type="Numeric1to99" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11713">INVALID BAGGAGE ALLOWANCE VALUE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Baggage allowance</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="checkIn" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="endDateTime" type="xs:time" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="31980">INVALID CHECK-IN TIME</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Check-in deadline time - Only the time is stored for now</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ticket" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="number" type="AlphaNumericStringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="7121">TICKET NUMBER</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Ticket number</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="issuanceDate" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24806">INVALID DATE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Ticket Issuance date</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RevenueManagement" type="RevenueManagementType" minOccurs="0"/>
			<xs:element name="flifo" minOccurs="0">
				<xs:annotation>
					<xs:documentation>flight informations set by the operating entities</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="trafficRestricted" type="xs:boolean" minOccurs="0"/>
						<xs:element name="mealType" type="AlphaStringLength1" minOccurs="0"/>
						<xs:element name="dcsDummy" type="xs:boolean" minOccurs="0"/>
						<xs:element name="flix" minOccurs="0" maxOccurs="3">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="type" type="AlphaLength1to2"/>
									<xs:element name="airport" minOccurs="0">
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="comment" type="FlixContentType" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="message" minOccurs="0" maxOccurs="212">
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="FlightMessageContentType">
										<xs:sequence>
											<xs:element name="type" type="FlightMessageType"/>
											<xs:element name="index" type="Numeric1to999" minOccurs="0"/>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Emissions" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:documentation>Gas emissions</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="type" type="xs:string">
							<xs:annotation>
								<xs:documentation>Types of emissions: CO2, NOx, CO, etc.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Amount" type="xs:integer">
							<xs:annotation>
								<xs:documentation>Defines the amiount without decimal separator (i.e Amount=8500 and DecimalPlaces=2 represents 85.00)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="unit" type="AlphaNumericStringLength1to3" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Store unit of emission: kpp (kilogram per pax), etc.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="PNRCommonElements"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PriceType" mixed="true">
		<xs:sequence>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and DecimalPlace=2 represent 85.00)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type">
				<xs:annotation>
					<xs:documentation>Defines the yield type, can be OnD yield, Bid price, revenue loss, adjusted yield or effectice yield</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RevenueManagementType" mixed="true">
		<xs:sequence>
			<xs:element name="overbooking" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="actionCode" type="PNRStatusCode" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The action code leading to the overbooking</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="oversale" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="actionCode" type="PNRStatusCode" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The action code leading to the oversale</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="yield" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="classCombination" type="AlphaNumericStringLength1to10" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Combination of the class of flights forming the yield</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="itinerary" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="start">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="locationCode" type="StringLength3"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="end">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="locationCode" type="StringLength3"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="Price" type="PriceType" maxOccurs="5"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="TripOnd" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="start">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="locationCode" type="StringLength3"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="end">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="locationCode" type="StringLength3"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CustomerProfileType" mixed="true">
		<xs:sequence>
			<xs:element name="profileType">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="profileRloc">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="indexingProcess" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProviderNoteType" mixed="true">
		<xs:sequence>
			<xs:element name="serviceProvider" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="24198">INVALID PROVIDER CODE</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Provider code</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="name" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Provider name</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="data" minOccurs="0" maxOccurs="99">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="ProviderNoteContentType">
							<xs:sequence>
								<xs:element name="type">
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="system" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Owner name</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="application" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Application responsible of the data</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="index" type="xs:nonNegativeInteger" minOccurs="0"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProviderNoteContentType" mixed="true"/>
	<xs:annotation>
		<xs:documentation xml:lang="en">.</xs:documentation>
	</xs:annotation>
	<xs:complexType name="CodePatternType" mixed="true"/>
	<xs:complexType name="ama_String0" mixed="true"/>
	<xs:complexType name="ama_AlphaStringLength1" mixed="true"/>
	<xs:complexType name="AlphaStringLength1orString0" mixed="true"/>
	<xs:complexType name="AlphaStringLength1to2" mixed="true"/>
	<xs:complexType name="AlphaStringLength1to2orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaStringLength1to4" mixed="true"/>
	<xs:complexType name="AlphaStringLength1to4orString0" mixed="true"/>
	<xs:complexType name="AlphaStringLength3" mixed="true"/>
	<xs:complexType name="AlphaStringLength3orString0" mixed="true"/>
	<xs:complexType name="ama_NumericStringLength1" mixed="true"/>
	<xs:complexType name="NumericStringLength1orString0" mixed="true"/>
	<xs:complexType name="ama_NumericStringLength1to2" mixed="true"/>
	<xs:complexType name="NumericStringLength1to2orString0" mixed="true"/>
	<xs:complexType name="ama_NumericStringLength1to4" mixed="true"/>
	<xs:complexType name="NumericStringLength1to4orString0" mixed="true"/>
	<xs:complexType name="ama_NumericStringLength1to5" mixed="true"/>
	<xs:complexType name="NumericStringLength1to5orString0" mixed="true"/>
	<xs:complexType name="ama_NumericStringLength1to8" mixed="true"/>
	<xs:complexType name="NumericStringLength1to8orString0" mixed="true"/>
	<xs:complexType name="ama_NumericStringLength1to99" mixed="true"/>
	<xs:complexType name="NumericStringLength1to99orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to2" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to2orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to3" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to3orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to4" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to4orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to6" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to6orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to7" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to7orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to8" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to8orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to10" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to10orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to14" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to14orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to17" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to17orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to19" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to19orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to20" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to20orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to25" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to25orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to30" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to30orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to31" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to31orString0" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to32" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to32orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to35" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to35orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to70" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to70orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to9" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to9orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to99" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to99orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength1to256" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength1to256orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength2" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength2orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength2to3" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength2to3orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength3" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength3orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength3to7" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength3to7orString0" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength3to10" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength3to10orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength4" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength4orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength1to20" mixed="true"/>
	<xs:complexType name="StringLength1to20orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength1to25" mixed="true"/>
	<xs:complexType name="StringLength1to25orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength1to30" mixed="true"/>
	<xs:complexType name="StringLength1to30orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength1to31" mixed="true"/>
	<xs:complexType name="StringLength1to31orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength1to35" mixed="true"/>
	<xs:complexType name="StringLength1to35orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength1to60" mixed="true"/>
	<xs:complexType name="StringLength1to60orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength1to64" mixed="true"/>
	<xs:complexType name="StringLength1to64orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength1to70" mixed="true"/>
	<xs:complexType name="StringLength1to70orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength1to99" mixed="true"/>
	<xs:complexType name="StringLength1to99orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength1to109" mixed="true"/>
	<xs:complexType name="StringLength1to109orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength1to128" mixed="true"/>
	<xs:complexType name="StringLength1to128orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength1to199" mixed="true"/>
	<xs:complexType name="StringLength1to199orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength1to256" mixed="true"/>
	<xs:complexType name="StringLength1to256orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength3" mixed="true"/>
	<xs:complexType name="StringLength3orString0" mixed="true"/>
	<xs:complexType name="StringLength4" mixed="true"/>
	<xs:complexType name="StringLength4orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength0to15" mixed="true"/>
	<xs:complexType name="StringLength0to15orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength0to64" mixed="true"/>
	<xs:complexType name="StringLength0to64orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength0to128" mixed="true"/>
	<xs:complexType name="StringLength0to128orString0" mixed="true"/>
	<xs:complexType name="ama_StringLength0to140" mixed="true"/>
	<xs:complexType name="StringLength0to140orString0" mixed="true"/>
	<xs:complexType name="ama_NumericStringLength10" mixed="true"/>
	<xs:complexType name="NumericStringLength10orString0" mixed="true"/>
	<xs:complexType name="ama_AlphaNumericStringLength6" mixed="true"/>
	<xs:annotation>
		<xs:documentation xml:lang="en">.</xs:documentation>
	</xs:annotation>
	<xs:complexType name="ama_PersonNameType" mixed="true">
		<xs:annotation>
			<xs:documentation>A extension of the OTA PersonNameType in order to be able to convey several names of different types for one person.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="PersonNameType">
				<xs:sequence>
					<xs:element name="NameVariety" type="CodePatternType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>To specify the type of the name. Refer to the Amadeus codeset list NAT (Name Type).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Language" type="xs:language" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">The language ID for the associated content.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DisplayedName" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Specify if the name should be displayed. Refer to the Amadeus codeset list NAT (Name Type).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RomanizationMethod" type="CodePatternType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Specify the method used to romanize the native name. Only applicable for romanized names. refer to the Amdeus Codeset list NRM (Name Romanization Method).</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CodeType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Used to convey any code. It may contain merely codes or integer codes associated to a value in AMA_CodeTable.xls</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Code" type="StringLength1to64">
				<xs:annotation>
					<xs:documentation>The code value - Sample: 21</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Owner" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Which owner defined this code, may be one of OTA, IATA or AMA</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListName" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The name of the code list this code refers too - sample: Transportation Code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListCode" type="StringLength1to8" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The code of the code list this code refers too - sample: TRP</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Desc" type="StringLength1to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The textual value that describes the code - Sample: Train</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ama_WarningType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Standard way to indicate successful processing of an Amadeus message, but one in which warnings are generated.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="FreeTextType">
				<xs:sequence>
					<xs:element name="Type" type="StringLength0to255">
						<xs:annotation>
							<xs:documentation xml:lang="en">The warnings element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ShortText" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">An abbreviated version of the warning in textual format.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DescText" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">An abbreviated version of the warning in textual format.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Code" type="NumericStringLength1to8">
						<xs:annotation>
							<xs:documentation xml:lang="en">Code must be specified. This refers to a table of coded values exchanged between applications to identify warnings. Refer to Amadeus Code List Warning Codes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DocURL" type="xs:anyURI" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this URL refers to an online description of the warning that occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Status" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, recommended values are those enumerated in the AMA_WarningRS, (NotProcessed | Incomplete | Complete | Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Tag" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute may identify an unknown or misspelled tag that caused an warning in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RecordID" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ama_ErrorType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Standard way to indicate that an error occurred during the processing of an Amadeus message. If the message successfully processes, but there are business errors, those errors should be passed in the warning element.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="FreeTextType">
				<xs:sequence>
					<xs:element name="Type" type="OTA_CodeType">
						<xs:annotation>
							<xs:documentation xml:lang="en">The Error element MUST contain the Type attribute that uses a recommended set of values to indicate the error type.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ShortText" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">An abbreviated version of the error in textual format.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Code" type="NumericStringLength1to8">
						<xs:annotation>
							<xs:documentation xml:lang="en">Code must be specified. This refers to a table of coded values exchanged between applications to identify errors or warnings. Refer to Amadeus Code List Error Codes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DocURL" type="xs:anyURI" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this URL refers to an online description of the error that occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Status" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, recommended values are those enumerated in the AMA_ErrorRS, (NotProcessed | Incomplete | Complete | Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Tag" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RecordID" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NodeList" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">An XPath expression that selects all the nodes whose data caused this error. Further, this expression should have an additional contraint which contains the data of the node. This will provide the offending data back to systems that cannot maintain the original message.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GenericWarningsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection of errors that occurred during the processing of a message.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Warnings" type="ama_WarningsType" minOccurs="0"/>
			<xs:element ref="ota_Warnings" minOccurs="0"/>
			<xs:element ref="iata_Warnings" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GenericErrorsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection of errors that occurred during the processing of a message.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Errors" type="ama_ErrorsType" minOccurs="0"/>
			<xs:element ref="ota_Errors" minOccurs="0"/>
			<xs:element ref="iata_Errors" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ama_ErrorsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection of Amadeus errors that occurred during the processing of a message.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Error" type="ama_ErrorType" maxOccurs="99"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ama_WarningsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection of Amadeus errors that occurred during the processing of a message.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Warning" type="ama_ErrorType" maxOccurs="99"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReplyType" mixed="true">
		<xs:annotation>
			<xs:documentation>Basic structure of any webservice reply. Extend this type to implement a reply.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ActionStatusType">
				<xs:sequence>
					<xs:element name="EchoToken" type="StringLength1to128" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">A reference for additional message identification, assigned by the requesting host system. When a request message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TimeStamp" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-20T13:59:38Z).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Target" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Used to indicate whether the request is for the Test or Production system.</xs:documentation>
							<xs:documentation xml:lang="en">
								<LegacyDefaultValue>Production</LegacyDefaultValue>
							</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
					<xs:element name="TargetName" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Used to indicate the name of the Test or Production system.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Version" type="xs:decimal">
						<xs:annotation>
							<xs:documentation xml:lang="en">For all OpenTravel versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TransactionIdentifier" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">A unique identifier to relate all messages within a transaction (e.g. this would be sent in all request and response messages that are part of an on-going transaction).</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SequenceNmbr" type="xs:nonNegativeInteger" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application to process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and needs to retrieve messages that were missed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TransactionStatusCode" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">This indicates where this message falls within a sequence of messages.</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true"/>
					</xs:element>
					<xs:element name="PrimaryLangID" type="xs:language" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Identifies the primary language preference for the message. The human language is identified by ISO 639 codes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AltLangID" type="xs:language" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Identifies the alternate language for a customer or message. The human language is identified by ISO 639 codes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RetransmissionIndicator" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">When true, indicates the message is being re-sent after a failure. It is recommended that this attribute is used (i.e., set to TRUE) only when a message is retransmitted.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CorrelationID" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">Allow end-to-end correlation of log messages with the corresponding Web service message throughout the processing of the Web service message.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ama_PointOfSaleType" mixed="true">
		<xs:annotation>
			<xs:documentation>Contains all data of a Point of Sale.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="POS_Type" type="OTA_CodeType">
				<xs:annotation>
					<xs:documentation>Specifies a code for the type of the POS (i.e. last updator, owner...). Refer to the Amadeus POS type (POS) codeset list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PseudoCityCode" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">An identification code assigned to an office/agency by a reservation system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AgentSign" type="StringLength0to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Agent sign of the user.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AgentDutyCode" type="StringLength0to8" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Duty code of the user.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ERSP_UserID" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Electronic Reservation Service Provider (ERSP) assigned identifier used to identify the individual using the ERSP system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FirstDepartPoint" type="StringLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The point of first departure in a trip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TrueCityCode" type="StringLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The true city code of the requesting party.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ISO_Country" type="ISO3166" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The country code of the requesting party.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ISO_Currency" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The currency code of the requesting party.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Language" type="StringLength0to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Language preference.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Date" type="DateOrDateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The date corresponding to this point of sale action.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Time" type="DateOrDateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The time corresponding to this point of sale action.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimeZone" type="TimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>To precise the time zone of the point of sale. LOC for local time or UTC.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RequestorID" type="iata_UniqueID_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Standard identification of the requestor.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BookingChannel" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Type" type="StringLength1to128" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Channel type used by the POS.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CompanyName" type="CompanyNameType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PointsOfSaleType" mixed="true">
		<xs:annotation>
			<xs:documentation>Contains several Points of Sale.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PointOfSale" type="ama_PointOfSaleType" maxOccurs="10"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CriteriaSetType" mixed="true">
		<xs:annotation>
			<xs:documentation>Criteria Set (key/value map)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Criteria" maxOccurs="99">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Key" type="StringLength1to32"/>
						<xs:element name="Value" type="StringLength1to255"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RawDataType" mixed="true">
		<xs:complexContent>
			<xs:extension base="__Dummy">
				<xs:sequence>
					<xs:element name="Encoding" type="StringLength1to16" minOccurs="0"/>
					<xs:element name="Compression" type="StringLength1to32" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ActionStatusType" mixed="true">
		<xs:choice>
			<xs:element name="Success">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Warnings" type="GenericWarningsType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Failure">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Warnings" type="GenericWarningsType" minOccurs="0"/>
						<xs:element name="Errors" type="GenericErrorsType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="ContactCategoryType" mixed="true"/>
	<xs:complexType name="ContactPurposeType" mixed="true"/>
	<xs:complexType name="ContactRoleType" mixed="true"/>
	<xs:complexType name="ContactGroupType" mixed="true">
		<xs:sequence>
			<xs:element name="Contact" type="ContactType" maxOccurs="10"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ContactType" mixed="true">
		<xs:sequence>
			<xs:element name="language" type="xs:language" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Language ISO code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="category" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contact category: home, business,...</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="actor" type="ContactRoleType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>type of actor: passenger, buyer, company, friend,,....</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="purpose" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contact purpose: notification, billing,...</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="format" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Filled with Structured to indicate that Contact data must stay structured and not only filled in free text</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Address" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This is the main contact element, generally corresponding to the unstructured address/phone/email element</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="ama_StringLength1to99">
							<xs:sequence>
								<xs:element name="type" minOccurs="0">
									<xs:annotation>
										<xs:documentation>type of address: Email, Phone, Pager, unstructured postal address, ...</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="PostalAddress" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Postal Address information.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="line" type="StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="complement" type="StringLength1to70" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="zip" type="AlphaNumericStringLength1to17" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
								</xs:appinfo>
								<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="countryCode" type="AlphaNumericStringLength2" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<ama:error code="47">INVALID COUNTRY CODE</ama:error>
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="latitude" type="xs:decimal" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="longitude" type="xs:decimal" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="cityCode" type="ama_StringLength1to20" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">City code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="cityName" type="ama_StringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
							</xs:appinfo>
								<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="stateCode" type="ama_AlphaNumericStringLength2" minOccurs="0">
							<xs:annotation>
								<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
									<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
								</xs:appinfo>
								<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="stateName" type="ama_StringLength1to35" minOccurs="0">
							<xs:annotation>
								<xs:documentation>State name</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="countryName" type="ama_StringLength1to35" minOccurs="0"/>
						<xs:element name="postalBox" type="ama_StringLength1to35" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Phone" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="ama_StringLength1to20">
							<xs:sequence>
								<xs:element name="overseasCode" type="ama_AlphaNumericStringLength1to9" minOccurs="0"/>
								<xs:element name="countryCode" type="ama_AlphaNumericStringLength2" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Country code (2 character standard IATA country code)</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Recipient" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="company" type="ama_StringLength1to35" minOccurs="0"/>
						<xs:element name="name" type="ama_StringLength1to35" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Security" minOccurs="0" maxOccurs="20">
				<xs:annotation>
					<xs:documentation>Security data</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="OfficeID" type="ama_AlphaNumericStringLength1to9" minOccurs="0">
							<xs:annotation>
								<xs:documentation>OfficeId for Amadeus or external Id in case of TTY POS</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="NumericId" type="ama_NumericStringLength1to2" minOccurs="0">
							<xs:annotation>
								<xs:documentation>IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Rights" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Office rights enumeration: Write, Read, ReadWrite, No Rights</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Provider" type="ama_AlphaNumericStringLength1to2" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Porvider/owner of the contatc data, like APN owner airline</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PointOfSaleType" mixed="true">
		<xs:annotation>
			<xs:documentation>PointOfSale data. This is an internal representation only, please use PointOfSale definition from AMA_CommonTypes to show POS data outside of Amadeus</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Role">
				<xs:annotation>
					<xs:documentation>Type: Owner, Creator, Updator</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Office">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Id" minOccurs="0">
							<xs:annotation>
								<xs:documentation>OfficeId for Amadeus or external Id in case of TTY POS</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="NumericId" minOccurs="0">
							<xs:annotation>
								<xs:documentation>IATA code</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="City" minOccurs="0">
							<xs:annotation>
								<xs:documentation>IATA City or Airport code</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="SystemCode" minOccurs="0">
							<xs:annotation>
								<xs:documentation>IATA airline code or GDS code</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Country" minOccurs="0">
							<xs:annotation>
								<xs:documentation>IATA Coutry Code</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="AgentType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Agent, System, etc</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AgentGroupInfo" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="UserSecurityEntity">
							<xs:annotation>
								<xs:documentation>Subset of the office to define groups of users</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Login" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Sign">
							<xs:annotation>
								<xs:documentation>Numeric and Alpha sign</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="DutyCode">
							<xs:annotation>
								<xs:documentation>Duty code such as SU, PR</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="PseudoCityCode" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Terminal pseudo city code of the agent</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Channel" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="AccessType">
										<xs:annotation>
											<xs:documentation>DCD Information</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Product">
										<xs:annotation>
											<xs:documentation>DCD Information</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="SubProduct">
										<xs:annotation>
											<xs:documentation>DCD Information</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReceivedFromType" mixed="true">
		<xs:sequence>
			<xs:element name="UseHistory" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="NewFormat" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="dateTime" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="Text" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="ama_StringLength1to199">
							<xs:sequence>
								<xs:element name="label" type="ama_StringLength1to60" minOccurs="0"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Office" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Id" minOccurs="0">
							<xs:annotation>
								<xs:documentation>OfficeId for Amadeus or external Id in case of TTY POS</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="NumericId" minOccurs="0">
							<xs:annotation>
								<xs:documentation>IATA code</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="City" minOccurs="0">
							<xs:annotation>
								<xs:documentation>IATA City or Airport code</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="SystemCode" minOccurs="0">
							<xs:annotation>
								<xs:documentation>IATA airline code or GDS code</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Country" minOccurs="0">
							<xs:annotation>
								<xs:documentation>IATA Coutry Code</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="AgentType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Agent, System, etc</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Qualifier" minOccurs="0">
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Login" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Sign">
							<xs:annotation>
								<xs:documentation>Numeric and Alpha sign</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="DutyCode">
							<xs:annotation>
								<xs:documentation>Duty code such as SU, PR</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="PseudoCityCode" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Terminal pseudo city code of the agent</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ATID" minOccurs="0">
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RemarksType" mixed="true">
		<xs:annotation>
			<xs:documentation>Used to convey all remarks.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="category" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A-Z or *</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="description" type="xs:string"/>
			<xs:element name="Content" type="ama_StringLength1to128"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TicketingArrangementType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">To specify an Amadeus PNR Ticket element</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="passengerType" type="pnr_AlphaNumericStringLength1to3" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Passenger type  PAX for Passenger  INF for Infant not occupying a seat</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TKType">
				<xs:annotation>
					<xs:documentation>Ticketing type  
- AT: airport ticketing
- DO: domestic flight
- IN: international flight
- MA: mail
- OK: ticketed
- PT: prepaid ticket
- SS: self service
- ST: satellite ticketing
- TL: time limit
- TR: revalidation
- XL: automatic PNR cancellation</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="date" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Ticketing date</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="time" type="xs:time" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Ticketing time</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="officeId" type="AlphaNumericStringLength1to10" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Office Id</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="freetext" type="pnr_AlphaNumericStringLength1to14" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Free flow text</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="transactionFlag" type="AlphaNumericStringLength1to9" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Air France flag (e.g. //TELEPAYE for MINITEL)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="electronicTicketFlag" type="AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Electronic ticketing flag + airline code (e.g. //ETLH)  ET for Electronic ticket candidate</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="airlineCode" type="pnr_AlphaNumericStringLength1to3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Airline code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="queueNumber" type="pnr_AlphaNumericStringLength1to3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Alternate Queue number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="queueCategory" type="pnr_AlphaNumericStringLength1to3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Alternate queue Category number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="printOptions" type="pnr_StringLength1to128" minOccurs="0"/>
			<xs:element name="sitaAddress" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">SITA addresses</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TripSummaryType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="FTS" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type, to be displayed in some displays dynamically. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="title" type="StringLength0to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Trip label or Name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="StringLength0to140" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Trip description</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeOrString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Start date of the trip</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="StringLength0to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the departure city</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3OrString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Start Trip Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="stateCode" type="AlphaNumericStringLength2OrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateName" type="StringLength0to64" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State Name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="AlphaNumericStringLength2OrString0" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="StringLength0to64" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country Name</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="itinerary" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="via" minOccurs="0" maxOccurs="99">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="dateTime" type="DateOrDateTimeOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation>End date of the trip</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="locationName" type="StringLength0to64" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Name of the Arrival City</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="duration" type="xs:duration" minOccurs="0"/>
									<xs:element name="locationCode" type="StringLength3" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Via Trip Location IATA code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="address" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="stateCode" type="AlphaNumericStringLength2" minOccurs="0">
													<xs:annotation>
														<xs:documentation>State code (2 character standard IATA country code)</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="stateName" type="StringLength0to64" minOccurs="0">
													<xs:annotation>
														<xs:documentation>State Name</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="countryCode" type="AlphaNumericStringLength2" minOccurs="0">
													<xs:annotation>
														<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
															<ama:error code="47">INVALID COUNTRY CODE</ama:error>
															<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
														</xs:appinfo>
														<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="countryName" type="StringLength0to64" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Country Name</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="to" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeOrString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>End date of the trip</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="StringLength0to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the Arrival City</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3OrString0" minOccurs="0" maxOccurs="3">
							<xs:annotation>
								<xs:documentation>To Trip Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="stateCode" type="AlphaNumericStringLength2OrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateName" type="StringLength0to64" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State Name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="AlphaNumericStringLength2OrString0" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="StringLength0to64" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country Name</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="DateOrDateTimeOrString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>End date of the trip</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationName" type="StringLength0to64" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of the Arrival City</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="locationCode" type="StringLength3OrString0" minOccurs="0" maxOccurs="3">
							<xs:annotation>
								<xs:documentation>End Trip Location IATA code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="address" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="stateCode" type="AlphaNumericStringLength2OrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateName" type="StringLength0to64" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State Name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="AlphaNumericStringLength2OrString0" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="StringLength0to64" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country Name</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="purpose" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Business or Leisure</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="privacy" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Public or Private - Type to be defined</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OfferType" mixed="true">
		<xs:sequence>
			<xs:element name="status" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Status of the offer, it can be confirmed, expired...</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="offerType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The type of the offer, it can be man, car, air...</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="creation" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The creation date and time of the offer</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="office" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The office where the offer was created</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="validity" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="endDateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The validity date of the offer</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="sentTag" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The sending date and time of the offer</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="channel" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The type of channel used to send the offer</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="contactInfo" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The phone number or the e-mail adress used to send the offer.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="externalSystem" type="ExternalSystemType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="fie_AlphaNumericStringLength1to9" mixed="true"/>
	<xs:complexType name="fie_DescriptionType" mixed="true"/>
	<xs:complexType name="PaymentTypeType" mixed="true"/>
	<xs:complexType name="PaymentChannelType" mixed="true"/>
	<xs:complexType name="TitleType" mixed="true"/>
	<xs:complexType name="StatusType" mixed="true"/>
	<xs:complexType name="ConfirmationNumberType" mixed="true"/>
	<xs:complexType name="CarrierType" mixed="true"/>
	<xs:complexType name="HotelCodeType" mixed="true"/>
	<xs:complexType name="NameType" mixed="true"/>
	<xs:group name="FICommonElements">
		<xs:sequence>
			<xs:element name="product" type="fie_ProductType" minOccurs="0"/>
			<xs:element name="payment" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="type" type="PaymentTypeType" minOccurs="0"/>
						<xs:element name="channel" type="PaymentChannelType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="sales" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="BookingChannelOption">
							<xs:sequence>
								<xs:element name="channel" type="BookingChannelOption" minOccurs="0"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="comment" type="fie_CommentType" minOccurs="0" maxOccurs="20"/>
			<xs:element name="creation" type="CreationType" minOccurs="0"/>
			<xs:element name="modification" type="ModificationType" minOccurs="0"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="FICommonElementsExt">
		<xs:sequence>
			<xs:element name="product" type="ProductTypeExt" minOccurs="0"/>
			<xs:element name="payment" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="type" type="PaymentTypeType" minOccurs="0"/>
						<xs:element name="channel" type="PaymentChannelType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="document" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ref" type="DocumentRefType" minOccurs="0" maxOccurs="100"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="sales" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="BookingChannelOption">
							<xs:sequence>
								<xs:element name="channel" type="BookingChannelOption" minOccurs="0"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="comment" type="fie_CommentType" minOccurs="0" maxOccurs="20"/>
			<xs:element name="creation" type="CreationType" minOccurs="0"/>
			<xs:element name="modification" type="ModificationType" minOccurs="0"/>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="fie_CommentType" mixed="true">
		<xs:complexContent>
			<xs:extension base="StringLength1to199">
				<xs:sequence>
					<xs:element name="type" type="pnr_AlphaNumericStringLength1to3" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CreationType" mixed="true">
		<xs:sequence>
			<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="24806">INVALID DATE</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation xml:lang="en">Creation date time</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="user" type="fie_AlphaNumericStringLength1to9" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Creation user</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ModificationType" mixed="true">
		<xs:sequence>
			<xs:element name="dateTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="24806">INVALID DATE</ama:error>
						<!-- NB: here only the reg expr of ota:DateOrDateTimeType is checked. Full validation of validity date is done on creation BEs -->
					</xs:appinfo>
					<xs:documentation xml:lang="en">Modification date time</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProfileType" mixed="true">
		<xs:sequence>
			<xs:element name="ref" type="AlphaNumericStringLength1to6" minOccurs="0"/>
			<xs:element name="name" type="StringLength1to70" minOccurs="0"/>
			<xs:element name="code" type="AlphaNumericStringLength1to35" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProfileTypeMisc" mixed="true">
		<xs:sequence>
			<xs:element name="code" type="AlphaNumericStringLength1to35" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="fie_ProductType" mixed="true">
		<xs:sequence>
			<xs:element name="subType" type="AlphaNumericStringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:documentation>N/A for FI Package or Product. For FI Miscellaneous: SRV - Service Fee, BKG - Booking Fee, CNL - Cancelation Fee, MRK - Mark-up, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="externalID" type="AlphaNumericStringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique code for the Package/Product/Service Fee in the external system.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DocumentRefType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="pnr_AlphaNumericStringLength1to3"/>
			<xs:element name="number" type="AlphaNumericStringLength1to35"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProductTypeExt" mixed="true">
		<xs:sequence>
			<xs:element name="origin" type="AlphaNumericStringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Code to identify a GDS or non-GDS booking. PNR code for GDS and EXT code for non-GDS. N/A for FI type Package or Miscellaneous.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="family" type="AlphaNumericStringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:documentation>System generated code to group product/bookings types (MOV, SLP, EAT, ACT, SCE). N/A for FI type Package or Miscellaneous. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="AlphaNumericStringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:documentation>System generated code. For FI Package : TA - Travel Agent package, or SUP - Supplier  package. For FI Product : GDS booking - AIR for Air, HHL for hotel and CCR for Car; non- GDS booking will be the ETR type code. For FI type Miscelleneous: FEE for service fee, MIS for other. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subType" type="AlphaNumericStringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:documentation>N/A for FI Package or Product. For FI Miscellaneous: SRV - Service Fee, BKG - Booking Fee, CNL - Cancelation Fee, MRK - Mark-up, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="externalId" type="AlphaNumericStringLength1to256" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique code for the Package/Product/Service Fee in the external system.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="fie_TicketType" mixed="true">
		<xs:sequence>
			<xs:element name="number" type="AlphaNumericStringLength1to35" minOccurs="0"/>
			<xs:element name="issuanceDate" type="xs:date" minOccurs="0"/>
			<xs:element name="status" type="AlphaNumericStringLength2" minOccurs="0"/>
			<xs:element name="valCarrier" type="CarrierType" minOccurs="0"/>
			<xs:element name="segment" minOccurs="0" maxOccurs="4">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="start" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="locationCode" type="IATA_CodeType" minOccurs="0"/>
									<xs:element name="dateTime" type="xs:date" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="end" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="locationCode" type="IATA_CodeType" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="serviceProvider" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="code" type="CarrierType" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="identifier" type="fie_FlightIdentifierType" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Operating Flight Number possibly with a Suffix</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="fie_FlightIdentifierType" mixed="true">
		<xs:annotation>
			<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
				<ama:error code="728">INVALID FLIGHT NUMBER</ama:error>
			</xs:appinfo>
			<xs:documentation xml:lang="en">Flight Number possibly with a Suffix</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="NumericStringLength1to4">
				<xs:sequence>
					<xs:element name="suffix" type="AlphaStringLength1" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GuaranteeType" mixed="true">
		<xs:sequence>
			<xs:element name="garanteedfare" type="pnr_AlphaNumericStringLength1to3" minOccurs="0"/>
			<xs:element name="additionalInfo" type="StringLength1to199" minOccurs="0"/>
			<xs:element name="card" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="primaryAccountNumber" type="AlphaNumericStringLength1to35" minOccurs="0"/>
						<xs:element name="validity" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="endDate" type="xs:date" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="HotelType" mixed="true">
		<xs:sequence>
			<xs:element name="propertyCode" type="HotelCodeType" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="address" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="line" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="complement" type="etr_StringLength1to70" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="zip" type="etr_StringLength1to17" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryCode" type="etr_AlphaNumericStringLength2" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="47">INVALID COUNTRY CODE</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="latitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Latitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32986">INVALID LATITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="longitude" type="DecimalOrString0" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Longitude (geographic coordinate) expressed in decimal degree.</xs:documentation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="32987">INVALID LONGITUDE</ama:error>
											</xs:appinfo>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityCode" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">City code</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="cityName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11829">INVALID FIELD LENGTH CITY NAME</ama:error>
											</xs:appinfo>
											<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="countryName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Country name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="stateCode" minOccurs="0">
										<xs:annotation>
											<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
												<ama:error code="11260">INVALID STATE CODE FOR COUNTRY SPECIFIED</ama:error>
												<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
											</xs:appinfo>
											<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="stateName" type="etr_StringLength1to35" minOccurs="0">
										<xs:annotation>
											<xs:documentation>State name</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="postalBox" type="etr_StringLength1to20" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Number or ID of the postal box if applicable.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="contact" type="fie_ContactType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="serviceProvider" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" type="HotelCodeType" minOccurs="0"/>
						<xs:element name="name" type="NameType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="fie_ContactType" mixed="true">
		<xs:sequence>
			<xs:element name="phone" type="StringLength1to20" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ama:error code="32804">INVALID PHONE NUMBER</ama:error>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TTR_FinancialItemProductType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="FIE" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="StatusType" minOccurs="0"/>
			<xs:element name="paid" type="xs:boolean" minOccurs="0"/>
			<xs:element name="issued" type="xs:boolean" minOccurs="0"/>
			<xs:element name="confirmNbr" type="ConfirmationNumberType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Confirmation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cancelNbr" type="ConfirmationNumberType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Cancellation Number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="fie_DescriptionType" minOccurs="0"/>
			<xs:group ref="FICommonElementsExt"/>
			<xs:element name="supplier" type="ProfileType" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="move">
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="ticket" type="fie_TicketType" minOccurs="0" maxOccurs="4"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="sleep">
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="guarantee" type="GuaranteeType" minOccurs="0"/>
							<xs:element name="hotel" type="HotelType" minOccurs="0"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="eatDrink">
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="title" type="TitleType" minOccurs="0"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="activity">
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="title" type="TitleType" minOccurs="0"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="services">
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="title" type="TitleType" minOccurs="0"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TTR_FinancialMiscType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="FIE" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="StatusType" minOccurs="0"/>
			<xs:element name="paid" type="xs:boolean" minOccurs="0"/>
			<xs:element name="applied" type="xs:boolean" minOccurs="0"/>
			<xs:group ref="FICommonElementsExt"/>
			<xs:element name="reason" type="ProfileTypeMisc" minOccurs="0"/>
			<xs:element name="supplier" type="ProfileType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TTR_FinancialItemPackageType" mixed="true">
		<xs:sequence>
			<xs:element name="type" type="StringLength3" fixed="FIE" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Functional product type on 3 letters. Is similar to the GDS existing type for traditional elements already existing in 1A. This is used in some cryptic displays. Filled by the XSLT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="StatusType" minOccurs="0"/>
			<xs:element name="paid" type="xs:boolean" minOccurs="0"/>
			<xs:element name="title" type="TitleType" minOccurs="0"/>
			<xs:element name="issued" type="xs:boolean" minOccurs="0"/>
			<xs:element name="start" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="locationCode" type="IATA_CodeType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="end" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="locationCode" type="IATA_CodeType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:group ref="FICommonElementsExt"/>
		</xs:sequence>
	</xs:complexType>
	<!-- *************************************************** -->
	<!-- <xs:element name="PaymentForm" type="PaymentFormType"/>-->
	<xs:complexType name="NumericStringLength1to30" mixed="true"/>
	<xs:complexType name="tkt_PaymentFormType" mixed="true">
		<xs:complexContent>
			<xs:extension base="iata_PaymentFormType">
				<xs:sequence>
					<xs:element name="ApprovalCode" type="AlphaNumericStringLength1to19" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The approval code returned as part of an authorization process</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Price" minOccurs="0">
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="MiscValue" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="FareType" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Amount" type="xs:integer" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="Points" minOccurs="0">
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="Amount" type="xs:integer" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Number of points</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="Instalment" minOccurs="0">
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="Number" type="iata_NumericStringLength1to4" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Number of instalments</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="InterestRate" type="iata_NumericStringLength1to8" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Interests in % of the instalment</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Supplier" type="StringLength0to100" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Supplier of the instalment</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Price" minOccurs="0">
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:element name="MiscValue" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
												</xs:annotation>
												<xs:complexType mixed="true"/>
											</xs:element>
											<xs:element name="FareType" type="xs:string" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="Amount" type="xs:integer" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MethodOfPaymentType" mixed="true">
		<xs:sequence>
			<xs:element name="status" type="FOPStatusType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identify if the FOP is an Old FOP or not. Old FOP contains the FOP(s) that were used in previous transactions in the same booking.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Code" type="StringLength0to15" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The FOP code, identifying type of FOP for Amadeus</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="Card">
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="HolderName" type="StringLength0to100" minOccurs="0">
								<xs:annotation>
									<xs:documentation xml:lang="en">Name of credit card holder.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="FraudStatus" type="StringLength1to5" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Can be OK, KO or RW (pending).</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="AddressVerificationSystemValue" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Credit Card holder's address</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="CityName" type="iata_StringLength1to64" minOccurs="0"/>
										<xs:element name="PostalCode" type="iata_StringLength1to16" minOccurs="0">
											<xs:annotation>
												<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Country" type="iata_StringLength1to32" minOccurs="0">
											<xs:annotation>
												<xs:documentation xml:lang="en">ISO 3166 code for the country</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Line" type="StringLength1to71" minOccurs="0" maxOccurs="5">
											<xs:annotation>
												<xs:documentation>Street and number on first line. Building, Floor etc... on following lines</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="MagneticTrack" minOccurs="0" maxOccurs="4">
								<xs:annotation>
									<xs:documentation>Contains Data of the Magnetic Stripe of the Credit Card</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:complexContent>
										<xs:extension base="iata_StringLength0to255">
											<xs:sequence>
												<xs:element name="Type" type="TrackType" minOccurs="0"/>
											</xs:sequence>
										</xs:extension>
									</xs:complexContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="Issuance" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Information about the issuing bank and country</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="Country" type="iata_StringLength1to32" minOccurs="0">
											<xs:annotation>
												<xs:documentation xml:lang="en">Credit Card country of issuance</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Bank">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="Name" type="iata_StringLength1to128" minOccurs="0">
														<xs:annotation>
															<xs:documentation xml:lang="en">Full name of the issuing bank</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="iata_StringLength1to64" minOccurs="0">
														<xs:annotation>
															<xs:documentation xml:lang="en">Code of bank issuing the card.</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PrimaryAccountNumber" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Credit card number embossed on the front of the card.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:complexContent>
										<xs:extension base="NumericStringLength1to30">
											<xs:sequence>
												<xs:element name="KnoxID" type="NumericStringLength1to30" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">KnoxID of the Primary Acount Number</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:extension>
									</xs:complexContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="CVV" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Verification digits printed on the back of the card usually (CardVerificationValue).</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:complexContent>
										<xs:extension base="iata_NumericStringLength1to8">
											<xs:sequence>
												<xs:element name="KnoxID" type="NumericStringLength1to30" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">KnoxID of the CVV</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:extension>
									</xs:complexContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="ApprovalCode" minOccurs="0">
								<xs:annotation>
									<xs:documentation>A series of characters assigned by the applicable credit card company's authorization system to confirm the approval of a credit sale transaction.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:complexContent>
										<xs:extension base="iata_AlphaNumericStringLength1to14">
											<xs:sequence>
												<xs:element name="Source" type="StringLength1" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Can be A if it comes from Amadeus Payment Server, or N if entered manually by an Agent</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:extension>
									</xs:complexContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="Vendor" minOccurs="0">
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="Code" type="StringLength1to5" minOccurs="0">
											<xs:annotation>
												<xs:documentation xml:lang="en">The 2 character code of the credit card issuer.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="SubType" type="StringLength1to5" minOccurs="0">
											<xs:annotation>
												<xs:documentation xml:lang="en">To identify a subtype of credit cards</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Validity" minOccurs="0">
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="startDate" type="iata_MMYYDate" minOccurs="0">
											<xs:annotation>
												<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="EndDate" type="iata_MMYYDate" minOccurs="0">
											<xs:annotation>
												<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Invoice">
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="Reference" type="StringLength1to71" minOccurs="0"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="LoyaltyRedemption">
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="CertificateNumber" type="iata_StringLength1to32" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The loyalty redemption certificate number.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="MemberNumber" type="iata_StringLength1to32" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The member loyalty number.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ProgramName" type="iata_StringLength1to64" minOccurs="0">
								<xs:annotation>
									<xs:documentation xml:lang="en">This identifies the loyalty program.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="PromotionCode" type="iata_StringLength1to32" minOccurs="0">
								<xs:annotation>
									<xs:documentation xml:lang="en">Promotion code is the identifier used by the host to link directly with a specific named advertising campaign. By including the required code, the client is able to gain access to special offers which may have been created for a specifically targeted group via a CRM system or for a wider advertising campaign using Television or press adverts.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="PromotionVendorCode" type="iata_ListOfStringLength1to8" minOccurs="0">
								<xs:annotation>
									<xs:documentation xml:lang="en">List of the vendor codes associated with a promotion.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Cash">
					<xs:complexType mixed="true"/>
				</xs:element>
				<xs:element name="Miscellaneous">
					<xs:annotation>
						<xs:documentation>Fops that not processed by Amadeus and that are mainly used for reporting purposes.</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="Description" type="StringLength0to250">
								<xs:annotation>
									<xs:documentation>Text to be reported</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:element name="InstalmentPlan" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Number" type="iata_NumericStringLength1to4" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Number of instalments</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="InterestRate" type="iata_NumericStringLength1to8" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Interests in % of the instalment</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Supplier" type="StringLength0to100" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Supplier of the instalment</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Instalment" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="MiscValue" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="FareType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Amount" type="xs:integer" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Order" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Value : 1 to represent the first instalment (if it has a different amount).</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Value" minOccurs="0" maxOccurs="2">
				<xs:annotation>
					<xs:documentation>Monetary Amount, in a currency</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="MiscValue" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="FareType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Amount" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PointsType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>describes the types of point more precisely : Miles (name of Miles program for example), Points (point program)...</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Type" type="StringLength0to10" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Can be Monetary, for an amount in physical currency, or Points, for an amount in Miles etc.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- *************************************************** -->
	<!-- *************************************************** -->
	<!-- *************************************************** -->
	<!-- *************************************************** -->
	<xs:complexType name="TrackType" mixed="true"/>
	<xs:complexType name="FOPStatusType" mixed="true"/>
	<xs:complexType name="FareRefund" mixed="true">
		<xs:sequence>
			<xs:element name="Amount" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FareUsed" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Amount" type="Money" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResultingAmount" mixed="true">
		<xs:sequence>
			<xs:element name="Amount" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FareRefund" type="FareRefund" minOccurs="0"/>
			<xs:element name="Tax" type="att_TaxType" minOccurs="0" maxOccurs="199"/>
			<xs:element name="Penalty" type="FeeType" minOccurs="0" maxOccurs="99"/>
			<xs:element name="Fee" type="FeeType" minOccurs="0" maxOccurs="99"/>
			<xs:element name="Commission" type="CommissionType" minOccurs="0" maxOccurs="99"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RefundedAmount" mixed="true">
		<xs:sequence>
			<xs:element name="RefundedItemId" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the ID of  corresponding RefundedItem</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResultingAmount" type="ResultingAmount"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TotalAmounts" mixed="true">
		<xs:sequence>
			<xs:element name="Refundable" type="ResultingAmount" minOccurs="0"/>
			<xs:element name="NonRefundable" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Amount" type="Money" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RefundedAmounts" mixed="true">
		<xs:sequence>
			<xs:element name="RefundedAmount" type="RefundedAmount" maxOccurs="99"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FormOfPayments" mixed="true">
		<xs:sequence>
			<xs:element name="FormOfPayment" type="FormOfPayment" maxOccurs="99"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FormOfPayment" mixed="true">
		<xs:sequence>
			<xs:element name="ID" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the ID enable identifiying the fop at update time. In case a new fop is to be added by the agent, the ID should not be filled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="AlphaNumericString_Length1To10" minOccurs="0">
				<xs:annotation>
					<xs:documentation>FOP type</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ApprovalCode" type="AlphaNumericString_Length1To19" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The approval code returned as part of an authorization process</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContractId" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to link the FOP to a refunded Item</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpiryDate" type="DateOrDateTimeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For FOP with expiry date like credit cards</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CustomerAccount" type="AlphaNumericString_Length1To35" minOccurs="0"/>
			<xs:element name="MembershipStatus" type="AlphaNumericString_Length1To5" minOccurs="0"/>
			<xs:element name="FreeFlow" type="AlphaNumericString_Length1To199" minOccurs="0">
				<xs:annotation>
					<xs:documentation>FOP desciription</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MonetaryInformations" minOccurs="0">
				<xs:annotation>
					<xs:documentation>AIR: breakdown of amounts frelated to a form of payment, like reusable and refundable amounts for example.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="MonetaryInformation" type="MonetaryInformationType" maxOccurs="199">
							<xs:annotation>
								<xs:documentation>AIR:To convey monetary amounts, rates and percentages.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AdditionalData" type="AdditionalData" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AdditionalData" mixed="true">
		<xs:sequence>
			<xs:element name="Data" maxOccurs="99">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Key" type="xs:string">
							<xs:annotation>
								<xs:documentation>Name of Data (ExternalRef, Status ...)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Value" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Value of Data</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Type" type="CodePatternType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Type of Data(Storage, To be sent to Client ...)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Qualifiers" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Qualifier" maxOccurs="99">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="Tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the entity in the PNR.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="RPH" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>ID of the entity in the  context.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="PNR_ElementType" type="CodePatternType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Type of the element in PNR: can be passenger, SSR... to be used in case tattois is not unique in the PNR</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CompanyIdentificationType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Code or name to identify a company and any associated companies.</xs:documentation>
		</xs:annotation>
		<xs:sequence/>
	</xs:complexType>
	<xs:complexType name="OriginAndDestinationDetailsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">To convey the origin and destination of a journey.</xs:documentation>
		</xs:annotation>
		<xs:sequence/>
	</xs:complexType>
	<xs:complexType name="ReferenceInformationType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">To provide specific reference identification for a traveller.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ReferenceDetails" type="ReferencingDetailsType">
				<xs:annotation>
					<xs:documentation xml:lang="en">reference details</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReferencingDetailsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">To provide reference identification.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Type" type="AlphaNumericString_Length1To3">
				<xs:annotation>
					<xs:documentation xml:lang="en">type</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Value" type="AlphaNumericString_Length1To14" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">value</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RefundedItineraryType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">To convey the refunded itinerary</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Tattoo" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Tattoo of the entity in the PNR.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RPH" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>ID of the entity in the  context.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OperatingCompany" type="AlphaNumericString_Length1To35" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to convey a provider code. (For air business, The airline code can be replaced by -- (in case of ARNK segment) ).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Origin" type="AlphaNumericString_Length1To10" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This data element will convey the origin city/airport code corresponding to the coupon being refunded.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Destination" type="AlphaNumericString_Length1To10" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This data element will convey the destination city/airport code corresponding to the coupon being refunded.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ValidityDates" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="StartDate" type="DateOrDateTimeType" minOccurs="0"/>
						<xs:element name="EndDate" type="DateOrDateTimeType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PassengerType" mixed="true">
		<xs:sequence minOccurs="0">
			<xs:element name="Tattoo" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Tattoo of the entity in the PNR.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RPH" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>ID of the entity in the  context.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NamePrefix" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FirstName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Given name, Names</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Family name, Surname.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FullName" type="AlphaNumericString_Length1To70" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Passenger's full name</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StatusDetailsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">To specify a status, the action to be taken, and an additional qualification of the status.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Indicator" type="AlphaNumericString_Length3To3">
				<xs:annotation>
					<xs:documentation xml:lang="en">Status</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Type" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">To identify a status and related information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StatusDetails" type="StatusDetailsType" maxOccurs="99">
				<xs:annotation>
					<xs:documentation xml:lang="en">Status Details</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StockRangeInformationType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Conveys ticket stock range information. A stock range is identified by a stock type, a range number and an allocation status.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="StockTypeCode" type="AlphaNumericString_Length1To2" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The short 1 or 2-letter code corresponding to the stock type, e.g. "A" for OPTAT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StockProviderCode" type="AlphaNumericString_Length1To3" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The stock provider (usually an airline). It is only specified when the stock is not neutral.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StructuredTelephoneNumberType" mixed="true">
		<xs:sequence>
			<xs:element name="InternationalDialCode" type="AlphaNumericString_Length1To25" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">International dial code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LocalPrefixCode" type="AlphaNumericString_Length1To25" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Local prefix code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AreaCode" type="AlphaNumericString_Length1To25" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Area code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TelephoneNumber" type="AlphaNumericString_Length1To25">
				<xs:annotation>
					<xs:documentation xml:lang="en">Telephone or fax number</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TransportIdentifierType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">To specify transport service(s) or to specify transport service(s) which is/are to be updated or cancelled.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CompanyIdentification" type="CompanyIdentificationType">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to convey the airline code</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FreeTextDetailsType" mixed="true">
		<xs:sequence>
			<xs:element name="TextSubjectQualifier" type="AlphaNumericString_Length1To3">
				<xs:annotation>
					<xs:documentation xml:lang="en">text Subject Qualifier</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InformationType" type="AlphaNumericString_Length1To4">
				<xs:annotation>
					<xs:documentation xml:lang="en">Type of information</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Source" type="AlphaNumericString_Length1To3">
				<xs:annotation>
					<xs:documentation xml:lang="en">source</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Encoding" type="AlphaNumericString_Length1To3">
				<xs:annotation>
					<xs:documentation xml:lang="en">encoding</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FreeTextInformationType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">This segment is used to convey the free text</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FreeTextDetails" type="FreeTextDetailsType">
				<xs:annotation>
					<xs:documentation xml:lang="en">Details of the error</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FreeText" type="AlphaNumericString_Length1To199">
				<xs:annotation>
					<xs:documentation xml:lang="en">Error text</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResponseAnalysisDetailsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">To specify the type of query and the processing status associated with this response.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="responseType" type="AlphaString_Length1To1"/>
			<xs:element name="StatusCode" type="AlphaString_Length1To1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NumericInteger_Length1To15" mixed="true"/>
	<xs:complexType name="NumericStringLength1to35" mixed="true"/>
	<xs:complexType name="StructuredDateTimeType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Store date and time in a structured way</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="StructuredDateType">
				<xs:sequence>
					<xs:element name="Time" type="xs:time" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="StructuredDateType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Store date in a structured way</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Year" type="Year_YYYY">
				<xs:annotation>
					<xs:documentation xml:lang="en">Year number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Month" type="Month_mM">
				<xs:annotation>
					<xs:documentation xml:lang="en">Month number in the year ( begins to 1 )</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Day" type="Day_nN">
				<xs:annotation>
					<xs:documentation xml:lang="en">Day number in the month ( begins to 1 )</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Year_YYYY" mixed="true"/>
	<xs:complexType name="Month_mM" mixed="true"/>
	<xs:complexType name="Day_nN" mixed="true"/>
	<xs:complexType name="PassengerDocument" mixed="true">
		<xs:complexContent>
			<xs:extension base="DocumentType">
				<xs:sequence minOccurs="0">
					<xs:element name="Passenger" minOccurs="0">
						<xs:complexType mixed="true">
							<xs:sequence minOccurs="0">
								<xs:element name="Tattoo" type="xs:nonNegativeInteger" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Tattoo of the entity in the PNR.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="RPH" type="xs:nonNegativeInteger" minOccurs="0">
									<xs:annotation>
										<xs:documentation>ID of the entity in the  context.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="NamePrefix" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="FirstName" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Given name, Names</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="LastName" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Family name, Surname.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="att_TaxType" mixed="true">
		<xs:complexContent>
			<xs:extension base="TaxType">
				<xs:sequence>
					<xs:element name="Category" type="CodePatternType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>To convey Tax category</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CountryCode" type="AlphaNumericString_Length1To10" minOccurs="0"/>
					<xs:element name="ISO_Code" type="AlphaNumericString_Length1To5" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Tax ISO code</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NatureCode" type="AlphaNumericString_Length1To5" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Tax Nature Code</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AssociatedPFC_Tax" minOccurs="0" maxOccurs="99">
						<xs:complexType mixed="true">
							<xs:complexContent>
								<xs:extension base="TaxType">
									<xs:sequence>
										<xs:element name="Category" type="CodePatternType" minOccurs="0">
											<xs:annotation>
												<xs:documentation>To convey Tax category</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="CountryCode" type="CodePatternType" minOccurs="0"/>
										<xs:element name="ISO_Code" type="AlphaNumericString_Length1To5" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tax ISO code</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="NatureCode" type="AlphaNumericString_Length1To5" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tax Nature Code</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DocumentAndCouponInformationType" mixed="true">
		<xs:sequence>
			<xs:element name="DocumentNumber">
				<xs:annotation>
					<xs:documentation>The ticket number of the refundable documents, inclusive of airline and check digit.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Number" type="AlphaNumericString_Length1To14">
							<xs:annotation>
								<xs:documentation>Ticket number to refund</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Type" type="AlphaNumericString_Length1To3" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Document/message name, coded</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CouponGroup" minOccurs="0" maxOccurs="4">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CouponInformationDetails" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">AIR: Coupons information details. Return only coupon avalaible for refund Up to 4 coupons</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="CouponNumber" type="AlphaNumericString_Length1">
										<xs:annotation>
											<xs:documentation xml:lang="en">Coupon number</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CouponStatus" type="AlphaNumericString_Length1To3">
										<xs:annotation>
											<xs:documentation xml:lang="en">Coupon status</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="SettlementAuthorization" type="AlphaNumericString_Length1To35" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Settlement Authorisation Code</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="BoardingPriority" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">AIR: Use to update boarding priority for Staff.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="PriorityDetails" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Priority details</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Description" type="AlphaNumericString_Length1To35" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">Boarding priority</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="ActionIdentification" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">AIR: Used for Staff update flag.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="ActionRequestCode" type="AlphaNumericString_Length1To3">
										<xs:annotation>
											<xs:documentation xml:lang="en">provides type of required action, coded.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="ReferenceDetails" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">AIR: Used for staff Validation certificate</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="ReferenceDetail" maxOccurs="6">
										<xs:annotation>
											<xs:documentation xml:lang="en">REFERENCING DETAILS</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Type" type="AlphaNumericString_Length1To3">
													<xs:annotation>
														<xs:documentation xml:lang="en">Type of data reference</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="Value" type="AlphaNumericString_Length1To35">
													<xs:annotation>
														<xs:documentation xml:lang="en">Value of data reference</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Price" mixed="true">
		<xs:sequence>
			<xs:element name="AmountBeforeTax" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The total amount not including any associated tax  (e.g., sales tax, VAT, GST or any associated tax).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AmountAfterTax" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The total amount including all associated taxes  (e.g., sales tax, VAT, GST or any associated tax).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ContactAddressType" mixed="true">
		<xs:complexContent>
			<xs:extension base="AddressType">
				<xs:sequence>
					<xs:element name="ContactName" type="AlphaNumericString_Length1To70" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Contact Name</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PostOfficeBox" type="AlphaNumericString_Length1To50" minOccurs="0">
						<xs:annotation>
							<xs:documentation>P.O. Box</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CompanyName" type="AlphaNumericString_Length1To50" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="att_PenaltyType" mixed="true">
		<xs:complexContent>
			<xs:extension base="FeeType">
				<xs:sequence>
					<xs:element name="PenaltyType" type="CodePatternType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Penalty Type, possible values: CP, MCP...</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PercentOrAmount" type="CodePatternType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Two possible value:"P" if Penalty is entered as a percent, "A" if penalty is entred directly as an amount</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="RefundDetailsType" mixed="true">
		<xs:sequence>
			<xs:element name="RuleID" minOccurs="0">
				<xs:annotation>
					<xs:documentation>AIR: Convey the rule Id, client must used to display the refund record</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ReferenceDetails">
							<xs:annotation>
								<xs:documentation xml:lang="en">REFERENCING DETAILS The 2 instances will be used for: - the refund number (code REF) - the data source (code DIS)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="Type" type="AlphaNumericString_Length1To3">
										<xs:annotation>
											<xs:documentation xml:lang="en">Type of data reference</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Value" type="AlphaNumericString_Length1To35">
										<xs:annotation>
											<xs:documentation xml:lang="en">Value of data reference</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Contracts" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Refers to ellements being refunded. Exp: Ticket, EMD...</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Contract" maxOccurs="99">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="ID" type="xs:nonNegativeInteger"/>
									<xs:element name="Tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates the PNR Tattoo of refunded item</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Status" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Ticketing status - NotTicketed, PendingTicketing, Ticketed, Refunded</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="AgencyNumber" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Agency Ticket Number. Incremental number per agency for each ticket</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="RCI_Reference" minOccurs="0">
										<xs:annotation>
											<xs:documentation>RCI Reference on a ticketing item</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Token" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>temporary transaction reference in the ticketing system of the provider</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="NumberOfCoupons" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>quantity of physical coupons</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="IssueDate" type="DateOrDateTimeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Date of issuance of the ticket</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ExchangeCode" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Code needed to perform an exchange on the ticket</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Type" type="OTA_CodeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>eTicket or Paper</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="URLlink" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>URL where the ticket can be retrieved</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="JourneyType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tell if the ticket is Domestic, International etc. from a carrier perspective.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ProductType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Indicates the type of product sold, from a carrier perspective.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="RecordLocator" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Indicates Amadeus PNR number</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ReceiptNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates refund receipt number</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DateTimeProvider" type="DateOrDateTimeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates provider's refund date/date and time</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Segments" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Segment" type="RefundedItineraryType" maxOccurs="99"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Passengers" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Passenger" type="PassengerType" maxOccurs="9"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Seats" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Seat" maxOccurs="99">
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="Tattoo" type="xs:nonNegativeInteger" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Tattoo of the entity in the PNR.</xs:documentation>
																</xs:annotation>
															</xs:element>
															<xs:element name="RPH" type="xs:nonNegativeInteger" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>ID of the entity in the  context.</xs:documentation>
																</xs:annotation>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="AncillaryServices" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="AncillaryService" maxOccurs="99">
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="Tattoo" type="xs:nonNegativeInteger" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Tattoo of the entity in the PNR.</xs:documentation>
																</xs:annotation>
															</xs:element>
															<xs:element name="RPH" type="xs:nonNegativeInteger" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>ID of the entity in the  context.</xs:documentation>
																</xs:annotation>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Taxes" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Tax" type="att_TaxType" maxOccurs="199"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Fees" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Fee" type="att_FeeType" maxOccurs="99"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Penalties" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Penalty" type="att_PenaltyType" maxOccurs="99"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Commissions" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Commission" type="CommissionType" maxOccurs="99"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="MonetaryInformations" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="MonetaryInformation" type="MonetaryInformationType" maxOccurs="199">
													<xs:annotation>
														<xs:documentation>To convey monetary amounts, rates and percentages.</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="PricingDetails" minOccurs="0">
										<xs:annotation>
											<xs:documentation>AIR: Pricing details</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="PriceTicketDetails" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">Pricing details indicators</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="Indicator" type="AlphaNumericString_Length1To3" minOccurs="0">
																<xs:annotation>
																	<xs:documentation xml:lang="en">Indicators for : - Domestic/Internationnal itinerary statistical code This information may be not present in case of MCO refund (Miscellaneous Charges Order) as the notion of itinerary is irrelevant in that case.</xs:documentation>
																</xs:annotation>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
												<xs:element name="PriceTariffType" type="AlphaNumericString_Length1To2" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">Indication of NR when the ticket to refund has been issued in Net Remit negociated fare.</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="TourCode" type="AlphaNumericString_Length1To15" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">AIR: Tour information</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DeliveryMethod" minOccurs="0">
										<xs:annotation>
											<xs:documentation>DeliveryMode of the ticket</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="DistributionType" type="OTA_CodeType">
													<xs:annotation>
														<xs:documentation>code of the type of distribution.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="RetrievalType" type="OTA_CodeType" minOccurs="0">
													<xs:annotation>
														<xs:documentation>code of the retrieve type.</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="DocumentAndCouponInformation" type="DocumentAndCouponInformationType" minOccurs="0" maxOccurs="7"/>
									<xs:element name="TravellerPriorityInfo" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">AIR: Use for Staff: Staff number, Date of Joining and Cost Center.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Company" type="AlphaNumericString_Length1To35" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">Company specific identification (eg. cost center, etc)</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="DateOfJoining" type="DateOrDateTimeType" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">Date of joining Ex: 2013-05-11</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="TravellerReference" type="AlphaNumericString_Length1To10" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">Staff number</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="TicketReferenceATU" minOccurs="0">
										<xs:annotation>
											<xs:documentation>For ATU use-cases, this structure references the old tickets exchanged via ATU</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="TicketNumber" maxOccurs="99">
													<xs:annotation>
														<xs:documentation>The ticket number of the refundable documents, inclusive of airline and check digit.</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="Number" type="AlphaNumericString_Length1To14">
																<xs:annotation>
																	<xs:documentation>Ticket number</xs:documentation>
																</xs:annotation>
															</xs:element>
															<xs:element name="Type" type="AlphaNumericString_Length1To3" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Document/message name, coded</xs:documentation>
																</xs:annotation>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="FirstAndLastSegmentDates" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">AIR: Conveys the date of the first and the last segment of the original coupons</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="BeginDateTime" type="StructuredDateType">
													<xs:annotation>
														<xs:documentation xml:lang="en">Convey the begin date/time of a period.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="EndDateTime" type="StructuredDateType">
													<xs:annotation>
														<xs:documentation xml:lang="en">Convey the end date/time of a period.</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="OriginAndDestination" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">AIR: The routing field identifies what routing the document was to be refunded. For manual refund routing information is not available and this will be up to the agent to enter routing in order to be able to calculate VAT. In cases where a manual document needs to be refunded the routing indicator is mandatory. (For full and partial refund this element can not be entered)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Origin" type="AlphaNumericString_Length1To25" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">City code or country code of the start of the original document. Example: DE or MUC</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="Destination" type="AlphaNumericString_Length1To25" minOccurs="0">
													<xs:annotation>
														<xs:documentation xml:lang="en">City code or country code of the end of the original document. Example: DE or MUC If the start of the original document is a city code, then the end must be specified as a city code also. If the start of the original document is a country code, then the end must be specified as a country code also.</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="RefundedRoute" minOccurs="0">
										<xs:annotation>
											<xs:documentation>AIR: List of all stops (stations) of refunded itenerary</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Station" type="AlphaNumericString_Length1To25" maxOccurs="99"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="EventDetails" minOccurs="0">
										<xs:annotation>
											<xs:documentation>AIR: To track updated elements within refund panel</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Code" type="CodePatternType" minOccurs="0"/>
												<xs:element name="DependencyCode" type="CodePatternType" minOccurs="0" maxOccurs="99"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:choice>
										<xs:element name="Refundable">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="Amount" type="Money" minOccurs="0">
														<xs:annotation>
															<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
														<xs:annotation>
															<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="NonRefundable">
											<xs:complexType mixed="true"/>
										</xs:element>
									</xs:choice>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="TotalAmounts" type="TotalAmounts" minOccurs="0"/>
			<xs:element name="DateTime" minOccurs="0" maxOccurs="9">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="BusinessSemantic" type="CodeType">
							<xs:annotation>
								<xs:documentation xml:lang="en">This data element can be used to provide the semantic of the information provided. Examples : - Impacted period - Departure date - Estimated arrival date and time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StructuredDateTime" type="StructuredDateTimeType">
							<xs:annotation>
								<xs:documentation xml:lang="en">Convey date and/or time.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="FormOfPayments" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="FormOfPayment" type="FormOfPayment" maxOccurs="99"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PassengersDocument" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Legal documents identifying the passengers</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="PassengerDocument" type="PassengerDocument" maxOccurs="9"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ReasonCode" type="CodeType" minOccurs="0"/>
			<xs:element name="WaiverCode" type="CodeType" minOccurs="0"/>
			<xs:element name="RefundRemarks" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="RefundRemark" type="xs:string" maxOccurs="99"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ReportingOffice" type="ReportingOfficeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">AIR: Reporting Office Identification</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransactionCode" type="AlphaNumericString_Length1To4" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">AIR: reporting Transaction Details</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReferenceDetails" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">AIR: Refund references</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="ReferenceDetail" maxOccurs="4">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="Type" type="AlphaNumericString_Length1To3">
										<xs:annotation>
											<xs:documentation xml:lang="en">Type of data reference</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Value" type="AlphaNumericString_Length1To35">
										<xs:annotation>
											<xs:documentation xml:lang="en">Value of data reference</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="LoyaltyAccount" minOccurs="0">
				<xs:annotation>
					<xs:documentation>AIR: Loyalty account when loyalty FOP is used. Note that the account belongs the the buyer which is not necessarily the passenger(s)</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Number" minOccurs="0">
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Carrier" type="AlphaNumericString_Length1To35" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Carrier where the FQTV is registered.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="StructuredAddress" type="ContactAddressType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>AIR: Used to convey any kind of structured address. For the time being, only billing address (AB) is supported.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyOverride" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For update use-cases, new currency should be filled in this structure</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ConversionRate" type="AlphaNumericString_Length1To10" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Currency conversion rate</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AdditionalData" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Conveys different information carried as free-text</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="AdditionalData" type="AdditionalData" maxOccurs="99"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RefundDetailsLightType" mixed="true">
		<xs:sequence>
			<xs:element name="Contracts" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Refers to ellements being refunded. Exp: Ticket, EMD...</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Contract" maxOccurs="99">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="ID" type="xs:nonNegativeInteger"/>
									<xs:element name="Tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates the PNR Tattoo of refunded item</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Status" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Ticketing status - NotTicketed, PendingTicketing, Ticketed, Refunded</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="AgencyNumber" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Agency Ticket Number. Incremental number per agency for each ticket</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="RCI_Reference" minOccurs="0">
										<xs:annotation>
											<xs:documentation>RCI Reference on a ticketing item</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Token" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>temporary transaction reference in the ticketing system of the provider</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="NumberOfCoupons" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>quantity of physical coupons</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="IssueDate" type="DateOrDateTimeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Date of issuance of the ticket</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ExchangeCode" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Code needed to perform an exchange on the ticket</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Type" type="OTA_CodeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>eTicket or Paper</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="URLlink" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>URL where the ticket can be retrieved</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="JourneyType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tell if the ticket is Domestic, International etc. from a carrier perspective.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ProductType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Indicates the type of product sold, from a carrier perspective.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="RecordLocator" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Indicates Amadeus PNR number</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ReceiptNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates refund receipt number</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DateTimeProvider" type="DateOrDateTimeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates provider's refund date/date and time</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Segments" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Segment" type="RefundedItineraryType" maxOccurs="99"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Passengers" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Passenger" type="PassengerType" maxOccurs="9"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Seats" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Seat" maxOccurs="99">
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="Tattoo" type="xs:nonNegativeInteger" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Tattoo of the entity in the PNR.</xs:documentation>
																</xs:annotation>
															</xs:element>
															<xs:element name="RPH" type="xs:nonNegativeInteger" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>ID of the entity in the  context.</xs:documentation>
																</xs:annotation>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="AncillaryServices" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="AncillaryService" maxOccurs="99">
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="Tattoo" type="xs:nonNegativeInteger" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Tattoo of the entity in the PNR.</xs:documentation>
																</xs:annotation>
															</xs:element>
															<xs:element name="RPH" type="xs:nonNegativeInteger" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>ID of the entity in the  context.</xs:documentation>
																</xs:annotation>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Taxes" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Tax" type="att_TaxType" maxOccurs="199"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Fees" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Fee" type="att_FeeType" maxOccurs="99"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Penalties" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Penalty" type="att_PenaltyType" maxOccurs="99"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Commissions" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Commission" type="CommissionType" maxOccurs="99"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="MonetaryInformations" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="MonetaryInformation" type="MonetaryInformationType" maxOccurs="199">
													<xs:annotation>
														<xs:documentation>To convey monetary amounts, rates and percentages.</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="DeliveryMethod" minOccurs="0">
										<xs:annotation>
											<xs:documentation>DeliveryMode of the ticket</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="DistributionType" type="OTA_CodeType">
													<xs:annotation>
														<xs:documentation>code of the type of distribution.</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="RetrievalType" type="OTA_CodeType" minOccurs="0">
													<xs:annotation>
														<xs:documentation>code of the retrieve type.</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="DocumentAndCouponInformation" type="DocumentAndCouponInformationType" minOccurs="0" maxOccurs="7">
										<xs:annotation>
											<xs:documentation>The ticket number of the refundable documents, inclusive of airline and check digit.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TicketReferenceATU" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="TicketNumber" maxOccurs="99">
													<xs:annotation>
														<xs:documentation>The ticket number of the refundable documents, inclusive of airline and check digit.</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="Number" type="AlphaNumericString_Length1To14">
																<xs:annotation>
																	<xs:documentation>Ticket number to refund</xs:documentation>
																</xs:annotation>
															</xs:element>
															<xs:element name="Type" type="AlphaNumericString_Length1To3" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Document/message name, coded</xs:documentation>
																</xs:annotation>
															</xs:element>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:choice minOccurs="0">
										<xs:element name="Refundable">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="Amount" type="Money" minOccurs="0">
														<xs:annotation>
															<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
														<xs:annotation>
															<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="NonRefundable">
											<xs:complexType mixed="true"/>
										</xs:element>
									</xs:choice>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="TotalAmounts" type="TotalAmounts" minOccurs="0"/>
			<xs:element name="DateTime" minOccurs="0" maxOccurs="9">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="BusinessSemantic" type="CodeType">
							<xs:annotation>
								<xs:documentation xml:lang="en">This data element can be used to provide the semantic of the information provided. Examples : - Impacted period - Departure date - Estimated arrival date and time</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StructuredDateTime" type="StructuredDateTimeType">
							<xs:annotation>
								<xs:documentation xml:lang="en">Convey date and/or time.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="FormOfPayments" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="FormOfPayment" type="FormOfPayment" maxOccurs="99"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PassengersDocument" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Legal documents identifying the passengers</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="PassengerDocument" type="PassengerDocument" maxOccurs="9"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GlobalRefundReceipt" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates global refund receipt number</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReasonCode" type="CodeType" minOccurs="0"/>
			<xs:element name="RefundRemarks" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="RefundRemark" type="xs:string" maxOccurs="99"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AdditionalData" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="AdditionalData" type="AdditionalData" maxOccurs="99"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="att_FeeType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Used for non-tax fees and charges (e.g. service charges) .</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TaxInclusive" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates whether taxes are included when figuring the fees.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Category" type="AlphaNumericString_Length1To10" minOccurs="0">
				<xs:annotation>
					<xs:documentation>To convey Fee category</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SubCategory" type="AlphaNumericString_Length1To10" minOccurs="0">
				<xs:annotation>
					<xs:documentation>For OB_fees a sub category is needed</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="AmountDeterminationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Code" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Code identifying the fee (e.g.,agency fee, municipality fee). Refer to OpenTravel Code List Fee Tax Type (FTT).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Percent" type="Percentage" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Fee percentage; if zero, assume use of the Amount attribute (Amount or Percent must be a zero value).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EffectiveDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpireDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpireDateExclusiveIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15  the last date of the period is Oct 14).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MandatoryIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, indicates the fee is mandatory. When false, the fee is not mandatory.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RPH" type="RPH_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">An index code to identify an instance in a collection of like items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChargeUnit" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This is the unit for which the charge applies (e.g. room, person, seat). Refer to OpenTravel Code List Charge Type (CHG).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChargeFrequency" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This is the timeframe used to apply the charge during the course of the reservation (e.g. Daily, Weekly, Stay). Refer to OpenTravel Code List Charge Type (CHG).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChargeUnitExempt" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Number of units permitted before charges are applied (e.g., more than 4 persons).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChargeFrequencyExempt" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">ChargeFrequency exemptions before charges are applied (e.g. after 2 nights).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxChargeUnitApplies" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Maximum number of Units for which the charge will be applied (e.g., waive charges above 10 rooms).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxChargeFrequencyApplies" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Maximum number of times the charge will be applied (e.g. waive charges above 30 nights).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TaxableIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, indicates that the fee is subject to tax.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Taxes" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used for taxes on the associated fee.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Taxe" type="att_TaxType" maxOccurs="199"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Description" type="ParagraphType" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation xml:lang="en">Text description of the fees in a given language.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AlphaNumericString_Length1To2" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1To3" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1To25" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1To9" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1To4" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1To70" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length3To3" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1To14" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1To35" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1To99999" mixed="true"/>
	<xs:complexType name="AlphaString_Length1To1" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1To5" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1To15" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1To199" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1To10" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1To19" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1To50" mixed="true"/>
	<xs:complexType name="AlphaNumericString_Length1" mixed="true"/>
	<xs:complexType name="TypeOfContract" mixed="true"/>
	<xs:complexType name="MediaOfContract" mixed="true"/>
	<xs:complexType name="NatureOfContract" mixed="true"/>
	<xs:complexType name="TimeFormat" mixed="true"/>
	<xs:complexType name="CouponType" mixed="true"/>
	<xs:complexType name="DistributionType" mixed="true"/>
	<xs:complexType name="InvoiceFormattingType" mixed="true"/>
	<xs:complexType name="InvoiceFormattingElement" mixed="true"/>
	<xs:complexType name="EmailAddress" mixed="true"/>
	<xs:complexType name="StatusCode" mixed="true"/>
	<xs:complexType name="PaymentForm" mixed="true">
		<xs:complexContent>
			<xs:extension base="PaymentFormType">
				<xs:sequence>
					<xs:element name="ApprovalCode" type="AlphaNumericStringLength1to19" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The approval code returned as part of an authorization process</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Price" minOccurs="0">
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="Amount" type="Money" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
									<xs:annotation>
										<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ReportingOfficeType" mixed="true">
		<xs:sequence>
			<xs:element name="AgentCode" type="NumericInteger_Length1To15" minOccurs="0"/>
			<xs:element name="OfficeID" type="AlphaNumericString_Length1To9" minOccurs="0"/>
			<xs:element name="Originator" type="AlphaNumericString_Length1To35" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Agent sign Authority code of the requester If Sign Id : (Area Code)+(Numeric Sine)+(Agent Initials)+(Duty Code) ex : B0001XVSU).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MonetaryInformationType" mixed="true">
		<xs:annotation>
			<xs:documentation>To convey monetary amounts, rates and percentages.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Amount" type="Money" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Qualifier" type="AlphaNumericString_Length1To3">
				<xs:annotation>
					<xs:documentation>To identify the amount</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AmountDescription" type="AlphaNumericString_Length1To35" minOccurs="0">
				<xs:annotation>
					<xs:documentation>In somne cases, no amount is returned, but just a string describing the MonetaryInformation (exp: IT for ITBT tickets)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IssuanceChannelType" mixed="true"/>
	<xs:complexType name="ContractType" mixed="true">
		<xs:sequence>
			<xs:element name="PassengerTypeCode" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Passenger type linked to this element:
					- PAX
					- INF</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ownerType" type="AlphaNumericStringLength1to19orString0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The type of contract owner:
					- FSC
					- Rail
					- etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="owner" type="AlphaNumericStringLength1to10orString0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The contract owner:
					- Lufthansa
					- Trenitalia
					- etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="contractType" type="TypeOfContract" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The type of contract established:
					- Ticket
					- EMD
					- etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="media" type="MediaOfContract" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The media on which the contract was established:
					- Electronic
					- Paper
					- etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="nature" type="NatureOfContract" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The contract nature of the contract established:
					- Domestic
					- International
					- etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The specific status of the contract
					E.g. : issued, cancelled</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="elementType" type="ama_AlphaNumericStringLength1to10" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The role of the contract:
					E.g.: current, original</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Record" minOccurs="0" maxOccurs="10">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="contractNumber" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The several contract numbers allocated for the contract:
								some Contract Owner Type may have several Contract Numbers for a single contract, e.g. Rail has a first number allocated by 1A and another one by the external contract owner.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ticketingSystem" type="AlphaNumericStringLength1to19orString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates which ticketing system has provided the contract number.
								- External
								- 1A
								- etc.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="validity" type="xs:date" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The nature of the contract number:
								- Temporary
								- Permanent</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="issuanceChannel" type="IssuanceChannelType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The channel used to issue the contract : 1A, External</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="issueDate" type="DateOrDateTimeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates issuance date/date and time of the  contract</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RecordLocators" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The group of all record locators associated to this contract</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="RecordLocator" minOccurs="0" maxOccurs="99">
										<xs:annotation>
											<xs:documentation>Record locator of the booking</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:complexContent>
												<xs:extension base="AlphaNumericString_Length1To25">
													<xs:sequence>
														<xs:element name="originSystem" type="AlphaNumericStringLength1to8orString0" minOccurs="0">
															<xs:annotation>
																<xs:documentation>The system that holds the record locator of the booking:
																Amadeus
																Provider
																Agent etc.</xs:documentation>
															</xs:annotation>
														</xs:element>
													</xs:sequence>
												</xs:extension>
											</xs:complexContent>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="Office" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="ID" type="StringLength0to32" minOccurs="0">
										<xs:annotation>
											<xs:documentation>OfficeId for Amadeus or external Id in case of TTY POS</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="NumericID" minOccurs="0">
										<xs:annotation>
											<xs:documentation>IATA code</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="SystemCode" minOccurs="0">
										<xs:annotation>
											<xs:documentation>IATA airline code or GDS code</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="City" type="StringLength3orString0" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Fare" minOccurs="0" maxOccurs="9">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Amount" type="xs:integer" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MiscValue" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="FareType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Delivery" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="method" type="AlphaNumericStringLength1to3orString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The way the client will receive the info.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="url" type="xs:anyURI" minOccurs="0">
							<xs:annotation>
								<xs:documentation>URL to print the ticket</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="retrievalType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The information needed to retrieve the ticket: ID card, credit card, etc...</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Warning" type="WarningType" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:documentation>Contains the details of a warning associated to the succesfully established contracts of a contract owner or for all contracts owners in case the ContractOwner attribute is set as empty.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TourType" mixed="true">
		<xs:sequence>
			<xs:element name="Description" type="StringLength1to256orString0" minOccurs="0"/>
			<xs:element name="SubType" type="AlphaStringLength1to2orString0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>IT or BT or NR</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ApprovalCode" type="ama_NumericStringLength1" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Conference approval code n1</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Status" type="AlphaNumericStringLength1to3orString0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status details an3</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Customer" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="PassangerTypeCode" type="AlphaStringLength3orString0" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Validity" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="endDate" type="xs:date" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ServiceProvider" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Code" type="AlphaNumericStringLength1to3orString0" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DiscountType" mixed="true">
		<xs:sequence>
			<xs:element name="Description" type="StringLength1to256orString0" minOccurs="0"/>
			<xs:element name="Discount" minOccurs="0" maxOccurs="3">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Code" type="AlphaNumericStringLength1to6orString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Discount code</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Percentage" type="NumericStringLength1to2orString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Percentage applicable n2</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Index" type="AlphaNumericStringLength1to3orString0" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Index of the actual discount</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Customer" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="PassengerTypeCode" type="AlphaStringLength3orString0" minOccurs="0"/>
									<xs:element name="DateofBirth" type="DateOrDateTimeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Date of birth</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Card" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Type" type="AlphaNumericStringLength1to3orString0" minOccurs="0"/>
												<xs:element name="Number" type="AlphaNumericStringLength1to14orString0" minOccurs="0"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="Validity" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="startDate" type="DateOrDateTimeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Valid after date</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="endDate" type="DateOrDateTimeType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Valid before date</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="ServiceProvider" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="Code" type="AlphaNumericStringLength1to3orString0" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FOP_MethodOfPaymentType" mixed="true">
		<xs:sequence>
			<xs:element name="Code" type="ama_StringLength1to30" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The FOP code, identifying type of FOP for Amadeus</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Card" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Credit or Debit cards</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="HolderName" type="ama_StringLength1to99" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Name of credit card holder.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="HolderEmail" type="ama_StringLength1to99" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Email of credit card holder.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="HolderGivenName" type="ama_StringLength1to99" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Firstname of credit card holder.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="HolderSurname" type="ama_StringLength1to99" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Surname of credit card holder.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SubType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Credit or Debit card</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Process" type="ama_StringLength1to30" minOccurs="0"/>
						<xs:element name="AccountType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates if the card is a corporate Card or a personal card</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TierLevel" type="ama_StringLength1to30" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tier Level of the card, for example Platinium, Gold...</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AddressVerificationSystemValue" type="AVS_Type" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Credit Card holder's address</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="MagneticTrack" minOccurs="0" maxOccurs="4">
							<xs:annotation>
								<xs:documentation>Contains Data of the Magnetic Stripe of the Credit Card</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="__Dummy">
										<xs:sequence>
											<xs:element name="Type" minOccurs="0">
												<xs:complexType mixed="true"/>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="Issuance" type="CardIssuanceInformationType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Information about the issuing bank and country</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PrimaryAccountNumber" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Credit card number embossed on the front of the card.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="AlphaNumericStringLength0to30">
										<xs:sequence>
											<xs:element name="KnoxID" type="ama_AlphaNumericStringLength1to30" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">KnoxID of the Primary Acount Number</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="CVV" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Verification digits printed on the back of the card usually (CardVerificationValue).</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="AlphaNumericStringLength0to10">
										<xs:sequence>
											<xs:element name="KnoxID" type="ama_AlphaNumericStringLength1to30" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">KnoxID of the CVV</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="Validity" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="StartDate" type="iata_MMYYDate" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates the starting date.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="EndDate" type="iata_MMYYDate" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates the ending date.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="Vendor" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Full Name of the credit car vendor</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="StringLength0to30">
										<xs:sequence>
											<xs:element name="Code" type="fop_AlphaNumericStringLength2" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">The 2 character code of the credit card issuer.</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="Program" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Full Name of the credit card subvendor</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="StringLength0to30">
										<xs:sequence>
											<xs:element name="Code" type="ama_StringLength1to30" minOccurs="0">
												<xs:annotation>
													<xs:documentation xml:lang="en">The 2 character code of the credit card issuer.</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Loyalty" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Loyalty accounts, Miles or Points for example</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="SubType" type="AccountSubTypeType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Identify the process subtype</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Process" type="ama_StringLength1to30" minOccurs="0"/>
						<xs:element name="Vendor" type="ama_StringLength1to30" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Identify the brand of the Loyalty provider</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Program" type="ama_StringLength1to30" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used to identify if a Vendor offers different sub-programs/brands.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Identifier" type="ama_StringLength1to99" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The member loyalty number.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AlternativeMethods" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Other methods of payment that are processed by Amadeus</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="SubType" type="ama_StringLength1to30" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Identify the process subtype</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Process" type="ama_StringLength1to30" minOccurs="0"/>
						<xs:element name="Vendor" type="ama_StringLength1to30" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Identify the brand of the AlternativeMethod provider</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Program" type="ama_StringLength1to30" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Used to identify if a Vendor offers different sub-programs/brands.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Identifier" type="ama_StringLength1to99" minOccurs="0">
							<xs:annotation>
								<xs:documentation>This identifier can be, depending of the type of Method, an account ID, a unique reference etc...</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CountryCode" type="fop_AlphaNumericStringLength2" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Country of the owner of the method of payment</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Miscellaneous" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Other methods of payment not processed by Amadeus</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="SubType" type="MiscellaneousSubTypeType" minOccurs="0"/>
						<xs:element name="Process" type="ama_StringLength1to30" minOccurs="0"/>
						<xs:element name="Vendor" type="ama_StringLength1to30" minOccurs="0"/>
						<xs:element name="Program" type="ama_StringLength1to30" minOccurs="0"/>
						<xs:element name="ReportedFreeFlow" type="ama_StringLength1to30" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Account" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Account FOPs are idendified by a reusable account number, like cards and unlike vouchers for example.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="SubType" type="ama_StringLength1to30" minOccurs="0"/>
						<xs:element name="Process" type="ama_StringLength1to30" minOccurs="0"/>
						<xs:element name="Vendor" type="ama_StringLength1to30" minOccurs="0"/>
						<xs:element name="Program" type="ama_StringLength1to30" minOccurs="0"/>
						<xs:element name="Identifier" type="ama_StringLength1to99" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The account identifier</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Security" type="SecurityDetailsType" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PaymentItemType" mixed="true">
		<xs:annotation>
			<xs:documentation>The Payment Item regroups all the financial transaction that have occured for a Method of Payment in a Payment Group</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ReportedFreeFlow" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Free Flow to be reported to the Airline</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Transaction" minOccurs="0" maxOccurs="100">
				<xs:annotation>
					<xs:documentation>A Transaction is one atomic operation. Can be a fraud check OR (exculsive OR) an  author OR ...</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Status" type="fop_FOPStatusType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Identify if the transaction described is considered "Old" or not. Old contains the information that were used in previous transactions in the same booking. They are only informative information</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Date and Time of the transaction"s creation</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PaymentRecordIdentifier" type="ama_AlphaNumericStringLength1to99" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The Identifier given to the transaction by the Amadeus Payment Server</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Merchant" type="ama_StringLength1to99" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Merchant (entity) for which the transaction is performed</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:sequence>
							<xs:annotation>
								<xs:documentation>This represent that a Transaction isexclusively of one type</xs:documentation>
							</xs:annotation>
							<xs:element name="Validation" type="ValidationStatusType" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Represent the validation of the syntax, the acceptance by the merchant of the Method Of Payment and the combinability between MEP</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Authorization" minOccurs="0">
								<xs:annotation>
									<xs:documentation>This element describes the Authorization step, This element also applies to Credit card and IRU processes for example</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="Status">
											<xs:complexType mixed="true">
												<xs:complexContent>
													<xs:extension base="AuthorizationStatusType">
														<xs:sequence>
															<xs:element name="ProviderCategory" type="AuthorizationProviderType">
																<xs:annotation>
																	<xs:documentation>Indicate the source and responsible of the Authorization. Can be 1A if use Amadeus Payment Server for example. Can be External Automated System if an external payment server is used. Can be Manual if it is inputed by an agent from an unprecised source. Can be N/A for a form of payment that does not require a "real" Authorization, like Cash/Cheque/Miscellaneous</xs:documentation>
																</xs:annotation>
															</xs:element>
															<xs:element name="Description" type="xs:string" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Used to store a more detailled status, for example the reason of the error</xs:documentation>
																</xs:annotation>
															</xs:element>
															<xs:element name="Code" type="xs:string" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>The canned message number</xs:documentation>
																</xs:annotation>
															</xs:element>
														</xs:sequence>
													</xs:extension>
												</xs:complexContent>
											</xs:complexType>
										</xs:element>
										<xs:element name="ApprovalCode" minOccurs="0">
											<xs:annotation>
												<xs:documentation>A series of characters assigned by the authorization system to confirm the approval of a credit card sale transaction.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:complexContent>
													<xs:extension base="StringLength0to30">
														<xs:sequence>
															<xs:element name="Source" type="ama_AlphaNumericStringLength1to30" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Can be A if it comes from Amadeus Payment Server, or N if entered manually by an Agent</xs:documentation>
																</xs:annotation>
															</xs:element>
														</xs:sequence>
													</xs:extension>
												</xs:complexContent>
											</xs:complexType>
										</xs:element>
										<xs:element name="CertificateNumber" type="StringLength0to99" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Equivalent of an approval code for an IRU system</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="LinkCode" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The link used to perform the Authorization</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:complexContent>
													<xs:extension base="StringLength0to30">
														<xs:sequence>
															<xs:element name="Name" type="ama_StringLength1to99" minOccurs="0"/>
														</xs:sequence>
													</xs:extension>
												</xs:complexContent>
											</xs:complexType>
										</xs:element>
										<xs:element name="AVSCheckResult" minOccurs="0">
											<xs:complexType mixed="true">
												<xs:complexContent>
													<xs:extension base="CheckResultType">
														<xs:sequence>
															<xs:element name="Description" type="xs:string" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Used to store a more detailled status, for example the reason of the error</xs:documentation>
																</xs:annotation>
															</xs:element>
															<xs:element name="Code" type="xs:string" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>The canned message number</xs:documentation>
																</xs:annotation>
															</xs:element>
														</xs:sequence>
													</xs:extension>
												</xs:complexContent>
											</xs:complexType>
										</xs:element>
										<xs:element name="CvvCheckResult" minOccurs="0">
											<xs:complexType mixed="true">
												<xs:complexContent>
													<xs:extension base="CheckResultType">
														<xs:sequence>
															<xs:element name="Description" type="xs:string" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Used to store a more detailled status, for example the reason of the error</xs:documentation>
																</xs:annotation>
															</xs:element>
															<xs:element name="Code" type="xs:string" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>The canned message number</xs:documentation>
																</xs:annotation>
															</xs:element>
														</xs:sequence>
													</xs:extension>
												</xs:complexContent>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="FraudScreening" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Describes the result of a Fraud Check. Can be OK, KO or Review (pending).</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:complexContent>
										<xs:extension base="FraudStatusType">
											<xs:sequence>
												<xs:element name="Provider" type="ama_StringLength1to99" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Service used to perform the fraud cehck</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="IP_Address" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Service used to perform the fraud cehck</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="TouchPointTrxCode" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Service used to perform the fraud cehck</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:extension>
									</xs:complexContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="Capture" minOccurs="0">
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="Status" type="StringLength0to99">
											<xs:annotation>
												<xs:documentation>Can be "Pending" "Denied" "Processed" "Error"</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Identifier" minOccurs="0">
											<xs:complexType mixed="true">
												<xs:complexContent>
													<xs:extension base="StringLength0to99">
														<xs:sequence>
															<xs:element name="Type" type="ama_StringLength1to30" minOccurs="0"/>
														</xs:sequence>
													</xs:extension>
												</xs:complexContent>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Authentication" minOccurs="0">
								<xs:annotation>
									<xs:documentation>This element describes the Authentication step, which is an optional step before the Authorization.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="Status" minOccurs="0">
											<xs:complexType mixed="true">
												<xs:complexContent>
													<xs:extension base="AuthorizationStatusType">
														<xs:sequence>
															<xs:element name="Description" type="xs:string" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Used to store a more detailled status, for example the reason of the error</xs:documentation>
																</xs:annotation>
															</xs:element>
															<xs:element name="Code" type="xs:string" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>The canned message number</xs:documentation>
																</xs:annotation>
															</xs:element>
														</xs:sequence>
													</xs:extension>
												</xs:complexContent>
											</xs:complexType>
										</xs:element>
										<xs:element name="ThreeDSecure" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Contain information related to 3D secure.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="XID" minOccurs="0">
														<xs:annotation>
															<xs:documentation>ID of the ThreeDSecure transaction</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="PAREQ" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Payer Authentication Request verb</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:complexContent>
																<xs:extension base="__Dummy"/>
															</xs:complexContent>
														</xs:complexType>
													</xs:element>
													<xs:element name="PARES" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Payer Authentication Response verb</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:complexContent>
																<xs:extension base="__Dummy">
																	<xs:sequence>
																		<xs:element name="StatusCode" type="PARESStatusCodeType" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>Result of the Authentication, as codeset. N for Authentication Failed. U Unable to Authenticate. A for attemps of processing performed. Y for Authentication succesful.</xs:documentation>
																			</xs:annotation>
																		</xs:element>
																	</xs:sequence>
																</xs:extension>
															</xs:complexContent>
														</xs:complexType>
													</xs:element>
													<xs:element name="VERES" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Result of the Enrolment, full text</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:complexContent>
																<xs:extension base="__Dummy">
																	<xs:sequence>
																		<xs:element name="StatusCode" type="VERESStatusCodeType" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>N for CardHolder not particpating. U for Unable to process. E for Error message received from directory server. Y for Authentication available</xs:documentation>
																			</xs:annotation>
																		</xs:element>
																	</xs:sequence>
																</xs:extension>
															</xs:complexContent>
														</xs:complexType>
													</xs:element>
													<xs:element name="AuthenticationMerchantName" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Name of the merchant</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="AuthenticationTokenValue" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Authentication value of a Token</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="AuthenticationValueText" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Authentication value</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="CardNumberCollectionCode" type="AlphaLength1" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Indicates the collection method of the card number. This will be newly entered or using previously saved information. This is supported by a enumerated list.</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="DirectoryServerTrxID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>DS (Directory Server) transaction ID</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ElectronicCommerceInd" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>ECI (electronic commerce indicator)</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="PayerAuthenticationExemptionCode" type="AlphaLength2" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Used to identify an exemption to performing payer authentication. An enumeration includes the types of exemption.</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="PayerAuthenticationFailureToCompleteCode" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Used to identify possible pre defined reasons for failure to complete payer authentication.</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="PaymentTrxChannelCode" type="AlphaLength3" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Indicates the payment transaction channel</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ProgramProtocolText" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Program Protocol</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TrxStatusReasonText" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Outcome of authentication coming from the DS</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TrxStatusText" type="xs:string" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation>Outcome of authentication</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:element name="ExternalIdentifier" minOccurs="0" maxOccurs="100">
							<xs:annotation>
								<xs:documentation>Equivalent of a PRI for an external system</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="StringLength0to99">
										<xs:sequence>
											<xs:element name="Provider" type="ama_StringLength1to30" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Provider of the external identifier</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="MerchantReference" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The unique reference of the transaction that will be transmitted accross all parties involved in the transaction, and shared to the end customer.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Value" minOccurs="0" maxOccurs="4">
							<xs:annotation>
								<xs:documentation>Monetary Amount, in a currency or in points. Repetable 4 times:  to indicate a Global value (bulked across mutliple products) versus the value that is used to pay one product; and to indicate a value in points and in currency if directly convertible.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="MiscValue" type="ama_StringLength1to30" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en"> This group is used when price component is returned without an amount, but with an additional data, e.g. exempted  </xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="FareType" type="ama_StringLength1to30" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Defines the price, e.g. for base fare, total...</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Amount" type="xs:integer" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Type" type="ValueCategoryType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Can be an ISO Currency, or a currency related to a loyalty program (e.g. points or miles)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Global" type="xs:boolean" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Used to specify if the value represented in this element applies to a global value (bulked across multiple products) or, if false, is the part that applies to the quotation linked to the paymentGroup only.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="ConversionRate" type="ConversionRateType" minOccurs="0" maxOccurs="9">
							<xs:annotation>
								<xs:documentation>used to store conversion rates that are given by the client. </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="InstalmentPlan" minOccurs="0" maxOccurs="2">
							<xs:complexType mixed="true">
								<xs:complexContent>
									<xs:extension base="InstalmentPlanType">
										<xs:sequence>
											<xs:element name="Global" type="xs:boolean" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Used to specify if the value represented in this element refers to a global value (bulked amounts in case of multi product) or, if false, is the part that applies to the quotation linked to the paymentGroup only.</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="InputFOP_MethodOfPaymentType" mixed="true">
		<xs:complexContent>
			<xs:extension base="FOP_MethodOfPaymentType">
				<xs:sequence>
					<xs:element name="Value" type="ValueType" minOccurs="0" maxOccurs="2">
						<xs:annotation>
							<xs:documentation>Monetary Amount, in a currency or in points. Repetable 4 times:  to indicate a Global value (bulked across mutliple products) versus the value that is used to pay one product; and to indicate a value in points and in currency if directly convertible.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="InstalmentPlan" type="InstalmentPlanType" minOccurs="0"/>
					<xs:element name="Redirection" minOccurs="0">
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="lang" type="xs:language" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Lang used by the client, to adapt the redirection website display</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="backUrl" minOccurs="0" maxOccurs="3">
									<xs:annotation>
										<xs:documentation>URL to redirect to after payment confirmation</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true">
										<xs:complexContent>
											<xs:extension base="__Dummy">
												<xs:sequence>
													<xs:element name="UseCase" type="URLUseCaseType">
														<xs:annotation>
															<xs:documentation>Possibilities: Success, Failure, Cancel</xs:documentation>
															<xs:appinfo>
																<exampleValues>
																	<example value="Success"/>
																	<example value="Failure"/>
																	<example value="Cancel"/>
																</exampleValues>
															</xs:appinfo>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
											</xs:extension>
										</xs:complexContent>
									</xs:complexType>
								</xs:element>
								<xs:element name="ContextualInformation" minOccurs="0">
									<xs:annotation>
										<xs:documentation>This element contains inforamtion about the client that can be automatically obtained.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:element name="EndUserIP" type="iata_StringLength1to128" minOccurs="0">
												<xs:annotation>
													<xs:documentation>The IP of the client.</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
								<xs:element name="ConfirmationInformation" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Once the user has done the action expected on the Payment Provider website </xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:element name="TimeStamp" type="xs:dateTime">
												<xs:annotation>
													<xs:documentation>The Date and Time where the user went back from the Payment Provider website.</xs:documentation>
												</xs:annotation>
											</xs:element>
											<xs:element name="HttpGetURL" type="xs:string" minOccurs="0"/>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
								<xs:element name="CustomParameters" type="xs:string" minOccurs="0"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="Authentication" minOccurs="0">
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="ThreeDSecure" minOccurs="0">
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:element name="XID" minOccurs="0">
												<xs:annotation>
													<xs:documentation>ID of the ThreeDSecure transaction</xs:documentation>
												</xs:annotation>
												<xs:complexType mixed="true"/>
											</xs:element>
											<xs:element name="PARES" type="xs:base64Binary" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Payer Authentication Response verb</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="ConversionRate" type="ConversionRateType" minOccurs="0" maxOccurs="9">
						<xs:annotation>
							<xs:documentation>Conversion rates relative to the payment.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PaymentGroupType" mixed="true">
		<xs:sequence>
			<xs:element name="Function" type="PaymentGroupFunctionType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SalesFormOfPaymentType" mixed="true">
		<xs:complexContent>
			<xs:extension base="PaymentGroupType">
				<xs:sequence>
					<xs:element name="PaymentInfo" maxOccurs="199">
						<xs:complexType mixed="true">
							<xs:complexContent>
								<xs:extension base="PaymentItemType">
									<xs:sequence>
										<xs:element name="ID" type="xs:positiveInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation source="Universal Unique ID"/>
											</xs:annotation>
										</xs:element>
										<xs:element name="RefIDs" type="ReferenceListType" minOccurs="0">
											<xs:annotation>
												<xs:documentation source="Simple space separated list of UUIDs that this element is linked to."/>
											</xs:annotation>
										</xs:element>
										<xs:element name="EdiTattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation source="SBM tattoo number"/>
											</xs:annotation>
										</xs:element>
										<xs:element name="EdiType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation source="Tattoo type for usage in legacy PNRACC based messages."/>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PendingPaymentProcessInformationType" mixed="true">
		<xs:sequence>
			<xs:element name="WebRedirection" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The URL of the external payment website where teh client should be redirected</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="HttpGetUrl" type="xs:anyURI" minOccurs="0"/>
						<xs:element name="CustomParameters" minOccurs="0">
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Authentication" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="ThreeDSecure" minOccurs="0">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="XID" minOccurs="0">
													<xs:annotation>
														<xs:documentation>ID of the ThreeDSecure transaction</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="PAREQ" type="xs:base64Binary" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Payer Authentication Request verb</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FPType" mixed="true">
		<xs:sequence minOccurs="0">
			<xs:element name="Function" type="PaymentGroupFunctionType" minOccurs="0"/>
			<xs:element name="Payment" maxOccurs="4">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="SequenceNumber" type="iata_Numeric0to4" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Corresponds to the position of the Payment in the FP elment</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PaymentInfo" type="PaymentItemType"/>
						<xs:element name="MethodOfPayment" type="FOP_MethodOfPaymentType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ValueType" mixed="true">
		<xs:sequence>
			<xs:element name="CurrencyCode" type="iata_AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalPlaces" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces="2" to represent $85).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrencyType" type="ListStringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used for ATC use cases to specify ICoS, RCoS (Currency of Selling) and used by FOP to specify if the currency is a Loyalty related currency (like MIL, PTS) or standard ISO currency (like EUR, USD, JPY...). Both are combinable using space separator: "ICOS ISO_Currency"</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Amount" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Defines the amount without decimal separator (i.e. Amount=8500 and
					DecimalPlace=2 represent 85.00)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="InstalmentPlanType" mixed="true">
		<xs:sequence>
			<xs:element name="Number" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Number of instalments</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InterestRate" type="xs:decimal" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Interests in % of the instalment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Supplier" type="ama_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Supplier of the instalment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frequency" type="InstalmentFrequencyType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of instalment's frequency type. Can be Daily, Weekly or Monthly. Multiply by FrequencyMultiplier to calculate the time between two instalments</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrequencyMultiplier" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Multiplier of the frequency : if the value is set to "2" and frequency is set to "W", then the instalment cycle is two weeks.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FirstDueDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The date when the first instalment is to be paid.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Code" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Instalment plan code</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Instalment" minOccurs="0" maxOccurs="99">
				<xs:annotation>
					<xs:documentation>Describes each Instalment separetely. The value described in the attributes of this element is the total price.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="ValueType">
							<xs:sequence>
								<xs:element name="Order" type="xs:integer" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Value : 1 to represent the first instalment (if it has a different amount). If 0 or absent, this represent all the other instalments of the instalment plan.</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Price" minOccurs="0" maxOccurs="99">
									<xs:annotation>
										<xs:documentation>Breakdown of the different components of the total value of the instalment.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true">
										<xs:complexContent>
											<xs:extension base="ValueType">
												<xs:sequence>
													<xs:element name="Type" type="ama_StringLength1to30" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Can be "Taxes" "Total" "Interest" "Base Fare"</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
											</xs:extension>
										</xs:complexContent>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Interest" type="ValueType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the total interest amount of the instalment plan.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FormOfPaymentDefinitionType" mixed="true">
		<xs:sequence>
			<xs:element name="CatalogIdentifier" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The unique identifier of a form of payment definition within Amadeus</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Name" type="iata_StringLength0to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Functional description of the FOP</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MOPMask" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Values that are fixed (predefined) in the Form Of Payment Definition. When using this Form Of Payment, the fixed values have to provided.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="FOP_MethodOfPaymentType"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Process" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="IsCombinable" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Indicates if a form of payment is combinable or not.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CardIssuanceInformationType" mixed="true">
		<xs:sequence>
			<xs:element name="Country" type="ama_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Credit Card country of issuance</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CountryCode" type="fop_AlphaNumericStringLength2" minOccurs="0"/>
			<xs:element name="Bank" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Name" type="ama_StringLength1to99" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Full name of the issuing bank</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="ama_StringLength1to99" minOccurs="0">
							<xs:annotation>
								<xs:documentation xml:lang="en">Code of bank issuing the card.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="fop_DateTimeAndLocationType" mixed="true">
		<xs:sequence>
			<xs:element name="Date" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>AIR (arrival date for each flight), HTL (check-out date), ATR (attraction end date), CAR (end date), INS (end date)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Location" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>AIR (for each flight segment, the destination), HTL (hotel location), ATR (attraction location), CAR (check-out location) </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AVS_Type" mixed="true">
		<xs:sequence>
			<xs:element name="CityName" type="ama_StringLength1to99" minOccurs="0"/>
			<xs:element name="PostalCode" type="ama_StringLength1to30" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Country" type="ama_StringLength1to99" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">ISO 3166 code for the country</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line" type="ama_StringLength1to199" minOccurs="0" maxOccurs="5">
				<xs:annotation>
					<xs:documentation>Street and number on first line. Building, Floor etc... on following lines</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LabelText" type="ama_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The application i.e Corporate, Personal ..</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PO_Box" type="ama_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Post Office Box No.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StateProv" type="ama_StringLength1to199" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The state or province name </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="fop_TrackType" mixed="true"/>
	<xs:complexType name="fop_FOPStatusType" mixed="true"/>
	<xs:complexType name="AuthorizationStatusType" mixed="true"/>
	<xs:complexType name="FraudStatusType" mixed="true"/>
	<xs:complexType name="ThreeDSecureStatusType" mixed="true"/>
	<xs:complexType name="DirectoryServerType" mixed="true"/>
	<xs:complexType name="DirectoryServerCodeType" mixed="true"/>
	<xs:complexType name="VERESStatusCodeType" mixed="true"/>
	<xs:complexType name="PARESStatusCodeType" mixed="true"/>
	<xs:complexType name="fop_NumericStringLength1to30" mixed="true"/>
	<xs:complexType name="PaymentGroupFunctionType" mixed="true"/>
	<xs:complexType name="TransactionType" mixed="true"/>
	<xs:complexType name="AuthorizationProviderType" mixed="true"/>
	<xs:complexType name="CheckResultType" mixed="true"/>
	<xs:complexType name="ValueCategoryType" mixed="true"/>
	<xs:complexType name="ValidationStatusType" mixed="true"/>
	<xs:complexType name="FormOfPaymentProcessType" mixed="true"/>
	<xs:complexType name="FormOfPaymentProcessSubType" mixed="true"/>
	<xs:complexType name="CardSubTypeType" mixed="true"/>
	<xs:complexType name="AccountSubTypeType" mixed="true"/>
	<xs:complexType name="AlternativeMethodsSubTypeType" mixed="true"/>
	<xs:complexType name="AlternativeMethodsVendorType" mixed="true"/>
	<xs:complexType name="MiscellaneousSubTypeType" mixed="true"/>
	<xs:complexType name="URLUseCaseType" mixed="true"/>
	<xs:complexType name="InstalmentFrequencyType" mixed="true"/>
	<xs:complexType name="CardAccountTypeType" mixed="true"/>
	<xs:complexType name="fop_String0" mixed="true"/>
	<xs:complexType name="formOfPaymentType" mixed="true"/>
	<xs:complexType name="fop_AlphaNumericStringLength2" mixed="true"/>
	<xs:complexType name="fop_AlphaNumericStringLength2orString0" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength0to30" mixed="true"/>
	<xs:complexType name="AlphaNumericStringLength0to10" mixed="true"/>
	<xs:complexType name="StringLength0to30" mixed="true"/>
	<xs:complexType name="StringLength0to99" mixed="true"/>
	<xs:complexType name="OtherServiceRequestBasicType" mixed="true">
		<xs:annotation>
			<xs:documentation>Basic OSI element containing only the text representation of the request</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="NIP" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="status" type="SellableStatusType" minOccurs="0"/>
			<xs:element name="previousStatus" type="SellableStatusType" minOccurs="0"/>
			<xs:element name="description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>service description issued by provider</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="code" type="SSR_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Product or service code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="serviceProvider" type="ProviderType"/>
			<xs:element name="priceCategory" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="code" minOccurs="0">
							<xs:annotation>
								<xs:documentation> the RFIC chargeability indicator defined for the sellable object </xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="subCode" minOccurs="0">
							<xs:annotation>
								<xs:documentation> the RFISC chargeability indicator defined for the sellable object </xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="mode" minOccurs="0">
							<xs:annotation>
								<xs:documentation>pricing mode of the service</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="text" minOccurs="0" maxOccurs="2">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="__Dummy">
							<xs:sequence>
								<xs:element name="label" minOccurs="0">
									<xs:complexType mixed="true"/>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SpecialServiceRequestBasicType" mixed="true">
		<xs:annotation>
			<xs:documentation>Basic SSR element containing only the text representation of the request</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="OtherServiceRequestBasicType">
				<xs:sequence>
					<xs:element name="InfantOnLap" type="xs:boolean" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SSR_StructuredSpecialServiceRequestType" mixed="true">
		<xs:annotation>
			<xs:documentation>Internal structured SSR element. Identical to SpecialServiceRequestType, but without the xs:anyAttribute and xs:any</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SpecialServiceRequestBasicType">
				<xs:sequence>
					<xs:element name="content" minOccurs="0">
						<xs:annotation>
							<xs:documentation>structured representation of the text content </xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="Account" type="SSR_AccountType" minOccurs="0"/>
								<xs:element name="Address" type="SSR_AddressType" minOccurs="0"/>
								<xs:element name="Document" type="SSR_DocumentType" minOccurs="0"/>
								<xs:element name="Weight" type="SSR_WeightType" minOccurs="0"/>
								<xs:element name="Size" type="SSR_DimensionType" minOccurs="0"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SSR_FlightIdentifierType" mixed="true">
		<xs:annotation>
			<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
				<ns1:error code="728">INVALID FLIGHT NUMBER</ns1:error>
			</xs:appinfo>
			<xs:documentation xml:lang="en">Flight Number possibly with a Suffix</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="NumericStringLength1to4">
				<xs:sequence>
					<xs:element name="suffix" type="AlphaStringLength1" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SSR_CodeType" mixed="true"/>
	<xs:complexType name="SSR_InternalPassengerAddressInformationType" mixed="true">
		<xs:annotation>
			<xs:documentation>for documentation and internal mapping purposes only! IATA SSR DOCA</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SpecialServiceRequestBasicType">
				<xs:sequence>
					<xs:element name="content" minOccurs="0">
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="Address" type="SSR_AddressType" minOccurs="0"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SSR_InternalOtherDocumentInformationType" mixed="true">
		<xs:annotation>
			<xs:documentation>for documentation and internal mapping purposes only! IATA SSR DOCO</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SpecialServiceRequestBasicType">
				<xs:sequence>
					<xs:element name="content" minOccurs="0">
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="Document" type="SSR_DocumentType" minOccurs="0"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SSR_InternalFrequentTravelerValidationType" mixed="true">
		<xs:annotation>
			<xs:documentation>Type under development! for documentation and internal mapping purposes only! IATA SSR FQTV</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SpecialServiceRequestBasicType">
				<xs:sequence>
					<xs:element name="content" minOccurs="0">
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="Account" type="SSR_AccountType" minOccurs="0"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SSR_InternalFrequentTravelerServiceAccessType" mixed="true">
		<xs:annotation>
			<xs:documentation>Type under development! for documentation and internal mapping purposes only! IATA SSR FQTS</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="SpecialServiceRequestBasicType">
				<xs:sequence>
					<xs:element name="identifier" type="SSR_FlightIdentifierType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">TBD Marketing Flight Number possibly with a Suffix</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="partnerInfo" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">TBD Operating Information</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="code" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Product or service code</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="text" minOccurs="0">
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="serviceProvider" type="ProviderType" minOccurs="0"/>
								<xs:element name="order" minOccurs="0">
									<xs:annotation>
										<xs:documentation>TBD</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:element name="id">
												<xs:complexType mixed="true"/>
											</xs:element>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="start" type="SellableBoundaryType" minOccurs="0"/>
					<xs:element name="end" type="SellableBoundaryType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SSR_AccountType" mixed="true">
		<xs:sequence>
			<xs:element name="Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identify the account type</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="SubType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identify the account subtype</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Process" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Company" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="CompanyCode">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Vendor" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identify the brand of the account provider</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Program" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Used to identify if a Vendor offers different sub-programs/brands.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Alliance" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Identify the brand of an alliance or association of several providers</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Identifier">
				<xs:annotation>
					<xs:documentation>The account number or identifier.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="Level" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Account level or program tier.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="LevelDescription" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SSR_WeightType" mixed="true">
		<xs:complexContent>
			<xs:extension base="__Dummy">
				<xs:sequence>
					<xs:element name="unit" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SSR_DimensionType" mixed="true">
		<xs:sequence>
			<xs:element name="length" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="heigth" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="width" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="unit" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SSR_DocumentType" mixed="true">
		<xs:sequence>
			<xs:element name="type">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ns1:error code="32804">INVALID PHONE NUMBER</ns1:error>
					</xs:appinfo>
					<xs:documentation>A  - Alien resident card
C - Permanent resident card
P - Passport
T - Refugee travel document and re-entry permit, US Travel document
F - Facilitation document
M - Military
N - Naturalization certificate
V - Border crossing card
DB - Secure Flight data
K - Known Traveler
R - Redress Number</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="issuer" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Entity or organisation that issued the document which this element refer to</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="number" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="nationality">
				<xs:annotation>
					<xs:documentation>ISO3166-Alpha2  ISO3166-Alpha3</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="gender">
				<xs:annotation>
					<xs:documentation>M - Male
F - Female
MI - Male traveling with an Infant
FI - Female traveling with an Infant
U - Unknown at the time of booking</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="dateOfBirth" type="xs:date"/>
			<xs:element name="issuanceDate" type="xs:date" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates the issuance date of the document</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="expirationDate" type="xs:date">
				<xs:annotation>
					<xs:documentation>Indicates the ending date of the document</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="firstName" type="xs:string"/>
			<xs:element name="secondName" type="xs:string" minOccurs="0"/>
			<xs:element name="surname" type="xs:string"/>
			<xs:element name="holder" type="xs:string" minOccurs="0"/>
			<xs:element name="placeOfBirth" type="xs:string" minOccurs="0"/>
			<xs:element name="issuedForCountry" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SSR_AddressType" mixed="true">
		<xs:sequence>
			<xs:element name="type" minOccurs="0">
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="line" type="StringLength1to70" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ns2:error code="11823">INVALID FIELD LENGTH ADDRESS LINE1</ns2:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">address line with street, number, building, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="complement" type="StringLength1to70" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ns3:error code="11826">INVALID FIELD LENGTH ADDRESS LINE2</ns3:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">complement to address line, if not enough space</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="zip" type="AlphaNumericStringLength1to17" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ns4:error code="11835">INVALID FORMAT ZIP OR POST CODE FIELD</ns4:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Post Office Code number.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="countryCode" type="AlphaNumericStringLength2" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ns5:error code="47">INVALID COUNTRY CODE</ns5:error>
						<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
					</xs:appinfo>
					<xs:documentation xml:lang="en">Country code (2 character standard IATA country code)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cityName" type="StringLength1to35" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ns1:error facet="use" code="11257">NEED CITY NAME</ns1:error>
						<ns1:error code="11829">INVALID FIELD LENGTH CITY NAME</ns1:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">City (e.g. Dublin), town, or postal station (i.e. a postal service territory, often used in a military address). Mandotory for some elements like PNR Hotel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="stateCode" type="AlphaNumericStringLength1to2" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ns1:error code="12701">INVALID STATE CODE</ns1:error>
						<!-- NB: this is defined there only for the case when the value does not match the grammar format. Then, the real check against RFD is under creation BE's responsibility -->
					</xs:appinfo>
					<xs:documentation>State code (2 characters standard IATA state code)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation xml:lang="en">.</xs:documentation>
	</xs:annotation>
	<xs:annotation>
		<xs:documentation xml:lang="en">.</xs:documentation>
	</xs:annotation>
	<xs:complexType name="ns1_CodePatternType" mixed="true"/>
	<xs:complexType name="ns1_CodeType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Used to convey any code. It may contain merely codes or integer codes associated to a value in AMA_CodeTable.xls</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Code" type="StringLength1to64">
				<xs:annotation>
					<xs:documentation>The code value - Sample: 21</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Owner" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Which owner defined this code, may be one of OTA, IATA, UIC, when refering a stanadard or ... 1A, 1A_OTA, 1A_UIC, ... when extending a standard </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListName" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The name of the code list this code refers too - sample: Transportation Code </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListCode" type="StringLength1to8" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The code of the code list this code refers too - sample: TRP</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Desc" type="StringLength1to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The textual value that describes the code - Sample: Train</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ns1_WarningType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Standard way to indicate successful processing of an Amadeus message, but one in which warnings are generated.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="FreeTextType">
				<xs:sequence>
					<xs:element name="Type" type="StringLength0to255">
						<xs:annotation>
							<xs:documentation xml:lang="en">The Error element MUST contain the Type attribute that uses a recommended set of values to indicate the error type. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ShortText" type="StringLength1to128" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">An abbreviated version of the error in textual format.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Code" type="NumericStringLength1to8">
						<xs:annotation>
							<xs:documentation xml:lang="en">Code must be specified. This refers to a table of coded values exchanged between applications to identify errors or warnings. Refer to Amadeus Code List Error Codes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DocURL" type="xs:anyURI" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this URL refers to an online description of the error that occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Status" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, recommended values are those enumerated in the AMA_ErrorRS, (NotProcessed | Incomplete | Complete | Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Tag" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RecordID" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ns1_ErrorType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">Standard way to indicate that an error occurred during the processing of an Amadeus message. If the message successfully processes, but there are business errors, those errors should be passed in the warning element.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="FreeTextType">
				<xs:sequence>
					<xs:element name="Type" type="OTA_CodeType">
						<xs:annotation>
							<xs:documentation xml:lang="en">The Error element MUST contain the Type attribute that uses a recommended set of values to indicate the error type. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ShortText" type="StringLength1to128" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">An abbreviated version of the error in textual format.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Code" type="NumericStringLength1to8">
						<xs:annotation>
							<xs:documentation xml:lang="en">Code must be specified. This refers to a table of coded values exchanged between applications to identify errors or warnings. Refer to Amadeus Code List Error Codes.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="DocURL" type="xs:anyURI" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this URL refers to an online description of the error that occurred.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Status" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, recommended values are those enumerated in the AMA_ErrorRS, (NotProcessed | Incomplete | Complete | Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Tag" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="RecordID" type="StringLength1to64" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NodeList" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:lang="en">An XPath expression that selects all the nodes whose data caused this error. Further, this expression should have an additional contraint which contains the data of the node. This will provide the offending data back to systems that cannot maintain the original message.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ns1_GenericWarningsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection of errors that occurred during the processing of a message.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Warnings" type="ns1_WarningsType" minOccurs="0"/>
			<xs:element ref="ota_Warnings" minOccurs="0"/>
			<xs:element ref="iata_Warnings" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ns1_GenericErrorsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection of errors that occurred during the processing of a message.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Errors" type="ns1_ErrorsType" minOccurs="0"/>
			<xs:element ref="ota_Errors" minOccurs="0"/>
			<xs:element ref="iata_Errors" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ns1_ErrorsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection of Amadeus errors that occurred during the processing of a message.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Error" type="ns1_ErrorType" maxOccurs="99"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ns1_WarningsType" mixed="true">
		<xs:annotation>
			<xs:documentation xml:lang="en">A collection of Amadeus errors that occurred during the processing of a message.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Warning" type="ns1_ErrorType" maxOccurs="99"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ns1_ReplyType" mixed="true">
		<xs:annotation>
			<xs:documentation>Basic structure of any webservice reply. Extend this type to implement a reply.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EchoToken" type="StringLength1to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A reference for additional message identification, assigned by the requesting host system. When a request message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimeStamp" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-20T13:59:38Z).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Target" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to indicate whether the request is for the Test or Production system.</xs:documentation>
					<xs:documentation xml:lang="en">
						<LegacyDefaultValue>Production</LegacyDefaultValue>
					</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="TargetName" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to indicate the name of the Test or Production system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Version" type="xs:decimal">
				<xs:annotation>
					<xs:documentation xml:lang="en">For all OpenTravel versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransactionIdentifier" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">A unique identifier to relate all messages within a transaction (e.g. this would be sent in all request and response messages that are part of an on-going transaction).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SequenceNmbr" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application to process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and needs to retrieve messages that were missed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransactionStatusCode" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">This indicates where this message falls within a sequence of messages.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="PrimaryLangID" type="xs:language" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the primary language preference for the message. The human language is identified by ISO 639 codes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AltLangID" type="xs:language" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Identifies the alternate language for a customer or message. The human language is identified by ISO 639 codes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RetransmissionIndicator" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">When true, indicates the message is being re-sent after a failure. It is recommended that this attribute is used (i.e., set to TRUE) only when a message is retransmitted.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CorrelationID" type="StringLength1to64" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Allow end-to-end correlation of log messages with the corresponding Web service message throughout the processing of the Web service message.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:sequence>
				<xs:element ref="ota_Success"/>
				<xs:element name="GenericWarnings" type="ns1_GenericWarningsType" minOccurs="0"/>
			</xs:sequence>
			<xs:element name="GenericErrors" type="ns1_GenericErrorsType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ns1_PointOfSaleType" mixed="true">
		<xs:annotation>
			<xs:documentation>Contains all data of a Point of Sale.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="POS_Type" type="OTA_CodeType">
				<xs:annotation>
					<xs:documentation>Specifies a code for the type of the POS (i.e. last updator, owner...). Refer to the Amadeus POS type (POS) codeset list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PseudoCityCode" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">An identification code assigned to an office/agency by a reservation system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AgentSign" type="StringLength0to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Agent sign of the user.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AgentDutyCode" type="StringLength0to8" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Duty code of the user.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ERSP_UserID" type="StringLength1to16" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">Electronic Reservation Service Provider (ERSP) assigned identifier used to identify the individual using the ERSP system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FirstDepartPoint" type="StringLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The point of first departure in a trip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ISO_Country" type="ISO3166" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The country code of the requesting party.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ISO_Currency" type="AlphaLength3" minOccurs="0">
				<xs:annotation>
					<xs:documentation xml:lang="en">The currency code of the requesting party.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Language" type="StringLength0to128" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Language preference.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RequestorID" type="iata_UniqueID_Type" minOccurs="0"/>
			<xs:element name="BookingChannel" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Type" type="StringLength1to128" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Channel type used by the POS. </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="CompanyName" type="CompanyNameType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ns1_PointsOfSaleType" mixed="true">
		<xs:annotation>
			<xs:documentation>Contains several Points of Sale.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PointOfSale" type="ns1_PointOfSaleType" maxOccurs="10"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ns1_AlphaNumericStringLength6" mixed="true"/>
	<xs:complexType name="LinkedFile" mixed="true">
		<xs:sequence>
			<xs:element name="CreationDate" type="xs:date"/>
			<xs:element name="UID" type="ns1_AlphaNumericStringLength6">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ns0:error code="477">INVALID FORMAT</ns0:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Booking File RLOC.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="State" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Refer to the Amadeus RST Code list.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TechnicalFile" mixed="true">
		<xs:sequence>
			<xs:element name="UID" type="xs:string"/>
			<xs:element name="CreationDate" type="xs:date" minOccurs="0"/>
			<xs:element name="Type" type="StringLength1to128">
				<xs:annotation>
					<xs:documentation>Indicates the code of the Booking Folder Type (dedicated use cases). Refer to the Amadeus Booking Folder Type (FOT) codeset list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="State" type="OTA_CodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Refer to the Amadeus RST Code list.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CommonFolderContentType" mixed="true">
		<xs:sequence>
			<xs:element name="creationDateTime" type="DateOrDateTimeType">
				<xs:annotation>
					<xs:documentation xml:lang="en">Creation date time (in Amadeus system)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label" type="StringLength1to128" minOccurs="0">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ns0:error code="477">INVALID FORMAT</ns0:error>
					</xs:appinfo>
					<xs:documentation>Describes the trip corresponding to the Folder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BookingFiles" type="LinkedFile" minOccurs="0" maxOccurs="10">
				<xs:annotation>
					<xs:appinfo source="http://xml.amadeus.com/ErrorCodes">
						<ns0:error facet="maxOccurs" code="31874">MAXIMUM NUMBER OF BOOKING FILES REACHED</ns0:error>
						<ns0:error code="477">INVALID FORMAT</ns0:error>
					</xs:appinfo>
					<xs:documentation xml:lang="en">Booking files linked to the Folder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TechnicalFiles" type="TechnicalFile" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DigestType" mixed="true"/>
	<xs:complexType name="PackageType" mixed="true">
		<xs:annotation>
			<xs:documentation>Package element data container</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PackageInfo">
				<xs:annotation>
					<xs:documentation>DataContainer for package element</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="TTR_PackageType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Product" type="ProductType" minOccurs="0" maxOccurs="50"/>
			<xs:element name="Package" type="PackageType" minOccurs="0" maxOccurs="50"/>
			<xs:element name="Quotation" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Quotation element data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data">
							<xs:annotation>
								<xs:documentation>DataContainer for quotation element</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:group ref="QtElementGroup"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:group ref="QtElementGroup"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Referral" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Referral element data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ReferralType">
							<xs:annotation>
								<xs:documentation>DataContainer for Referral element</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProductType" mixed="true">
		<xs:complexContent>
			<xs:extension base="BookingType">
				<xs:sequence>
					<xs:element name="Quotation" minOccurs="0" maxOccurs="99">
						<xs:annotation>
							<xs:documentation>Quotation element data container</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="links" minOccurs="0">
									<xs:annotation>
										<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="legacyLinks" minOccurs="0">
									<xs:annotation>
										<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="TID" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ID" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="TIDlinks" minOccurs="0">
									<xs:annotation>
										<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ediType" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="status" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="action" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="xPath" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Data">
									<xs:annotation>
										<xs:documentation>DataContainer for quotation element</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:group ref="QtElementGroup"/>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="Referral" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Referral element data container</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="links" minOccurs="0">
									<xs:annotation>
										<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="legacyLinks" minOccurs="0">
									<xs:annotation>
										<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="TID" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ID" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="TIDlinks" minOccurs="0">
									<xs:annotation>
										<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ediType" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="status" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="action" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="xPath" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Data" type="ReferralType">
									<xs:annotation>
										<xs:documentation>DataContainer for referral element</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="Service" minOccurs="0" maxOccurs="60">
						<xs:annotation>
							<xs:documentation>ETR service element data container</xs:documentation>
						</xs:annotation>
						<xs:complexType mixed="true">
							<xs:sequence>
								<xs:element name="links" minOccurs="0">
									<xs:annotation>
										<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="legacyLinks" minOccurs="0">
									<xs:annotation>
										<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="TID" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ID" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="TIDlinks" minOccurs="0">
									<xs:annotation>
										<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="ediType" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="status" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="action" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
									</xs:annotation>
									<xs:complexType mixed="true"/>
								</xs:element>
								<xs:element name="xPath" type="xs:string" minOccurs="0">
									<xs:annotation>
										<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
									</xs:annotation>
								</xs:element>
								<xs:element name="Data" type="ETR_ServiceType">
									<xs:annotation>
										<xs:documentation>DataContainer for ETR Service type element</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BookingType" mixed="true">
		<xs:sequence>
			<xs:element name="Rloc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Rloc the booking belongs to. In folders, there can be many rlocs, so it is useful to group bookings by rloc</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NM" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Passenger elements are found only in PNR bfe. Passenger data can be stored in this container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="PassengerNameType"/>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data" type="PassengerNameType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GT" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Passenger elements are found only in PNR bfe. Passenger data can be stored in this container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="GroupNameType"/>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data" type="GroupNameType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="NC" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Passenger elements are found only in PNR bfe. Passenger data can be stored in this container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="NonCommercialNameType"/>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data" type="NonCommercialNameType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="AIR" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Air</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_AirType">
							<xs:annotation>
								<xs:documentation>DataContainer for Traditional Air Element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="AirType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="APA" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Apartment element data continer</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_ApartmentType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended Apartment element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_ApartmentType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ATM" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Activity misc element data continer</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_ActivityMiscellaneousType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended Activity Misc element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_ActivityMiscellaneousType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ATT" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Attachment element data continer</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="etr_AttachmentType">
							<xs:annotation>
								<xs:documentation>DataContainer for attachment element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="etr_AttachmentType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="BIK" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Bike element data continer</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_BikeType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended Bike element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_BikeType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="CAB" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Taxi element data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_TaxiType">
							<xs:annotation>
								<xs:documentation>DataContainer for  Extended Taxi Element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_TaxiType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="COA" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Coach element data continer</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_CoachType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended Coach element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_CoachType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="DCM" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Documentation element data continer</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_DocumentationType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended Documentation element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_DocumentationType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="EAI" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>ETR Air</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_AirType">
							<xs:annotation>
								<xs:documentation>DataContainer for ETR Air</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_AirType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="EAT" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Eat and Dring element data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_EatAndDrinkMiscellaneousType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended eat and drink element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_EatAndDrinkMiscellaneousType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ECR" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Manual Car element data continer</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_CarType">
							<xs:annotation>
								<xs:documentation>DataContainer for  Extended Car Element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_CarType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ECU" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Cruise element data continer</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_CruiseType">
							<xs:annotation>
								<xs:documentation>DataContainer for  Extended Cruise Element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_CruiseType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="EFR" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Ferry element data continer</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_FerryType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended Ferry element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_FerryType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="EHT" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>ETR Hotel element data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_HotelType"/>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_HotelType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="EIS" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Extended Insurance</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, ... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Data" type="ETR_InsuranceType">
							<xs:annotation>
								<xs:documentation>DataContainer for  Extended Cruise Element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_InsuranceType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ESR" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Extended service content</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_ServiceType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended service</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_ServiceType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="EST" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Exteded Seat content</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_AirSeatType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended seat element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_AirSeatType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ETR" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Extended train elements data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_TrainType">
							<xs:annotation>
								<xs:documentation>Data Container for Extended Train</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_TrainType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ETS" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Extended train elements data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_TrainSeatType">
							<xs:annotation>
								<xs:documentation>Data Container for Extended Train Seat</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_TrainSeatType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="EXC" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Excursion element data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_ExcursionType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended excursion element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_ExcursionType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GOO" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Goodies element data continer</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_GoodiesType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended Goodies element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_GoodiesType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="LEQ" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Leisure Equipment element data continer</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_LeisureEquipmentType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended Leisure Equipment element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_LeisureEquipmentType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="LCS" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Local Service element data continer</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_LocalServiceType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended Local Service element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_LocalServiceType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="MOV" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Move Misc element data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_MoveMiscellaneousType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended Move Misc element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_MoveMiscellaneousType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="MTG" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>ETR Meeting element data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_MeetingType"/>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_MeetingType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="PKG" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Parking element data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_ParkingType">
							<xs:annotation>
								<xs:documentation>DataContainer for  Extended Parking Element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_ParkingType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="RES" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Restaurant element data continer</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_RestaurantType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended Restaurant element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_RestaurantType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SCE" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Service Misc element data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_ServiceMiscellaneousType">
							<xs:annotation>
								<xs:documentation>DataContainer for extened Service Misc element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_ServiceMiscellaneousType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SHO" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Show Event element data continer</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_ShowAndEventType">
							<xs:annotation>
								<xs:documentation>DataContainer for extended Show Event element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_ShowAndEventType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SLP" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>ETR Sleep Misc element data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_SleepMiscellaneousType"/>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_SleepMiscellaneousType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SPO" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Extended Sport Activity elements data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_SportActivityType">
							<xs:annotation>
								<xs:documentation>DataContainer for  Extended Sport Activity Element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_SportActivityType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="TRA" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Extended Transfer elements data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_TransferType">
							<xs:annotation>
								<xs:documentation>DataContainer for  Extended Transfer Element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_TransferType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="UTP" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Extended Urban Transportation elements data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_UrbanTransportationType">
							<xs:annotation>
								<xs:documentation>DataContainer for  Extended Urban Transportation Element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_UrbanTransportationType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="VAC" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Extended Vaccine elements data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_VaccineType">
							<xs:annotation>
								<xs:documentation>DataContainer for  Extended Vaccine Element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_VaccineType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="VSA" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Extended Visa elements data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_VisaType">
							<xs:annotation>
								<xs:documentation>DataContainer for  Extended Visa Element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_VisaType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="VIS" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Extended Visit elements data container</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="legacyLinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="TID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ID" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TIDlinks" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ediType" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="status" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="action" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="xPath" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Data" type="ETR_VisitType">
							<xs:annotation>
								<xs:documentation>DataContainer for  Extended Visit Element</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="historyData">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>EnvelopeNumber</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="Data" type="ETR_VisitType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="QT" minOccurs="0">
				<xs:annotation>
					<xs:documentation>All quotations will come under this element. Please not that there can be many sub types of quotation</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="QT_EXT_PR" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Extended Pricing Record Quotation</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="legacyLinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="TID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TIDlinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ediType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="status" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="action" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="xPath" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data">
										<xs:annotation>
											<xs:documentation>Default Quotation data</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="State" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:group ref="QtExt_ElementGroup"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="historyData">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>EnvelopeNumber</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="links" minOccurs="0">
													<xs:annotation>
														<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Data">
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="State" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																</xs:annotation>
																<xs:complexType mixed="true"/>
															</xs:element>
															<xs:group ref="QtExt_ElementGroup"/>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="QT_PCK" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Pck Quotation type</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="legacyLinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="TID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TIDlinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ediType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="status" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="action" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="xPath" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data">
										<xs:annotation>
											<xs:documentation>Default Quotation data</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="State" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:group ref="QtElementGroup"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="historyData">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>EnvelopeNumber</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="links" minOccurs="0">
													<xs:annotation>
														<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Data">
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="State" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																</xs:annotation>
																<xs:complexType mixed="true"/>
															</xs:element>
															<xs:group ref="QtElementGroup"/>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="QT_MRK" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Mrk Quotation type</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="legacyLinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="TID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TIDlinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ediType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="status" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="action" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="xPath" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data">
										<xs:annotation>
											<xs:documentation>Default Quotation data</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="State" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:group ref="QtElementGroup"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="historyData">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>EnvelopeNumber</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="links" minOccurs="0">
													<xs:annotation>
														<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Data">
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="State" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																</xs:annotation>
																<xs:complexType mixed="true"/>
															</xs:element>
															<xs:group ref="QtElementGroup"/>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="QT_FAR_COM" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Qutotation Fare component type</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="legacyLinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="TID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TIDlinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ediType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="status" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="action" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="xPath" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data" type="QtFareComponentType">
										<xs:annotation>
											<xs:documentation>Quotation fare component type data</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="historyData">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>EnvelopeNumber</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="links" minOccurs="0">
													<xs:annotation>
														<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Data" type="QtFareComponentType"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="QT_ITI_CPN" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Quotation Itinerary coupon type</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="legacyLinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="TID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TIDlinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ediType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="status" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="action" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="xPath" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data">
										<xs:annotation>
											<xs:documentation>Quotation coupon type data</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="State" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:group ref="CouponPricingInfoGroup"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="historyData">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>EnvelopeNumber</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="links" minOccurs="0">
													<xs:annotation>
														<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Data">
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="State" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																</xs:annotation>
																<xs:complexType mixed="true"/>
															</xs:element>
															<xs:group ref="CouponPricingInfoGroup"/>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="QT_OCF" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Quotation  OC Fees Type</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="legacyLinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="TID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TIDlinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ediType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="status" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="action" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="xPath" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data" type="QtOCFeesType">
										<xs:annotation>
											<xs:documentation>Quotation OC Fees type data</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="historyData">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>EnvelopeNumber</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="links" minOccurs="0">
													<xs:annotation>
														<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Data" type="QtOCFeesType"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="QT_SRV_COM" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Quotation Service Component Type</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="legacyLinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="TID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TIDlinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ediType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="status" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="action" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="xPath" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data" type="QtServiceComponentType">
										<xs:annotation>
											<xs:documentation>Quotation OC Fees type data</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="historyData">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>EnvelopeNumber</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="links" minOccurs="0">
													<xs:annotation>
														<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Data" type="QtServiceComponentType"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="QT_ITI_SRV" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Quotation Itinerary Service Type</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="legacyLinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="TID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TIDlinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ediType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="status" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="action" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="xPath" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data" type="QtItineraryServiceType">
										<xs:annotation>
											<xs:documentation>Quotation Itinerary Service type</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="historyData">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>EnvelopeNumber</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="links" minOccurs="0">
													<xs:annotation>
														<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Data" type="QtItineraryServiceType"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="QT_ITI_USE" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Quotation Used Product type</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="legacyLinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="TID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TIDlinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ediType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="status" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="action" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="xPath" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data" type="QtUsedProductType">
										<xs:annotation>
											<xs:documentation>Quotation Used product type data</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="historyData">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>EnvelopeNumber</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="links" minOccurs="0">
													<xs:annotation>
														<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Data" type="QtUsedProductType"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="QT_DEFAULT" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Default Quotation type</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="legacyLinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="TID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TIDlinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ediType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="status" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="action" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="xPath" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data">
										<xs:annotation>
											<xs:documentation>Default Quotation data</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="State" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:group ref="QtElementGroup"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="historyData">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>EnvelopeNumber</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="links" minOccurs="0">
													<xs:annotation>
														<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Data">
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="State" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																</xs:annotation>
																<xs:complexType mixed="true"/>
															</xs:element>
															<xs:group ref="QtElementGroup"/>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="QT_REF" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Ref Quotation type</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="legacyLinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="TID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TIDlinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ediType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="status" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="action" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="xPath" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data">
										<xs:annotation>
											<xs:documentation>Default Quotation data</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="State" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:group ref="QtElementGroup"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="historyData">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>EnvelopeNumber</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="links" minOccurs="0">
													<xs:annotation>
														<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Data">
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="State" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																</xs:annotation>
																<xs:complexType mixed="true"/>
															</xs:element>
															<xs:group ref="QtElementGroup"/>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="QT_ADN" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>ADN Quotation type</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="legacyLinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="TID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TIDlinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ediType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="status" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="action" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="xPath" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data">
										<xs:annotation>
											<xs:documentation>Default Quotation data</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="State" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:group ref="QtElementGroup"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="historyData">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>EnvelopeNumber</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="links" minOccurs="0">
													<xs:annotation>
														<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Data">
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="State" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																</xs:annotation>
																<xs:complexType mixed="true"/>
															</xs:element>
															<xs:group ref="QtElementGroup"/>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="QT_ITI_PR" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Iti pr Quotation type</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="legacyLinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="TID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TIDlinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ediType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="status" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="action" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="xPath" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data">
										<xs:annotation>
											<xs:documentation>Default Quotation data</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="State" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:group ref="QtElementGroup"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="historyData">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>EnvelopeNumber</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="links" minOccurs="0">
													<xs:annotation>
														<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Data">
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="State" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																</xs:annotation>
																<xs:complexType mixed="true"/>
															</xs:element>
															<xs:group ref="QtElementGroup"/>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="QT_ITI" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Quotation Itinerary Type</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="links" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="legacyLinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="TID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ID" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TIDlinks" minOccurs="0">
										<xs:annotation>
											<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ediType" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="status" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="action" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:element name="xPath" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Data">
										<xs:annotation>
											<xs:documentation>Quotation Itinerary type</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="State" minOccurs="0">
													<xs:annotation>
														<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:group ref="ItineraryPricingInfoGroup"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="historyData">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
													<xs:annotation>
														<xs:documentation>EnvelopeNumber</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="links" minOccurs="0">
													<xs:annotation>
														<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
													</xs:annotation>
													<xs:complexType mixed="true"/>
												</xs:element>
												<xs:element name="Data">
													<xs:complexType mixed="true">
														<xs:sequence>
															<xs:element name="State" minOccurs="0">
																<xs:annotation>
																	<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																</xs:annotation>
																<xs:complexType mixed="true"/>
															</xs:element>
															<xs:group ref="ItineraryPricingInfoGroup"/>
														</xs:sequence>
													</xs:complexType>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="SBRXMLBom">
		<xs:annotation>
			<xs:documentation>The base container holding data of an sbm contents</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:sequence>
				<xs:element name="BookingFolder" minOccurs="0">
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="ID" minOccurs="0">
								<xs:annotation>
									<xs:documentation>RLOC of the Booking Folder</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Add" minOccurs="0">
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="Label" minOccurs="0"/>
										<xs:element name="BookingFiles" minOccurs="0" maxOccurs="unbounded">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="UID" minOccurs="0"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Remove" minOccurs="0">
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="BookingFiles" minOccurs="0" maxOccurs="unbounded">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="UID" minOccurs="0"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="TripSummary" minOccurs="0" maxOccurs="99">
								<xs:annotation>
									<xs:documentation>TripSummary element data container, corresponds to the number of trips we can have in DisplayTrip</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="TripSummaryType">
											<xs:annotation>
												<xs:documentation>DataContainer for TripSummary element</xs:documentation>
											</xs:annotation>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="CommonFolderContent" minOccurs="0" maxOccurs="1">
								<xs:annotation>
									<xs:documentation>DataContainer for Folder element</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="CommonFolderContentType"/>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Stakeholders" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>Stakeholders element contains the names of persons concerned with booking.</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="Rloc" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Rloc the booking belongs to. In folders, there can be many rlocs, so it is useful to group bookings by rloc</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="SKH" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Stakeholder element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="TTR_ActorType">
											<xs:annotation>
												<xs:documentation>DataContainer for Stakeholders element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="TTR_ActorType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="LYT" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Loyalty element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="TTR_LoyaltyType">
											<xs:annotation>
												<xs:documentation>DataContainer for Loyalty element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="TTR_LoyaltyType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Booking" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>All elements of PNR BFE and EXT BFE are in this container, there can be many PNR Bfe's depending on the number of PNRs in a given folder</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="Rloc" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Rloc the booking belongs to. In folders, there can be many rlocs, so it is useful to group bookings by rloc</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="CreationDate" type="xs:dateTime" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Creation date of the PNR</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ModificationDate" type="xs:dateTime" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Modification date of the PNR</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="NM" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Passenger elements are found only in PNR bfe. Passenger data can be stored in this container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="PassengerNameType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="PassengerNameType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="GT" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Passenger elements are found only in PNR bfe. Passenger data can be stored in this container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="GroupNameType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="GroupNameType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="NC" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Passenger elements are found only in PNR bfe. Passenger data can be stored in this container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="NonCommercialNameType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="NonCommercialNameType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="AIR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Air</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_AirType">
											<xs:annotation>
												<xs:documentation>DataContainer for Traditional Air Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_AirType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="APA" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Apartment element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ApartmentType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Apartment element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ApartmentType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ATM" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Activity misc element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ActivityMiscellaneousType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Activity Misc element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ActivityMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ATT" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Attachment element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="etr_AttachmentType">
											<xs:annotation>
												<xs:documentation>DataContainer for attachment element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="etr_AttachmentType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="BIK" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Bike element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_BikeType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Bike element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_BikeType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="CAB" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Taxi element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_TaxiType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Taxi Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_TaxiType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="CCR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>PNR Legacy Car element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_CarType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Car Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_CarType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="COA" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Coach element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_CoachType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Coach element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_CoachType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="CRU" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>PNR legacy Cruise element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_CruiseType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Cruise Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_CruiseType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="DCM" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Documentation element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_DocumentationType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Documentation element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_DocumentationType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EAI" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>ETR Air</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_AirType">
											<xs:annotation>
												<xs:documentation>DataContainer for ETR Air</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_AirType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EAT" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Eat and Dring element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_EatAndDrinkMiscellaneousType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended eat and drink element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_EatAndDrinkMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ECR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Manual Car element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_CarType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Car Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_CarType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ECU" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Cruise element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_CruiseType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Cruise Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_CruiseType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EFR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Ferry element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_FerryType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Ferry element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_FerryType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EHT" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>ETR Hotel element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_HotelType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_HotelType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EIS" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Insurance</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0"/>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, ... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="Data" type="ETR_InsuranceType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Cruise Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_InsuranceType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ESR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended service content</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ServiceType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended service</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ServiceType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EST" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Exteded Seat content</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_AirSeatType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended seat element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_AirSeatType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ETR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended train elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_TrainType">
											<xs:annotation>
												<xs:documentation>Data Container for Extended Train</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_TrainType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ETS" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended train elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_TrainSeatType">
											<xs:annotation>
												<xs:documentation>Data Container for Extended Train Seat</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_TrainSeatType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EXC" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Excursion element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ExcursionType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended excursion element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ExcursionType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="FCT" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>FCT element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ContractType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended excursion element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ContractType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="FOE" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>FOE element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ContractType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended excursion element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ContractType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="FD" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>FD element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="DiscountType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended excursion element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="DiscountType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="FEE" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Fee element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="TTR_FeeType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended excursion element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="TTR_FeeType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="FP" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Form of payment element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="FPType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended excursion element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="FPType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="FT" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>FT element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="TourType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended excursion element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="TourType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="GOO" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Goodies element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_GoodiesType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Goodies element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_GoodiesType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="HHL" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>PNR legacy Hotel element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_HotelType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_HotelType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="INS" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>PNR legacy Insurance element Datacontainer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0"/>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, ... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="Data" type="ETR_InsuranceType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Cruise Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_InsuranceType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="LEQ" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Leisure Equipment element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_LeisureEquipmentType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Leisure Equipment element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_LeisureEquipmentType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="LCS" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Local Service element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_LocalServiceType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Local Service element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_LocalServiceType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="MOV" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Move Misc element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_MoveMiscellaneousType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Move Misc element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_MoveMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="MTG" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>ETR Meeting element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_MeetingType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_MeetingType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PKG" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Parking element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ParkingType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Parking Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ParkingType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PAK" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>DataContainer for package element</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="TTR_PackageType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="TTR_PackageType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="RFS" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Referral element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ReferralType">
											<xs:annotation>
												<xs:documentation>DataContainer for referral element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ReferralType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="RES" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Restaurant element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_RestaurantType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Restaurant element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_RestaurantType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SCE" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Service Misc element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ServiceMiscellaneousType">
											<xs:annotation>
												<xs:documentation>DataContainer for extened Service Misc element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ServiceMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SHO" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Show Event element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ShowAndEventType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Show Event element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ShowAndEventType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SLP" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>ETR Sleep Misc element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_SleepMiscellaneousType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_SleepMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SPO" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Sport Activity elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_SportActivityType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Sport Activity Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_SportActivityType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SUR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>PNR Legacy Surface element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_TransferType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Transfer Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_TransferType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="TRA" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Transfer elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_TransferType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Transfer Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_TransferType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="TRN" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Pnr Legacy Train element Data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_TrainType">
											<xs:annotation>
												<xs:documentation>Data Container for Extended Train</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_TrainType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="UTP" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Urban Transportation elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_UrbanTransportationType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Urban Transportation Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_UrbanTransportationType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="VAC" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Vaccine elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_VaccineType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Vaccine Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_VaccineType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="VSA" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Visa elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_VisaType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Visa Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_VisaType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="VIS" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Visit elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_VisitType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Visit Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_VisitType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="QT" minOccurs="0">
								<xs:annotation>
									<xs:documentation>All quotations will come under this element. Please not that there can be many sub types of quotation</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="QT_EXT_PR" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Extended Pricing Record Quotation</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Default Quotation data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:complexContent>
																<xs:extension base="QuotationGenericElementType">
																	<xs:sequence>
																		<xs:element name="State" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																			</xs:annotation>
																			<xs:complexType mixed="true"/>
																		</xs:element>
																		<xs:element name="TermsAndConditions" type="TermsAndCondtionsType" minOccurs="0"/>
																	</xs:sequence>
																</xs:extension>
															</xs:complexContent>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:complexContent>
																			<xs:extension base="QuotationGenericElementType">
																				<xs:sequence>
																					<xs:element name="State" minOccurs="0">
																						<xs:annotation>
																							<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																						</xs:annotation>
																						<xs:complexType mixed="true"/>
																					</xs:element>
																					<xs:element name="TermsAndConditions" type="TermsAndCondtionsType" minOccurs="0"/>
																				</xs:sequence>
																			</xs:extension>
																		</xs:complexContent>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_PCK" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Pck Quotation type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Default Quotation data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:complexContent>
																<xs:extension base="QuotationGenericElementType">
																	<xs:sequence>
																		<xs:element name="State" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																			</xs:annotation>
																			<xs:complexType mixed="true"/>
																		</xs:element>
																	</xs:sequence>
																</xs:extension>
															</xs:complexContent>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:complexContent>
																			<xs:extension base="QuotationGenericElementType">
																				<xs:sequence>
																					<xs:element name="State" minOccurs="0">
																						<xs:annotation>
																							<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																						</xs:annotation>
																						<xs:complexType mixed="true"/>
																					</xs:element>
																				</xs:sequence>
																			</xs:extension>
																		</xs:complexContent>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_MRK" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Mrk Quotation type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Default Quotation data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:complexContent>
																<xs:extension base="QuotationGenericElementType">
																	<xs:sequence>
																		<xs:element name="State" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																			</xs:annotation>
																			<xs:complexType mixed="true"/>
																		</xs:element>
																	</xs:sequence>
																</xs:extension>
															</xs:complexContent>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:complexContent>
																			<xs:extension base="QuotationGenericElementType">
																				<xs:sequence>
																					<xs:element name="State" minOccurs="0">
																						<xs:annotation>
																							<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																						</xs:annotation>
																						<xs:complexType mixed="true"/>
																					</xs:element>
																				</xs:sequence>
																			</xs:extension>
																		</xs:complexContent>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_FAR_COM" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Qutotation Fare component type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data" type="QtFareComponentType">
														<xs:annotation>
															<xs:documentation>Quotation fare component type data</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data" type="QtFareComponentType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_ITI_CPN" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Quotation Itinerary coupon type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Quotation coupon type data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="State" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:group ref="CouponPricingInfoGroup"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:sequence>
																			<xs:element name="State" minOccurs="0">
																				<xs:annotation>
																					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																				</xs:annotation>
																				<xs:complexType mixed="true"/>
																			</xs:element>
																			<xs:group ref="CouponPricingInfoGroup"/>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_OCF" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Quotation  OC Fees Type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data" type="QtOCFeesType">
														<xs:annotation>
															<xs:documentation>Quotation OC Fees type data</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data" type="QtOCFeesType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_SRV_COM" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Quotation Service Component Type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data" type="QtServiceComponentType">
														<xs:annotation>
															<xs:documentation>Quotation OC Fees type data</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data" type="QtServiceComponentType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_ITI_SRV" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Quotation Itinerary Service Type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data" type="QtItineraryServiceType">
														<xs:annotation>
															<xs:documentation>Quotation Itinerary Service type</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data" type="QtItineraryServiceType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_ITI_USE" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Quotation Used Product type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data" type="QtUsedProductType">
														<xs:annotation>
															<xs:documentation>Quotation Used product type data</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data" type="QtUsedProductType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_DEFAULT" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Default Quotation type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Default Quotation data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="State" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:group ref="QtElementGroup"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:sequence>
																			<xs:element name="State" minOccurs="0">
																				<xs:annotation>
																					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																				</xs:annotation>
																				<xs:complexType mixed="true"/>
																			</xs:element>
																			<xs:group ref="QtElementGroup"/>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_REF" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Ref Quotation type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Default Quotation data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="State" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:group ref="QtElementGroup"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:sequence>
																			<xs:element name="State" minOccurs="0">
																				<xs:annotation>
																					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																				</xs:annotation>
																				<xs:complexType mixed="true"/>
																			</xs:element>
																			<xs:group ref="QtElementGroup"/>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_ADN" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>ADN Quotation type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Default Quotation data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="State" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:group ref="QtElementGroup"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:sequence>
																			<xs:element name="State" minOccurs="0">
																				<xs:annotation>
																					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																				</xs:annotation>
																				<xs:complexType mixed="true"/>
																			</xs:element>
																			<xs:group ref="QtElementGroup"/>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_ITI_PR" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Iti pr Quotation type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Default Quotation data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:complexContent>
																<xs:extension base="QuotationGenericElementType">
																	<xs:sequence>
																		<xs:element name="State" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																			</xs:annotation>
																			<xs:complexType mixed="true"/>
																		</xs:element>
																	</xs:sequence>
																</xs:extension>
															</xs:complexContent>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:complexContent>
																			<xs:extension base="QuotationGenericElementType">
																				<xs:sequence>
																					<xs:element name="State" minOccurs="0">
																						<xs:annotation>
																							<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																						</xs:annotation>
																						<xs:complexType mixed="true"/>
																					</xs:element>
																				</xs:sequence>
																			</xs:extension>
																		</xs:complexContent>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_ITI" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Quotation Itinerary Type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Quotation Itinerary type</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="State" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:group ref="ItineraryPricingInfoGroup"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:sequence>
																			<xs:element name="State" minOccurs="0">
																				<xs:annotation>
																					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																				</xs:annotation>
																				<xs:complexType mixed="true"/>
																			</xs:element>
																			<xs:group ref="ItineraryPricingInfoGroup"/>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="POS" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Point of Sales element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="PointOfSaleType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Visit Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="PointOfSaleType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PNO" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Provider Note element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ProviderNoteType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Visit Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ProviderNoteType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="RF" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Received From element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ReceivedFromType">
											<xs:annotation>
												<xs:documentation>DataContainer for RF element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ReceivedFromType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="AP" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Contact Address</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ContactGroupType">
											<xs:annotation>
												<xs:documentation>DataContainer for AP/APN/APE element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ContactGroupType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="AB" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Billing Address</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ContactGroupType">
											<xs:annotation>
												<xs:documentation>DataContainer for  AB element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ContactGroupType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SSR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Special Service Request</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="SpecialServiceRequestBasicType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Special Service Requests</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="SpecialServiceRequestBasicType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="TK" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>TK Element</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="TicketingArrangementType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="TicketingArrangementType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Offer" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>All elements of Offer BFE ca n be filled in this container. There can be multiple offer Bfe's depending on the number of PNRs in a given folder</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="Rloc" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Rloc the booking belongs to. In folders, there can be many rlocs, so it is useful to group bookings by rloc</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="PRP" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Proposal is a part of OFR bfe, which is linked to one or more offers - not required for V1</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="OFF" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Offer elemets present in  the OFR bfe will be filled here</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="OfferType">
											<xs:annotation>
												<xs:documentation>Data Container for Offers - TBD once the XSD of offer is committed</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="OfferType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="AIR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Air</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_AirType">
											<xs:annotation>
												<xs:documentation>DataContainer for Traditional Air Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_AirType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="APA" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Apartment element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ApartmentType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Apartment element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ApartmentType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ATM" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Activity misc element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ActivityMiscellaneousType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Activity Misc element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ActivityMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="BIK" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Bike element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_BikeType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Bike element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_BikeType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="CAB" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Taxi element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_TaxiType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Taxi Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_TaxiType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="CCR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>PNR Legacy Car element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_CarType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Car Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_CarType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="COA" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Coach element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_CoachType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Coach element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_CoachType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="DCM" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Documentation element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_DocumentationType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Documentation element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_DocumentationType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EAI" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Air can be used for both Air segments and extended air since both have similar structures</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_AirType">
											<xs:annotation>
												<xs:documentation>DataContainer for ETR Air</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_AirType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EAT" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Eat and Dring element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_EatAndDrinkMiscellaneousType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended eat and drink element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_EatAndDrinkMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ECR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Manual Car element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_CarType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Car Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_CarType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ECU" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Cruise element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_CruiseType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Cruise Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_CruiseType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EFR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Ferry element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_FerryType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Ferry element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_FerryType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EHT" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>ETR Hotel element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_HotelType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_HotelType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EIS" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>ETR Insurance element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_InsuranceType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_InsuranceType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ESR" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ServiceType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended service</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ServiceType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EST" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_AirSeatType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended seat element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_AirSeatType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ETR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended train elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_TrainType">
											<xs:annotation>
												<xs:documentation>Data Container for Extended Train</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_TrainType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ETS" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended train elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_TrainSeatType">
											<xs:annotation>
												<xs:documentation>Data Container for Extended Train Seat</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_TrainSeatType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EXC" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Excursion element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ExcursionType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended excursion element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ExcursionType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="GOO" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Goodies element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_GoodiesType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Goodies element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_GoodiesType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="HHL" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>PNR legacy Hotel element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_HotelType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_HotelType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="LEQ" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Leisure Equipment element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_LeisureEquipmentType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Leisure Equipment element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_LeisureEquipmentType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="LCS" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Local Service element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_LocalServiceType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Local Service element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_LocalServiceType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="MOV" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Move Misc element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_MoveMiscellaneousType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Move Misc element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_MoveMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="MTG" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>ETR Meeting element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_MeetingType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_MeetingType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PKG" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Parking element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ParkingType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Parking Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ParkingType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="Referral" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Referral element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ReferralType">
											<xs:annotation>
												<xs:documentation>DataContainer for referral element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ReferralType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="RES" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Restaurant element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_RestaurantType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Restaurant element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_RestaurantType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SCE" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Service Misc element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ServiceMiscellaneousType">
											<xs:annotation>
												<xs:documentation>DataContainer for extened Service Misc element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ServiceMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SHO" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Show Event elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ShowAndEventType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Show Event Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ShowAndEventType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SLP" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>ETR Sleep Misc element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_SleepMiscellaneousType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_SleepMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SPO" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Sport Activity elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_SportActivityType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Sport Activity Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_SportActivityType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="TRA" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Transfer elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_TransferType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Transfer Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_TransferType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="UTP" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Urban Transportation elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_UrbanTransportationType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Urban Transportation Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_UrbanTransportationType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="VAC" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Vaccine elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_VaccineType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Vaccine Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_VaccineType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="VSA" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Visa elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_VisaType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Visa Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_VisaType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="VIS" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Visit elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_VisitType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Visit Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_VisitType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="QT" minOccurs="0">
								<xs:annotation>
									<xs:documentation>All quotations will come under this element. Please not that there can be many sub types of quotation</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="QT_EXT_PR" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Extended Pricing Record Quotation</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Default Quotation data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:complexContent>
																<xs:extension base="QuotationGenericElementType">
																	<xs:sequence>
																		<xs:element name="State" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																			</xs:annotation>
																			<xs:complexType mixed="true"/>
																		</xs:element>
																	</xs:sequence>
																</xs:extension>
															</xs:complexContent>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:complexContent>
																			<xs:extension base="QuotationGenericElementType">
																				<xs:sequence>
																					<xs:element name="State" minOccurs="0">
																						<xs:annotation>
																							<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																						</xs:annotation>
																						<xs:complexType mixed="true"/>
																					</xs:element>
																				</xs:sequence>
																			</xs:extension>
																		</xs:complexContent>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_PCK" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Pck Quotation type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Default Quotation data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:complexContent>
																<xs:extension base="QuotationGenericElementType">
																	<xs:sequence>
																		<xs:element name="State" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																			</xs:annotation>
																			<xs:complexType mixed="true"/>
																		</xs:element>
																	</xs:sequence>
																</xs:extension>
															</xs:complexContent>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:complexContent>
																			<xs:extension base="QuotationGenericElementType">
																				<xs:sequence>
																					<xs:element name="State" minOccurs="0">
																						<xs:annotation>
																							<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																						</xs:annotation>
																						<xs:complexType mixed="true"/>
																					</xs:element>
																				</xs:sequence>
																			</xs:extension>
																		</xs:complexContent>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_MRK" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Mrk Quotation type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Default Quotation data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:complexContent>
																<xs:extension base="QuotationGenericElementType">
																	<xs:sequence>
																		<xs:element name="State" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																			</xs:annotation>
																			<xs:complexType mixed="true"/>
																		</xs:element>
																	</xs:sequence>
																</xs:extension>
															</xs:complexContent>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:complexContent>
																			<xs:extension base="QuotationGenericElementType">
																				<xs:sequence>
																					<xs:element name="State" minOccurs="0">
																						<xs:annotation>
																							<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																						</xs:annotation>
																						<xs:complexType mixed="true"/>
																					</xs:element>
																				</xs:sequence>
																			</xs:extension>
																		</xs:complexContent>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_FAR_COM" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Qutotation Fare component type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data" type="QtFareComponentType">
														<xs:annotation>
															<xs:documentation>Quotation fare component type data</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data" type="QtFareComponentType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_ITI_CPN" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Quotation Itinerary coupon type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Quotation coupon type data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:complexContent>
																<xs:extension base="QuotationGenericElementType">
																	<xs:sequence>
																		<xs:element name="State" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																			</xs:annotation>
																			<xs:complexType mixed="true"/>
																		</xs:element>
																		<xs:group ref="CouponPricingInfoGroup"/>
																	</xs:sequence>
																</xs:extension>
															</xs:complexContent>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:complexContent>
																			<xs:extension base="QuotationGenericElementType">
																				<xs:sequence>
																					<xs:element name="State" minOccurs="0">
																						<xs:annotation>
																							<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																						</xs:annotation>
																						<xs:complexType mixed="true"/>
																					</xs:element>
																					<xs:group ref="CouponPricingInfoGroup"/>
																				</xs:sequence>
																			</xs:extension>
																		</xs:complexContent>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_OCF" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Quotation  OC Fees Type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data" type="QtOCFeesType">
														<xs:annotation>
															<xs:documentation>Quotation OC Fees type data</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data" type="QtOCFeesType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_SRV_COM" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Quotation Service Component Type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data" type="QtServiceComponentType">
														<xs:annotation>
															<xs:documentation>Quotation OC Fees type data</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data" type="QtServiceComponentType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_ITI_SRV" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Quotation Itinerary Service Type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data" type="QtItineraryServiceType">
														<xs:annotation>
															<xs:documentation>Quotation Itinerary Service type</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data" type="QtItineraryServiceType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_ITI_USE" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Quotation Used Product type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data" type="QtUsedProductType">
														<xs:annotation>
															<xs:documentation>Quotation Used product type data</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data" type="QtUsedProductType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_DEFAULT" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Default Quotation type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Default Quotation data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="State" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:group ref="QtElementGroup"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:sequence>
																			<xs:element name="State" minOccurs="0">
																				<xs:annotation>
																					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																				</xs:annotation>
																				<xs:complexType mixed="true"/>
																			</xs:element>
																			<xs:group ref="QtElementGroup"/>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_REF" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Ref Quotation type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Default Quotation data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="State" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:group ref="QtElementGroup"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:sequence>
																			<xs:element name="State" minOccurs="0">
																				<xs:annotation>
																					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																				</xs:annotation>
																				<xs:complexType mixed="true"/>
																			</xs:element>
																			<xs:group ref="QtElementGroup"/>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_ADN" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>ADN Quotation type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Default Quotation data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="State" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:group ref="QtElementGroup"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:sequence>
																			<xs:element name="State" minOccurs="0">
																				<xs:annotation>
																					<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																				</xs:annotation>
																				<xs:complexType mixed="true"/>
																			</xs:element>
																			<xs:group ref="QtElementGroup"/>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_ITI_PR" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Iti pr Quotation type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Default Quotation data</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:complexContent>
																<xs:extension base="QuotationGenericElementType">
																	<xs:sequence>
																		<xs:element name="State" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																			</xs:annotation>
																			<xs:complexType mixed="true"/>
																		</xs:element>
																	</xs:sequence>
																</xs:extension>
															</xs:complexContent>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:complexContent>
																			<xs:extension base="QuotationGenericElementType">
																				<xs:sequence>
																					<xs:element name="State" minOccurs="0">
																						<xs:annotation>
																							<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																						</xs:annotation>
																						<xs:complexType mixed="true"/>
																					</xs:element>
																				</xs:sequence>
																			</xs:extension>
																		</xs:complexContent>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="QT_ITI" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Quotation Itinerary Type</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data">
														<xs:annotation>
															<xs:documentation>Quotation Itinerary type</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true">
															<xs:complexContent>
																<xs:extension base="QuotationGenericElementType">
																	<xs:sequence>
																		<xs:element name="State" minOccurs="0">
																			<xs:annotation>
																				<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																			</xs:annotation>
																			<xs:complexType mixed="true"/>
																		</xs:element>
																	</xs:sequence>
																</xs:extension>
															</xs:complexContent>
														</xs:complexType>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data">
																	<xs:complexType mixed="true">
																		<xs:complexContent>
																			<xs:extension base="QuotationGenericElementType">
																				<xs:sequence>
																					<xs:element name="State" minOccurs="0">
																						<xs:annotation>
																							<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
																						</xs:annotation>
																						<xs:complexType mixed="true"/>
																					</xs:element>
																				</xs:sequence>
																			</xs:extension>
																		</xs:complexContent>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SSR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Special Service Request</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="SpecialServiceRequestBasicType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Special Service Requests</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="SpecialServiceRequestBasicType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="TravelRequests" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="Rloc" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Rloc the booking belongs to. In folders, there can be many rlocs, so it is useful to group bookings by rloc</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TRQ" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Travel Request element</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="TravelRequestType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="TravelRequestType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SRQ" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Travel Request element</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="SpecializationRequestType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="SpecializationRequestType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="APA" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Apartment element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ApartmentType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Apartment element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ApartmentType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ATM" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Activity misc element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ActivityMiscellaneousType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Activity Misc element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ActivityMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="BIK" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Bike element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_BikeType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Bike element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_BikeType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="CAB" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Taxi element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_TaxiType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Taxi Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_TaxiType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="COA" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Coach element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_CoachType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Coach element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_CoachType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="DCM" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Documentation element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_DocumentationType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Documentation element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_DocumentationType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EAI" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>ETR Air</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_AirType">
											<xs:annotation>
												<xs:documentation>DataContainer for ETR Air</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_AirType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EAT" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Eat and Dring element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_EatAndDrinkMiscellaneousType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended eat and drink element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_EatAndDrinkMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ECR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Manual Car element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_CarType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Car Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_CarType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ECU" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Cruise element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_CruiseType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Cruise Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_CruiseType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EFR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Ferry element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_FerryType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Ferry element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_FerryType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EHT" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>ETR Hotel element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_HotelType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_HotelType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EIS" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Insurance</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, ... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="Data" type="ETR_InsuranceType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Cruise Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_InsuranceType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ESR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended service content</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ServiceType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended service</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ServiceType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EST" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Exteded Seat content</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_AirSeatType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended seat element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_AirSeatType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ETR" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended train elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_TrainType">
											<xs:annotation>
												<xs:documentation>Data Container for Extended Train</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_TrainType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="ETS" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended train elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_TrainSeatType">
											<xs:annotation>
												<xs:documentation>Data Container for Extended Train Seat</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_TrainSeatType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EXC" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Excursion element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ExcursionType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended excursion element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ExcursionType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="GOO" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Goodies element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_GoodiesType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Goodies element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_GoodiesType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="LEQ" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Leisure Equipment element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_LeisureEquipmentType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Leisure Equipment element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_LeisureEquipmentType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="LCS" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Local Service element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_LocalServiceType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Local Service element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_LocalServiceType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="MOV" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Move Misc element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_MoveMiscellaneousType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Move Misc element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_MoveMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="MTG" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>ETR Meeting element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_MeetingType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_MeetingType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PKG" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Parking element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ParkingType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Parking Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ParkingType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="RES" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Restaurant element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_RestaurantType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Restaurant element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_RestaurantType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SCE" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Service Misc element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ServiceMiscellaneousType">
											<xs:annotation>
												<xs:documentation>DataContainer for extened Service Misc element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ServiceMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SHO" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Show Event element data continer</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_ShowAndEventType">
											<xs:annotation>
												<xs:documentation>DataContainer for extended Show Event element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_ShowAndEventType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SLP" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>ETR Sleep Misc element data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_SleepMiscellaneousType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_SleepMiscellaneousType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="SPO" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Sport Activity elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_SportActivityType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Sport Activity Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_SportActivityType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="TRA" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Transfer elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_TransferType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Transfer Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_TransferType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="UTP" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Urban Transportation elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_UrbanTransportationType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Urban Transportation Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_UrbanTransportationType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="VAC" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Vaccine elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_VaccineType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Vaccine Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_VaccineType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="VSA" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Visa elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_VisaType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Visa Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_VisaType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="VIS" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Extended Visit elements data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="ETR_VisitType">
											<xs:annotation>
												<xs:documentation>DataContainer for  Extended Visit Element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="ETR_VisitType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Sales" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="Rloc" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Rloc the booking belongs to. In folders, there can be many rlocs, so it is useful to group bookings by rloc</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="FIE" minOccurs="0">
								<xs:annotation>
									<xs:documentation>All FIE SBM type element will come under this element. Please not that there can be many sub types of FI element (FIE)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="FIE_PRD" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Financial Item in the data container</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data" type="TTR_FinancialItemProductQtSalesType">
														<xs:annotation>
															<xs:documentation>DataContainer for financial item</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data" type="TTR_FinancialItemProductQtSalesType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="FIE_MIS" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Financial Item for MISC item in the data container</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data" type="TTR_FinancialMiscQtSalesType">
														<xs:annotation>
															<xs:documentation>DataContainer for financial item</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data" type="TTR_FinancialMiscQtSalesType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="FIE_PAK" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Financial Item package element in the data container</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="legacyLinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="TID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ID" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="TIDlinks" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ediType" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="status" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="action" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="xPath" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="Data" type="TTR_FinancialItemPackageQtSalesType">
														<xs:annotation>
															<xs:documentation>DataContainer for financial item package element</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="historyData">
														<xs:complexType mixed="true">
															<xs:sequence>
																<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>EnvelopeNumber</xs:documentation>
																	</xs:annotation>
																</xs:element>
																<xs:element name="links" minOccurs="0">
																	<xs:annotation>
																		<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
																	</xs:annotation>
																	<xs:complexType mixed="true"/>
																</xs:element>
																<xs:element name="Data" type="TTR_FinancialItemPackageQtSalesType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="FGI" minOccurs="0" maxOccurs="99">
								<xs:annotation>
									<xs:documentation>All FGI SBM element will come under this element - similar to TripInfo element</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="TripSummaryType">
											<xs:annotation>
												<xs:documentation>DataContainer for TripSummary element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="TripSummaryType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="MEP" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Method of payment element in the data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="FOP_MethodOfPaymentType">
											<xs:annotation>
												<xs:documentation>DataContainer for financial item package element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="FOP_MethodOfPaymentType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PAI" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Payment Item element in the data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="PaymentItemType">
											<xs:annotation>
												<xs:documentation>DataContainer for financial item package element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="PaymentItemType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="PAG" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Payment group element in the data container</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="PaymentGroupType">
											<xs:annotation>
												<xs:documentation>DataContainer for financial item package element</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="PaymentGroupType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Remarks" minOccurs="0" maxOccurs="unbounded">
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="Rloc" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Rloc the booking belongs to. In folders, there can be many rlocs, so it is useful to group bookings by rloc</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="RM" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType mixed="true">
									<xs:sequence>
										<xs:element name="links" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="legacyLinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="TID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ID" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="TIDlinks" minOccurs="0">
											<xs:annotation>
												<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ediType" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="status" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="action" minOccurs="0">
											<xs:annotation>
												<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
											</xs:annotation>
											<xs:complexType mixed="true"/>
										</xs:element>
										<xs:element name="xPath" type="xs:string" minOccurs="0">
											<xs:annotation>
												<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Data" type="RemarksType"/>
										<xs:element name="historyData">
											<xs:complexType mixed="true">
												<xs:sequence>
													<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
														<xs:annotation>
															<xs:documentation>EnvelopeNumber</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="links" minOccurs="0">
														<xs:annotation>
															<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
														</xs:annotation>
														<xs:complexType mixed="true"/>
													</xs:element>
													<xs:element name="Data" type="RemarksType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="TTR_FinancialItemProductQtSalesType" mixed="true">
		<xs:complexContent>
			<xs:extension base="TTR_FinancialItemProductType">
				<xs:sequence>
					<xs:element name="QT_SALES">
						<xs:complexType mixed="true">
							<xs:complexContent>
								<xs:extension base="PriceStructureType">
									<xs:sequence>
										<xs:element name="TID" type="xs:string" minOccurs="0"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TTR_FinancialMiscQtSalesType" mixed="true">
		<xs:complexContent>
			<xs:extension base="TTR_FinancialMiscType">
				<xs:sequence>
					<xs:element name="QT_SALES">
						<xs:complexType mixed="true">
							<xs:complexContent>
								<xs:extension base="PriceStructureType">
									<xs:sequence>
										<xs:element name="TID" type="xs:string" minOccurs="0"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TTR_FinancialItemPackageQtSalesType" mixed="true">
		<xs:complexContent>
			<xs:extension base="TTR_FinancialItemPackageType">
				<xs:sequence>
					<xs:element name="QT_SALES">
						<xs:complexType mixed="true">
							<xs:complexContent>
								<xs:extension base="PriceStructureType">
									<xs:sequence>
										<xs:element name="TID" type="xs:string" minOccurs="0"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Dispatch group -->
	<xs:complexType name="DispatchGroup" mixed="true">
		<xs:sequence>
			<xs:element name="path" type="xs:string" maxOccurs="9999"/>
			<xs:element name="status" type="ProcessingStatus"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProcessingStatus" mixed="true"/>
	<!-- Sipmple property (non-recursive)-->
	<xs:complexType name="SimpleProperty" mixed="true">
		<xs:sequence>
			<xs:element name="code" type="xs:string"/>
			<xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<!-- Rule container -->
	<xs:complexType name="Rule" mixed="true">
		<xs:sequence>
			<xs:element name="id" type="xs:string"/>
			<xs:element name="property" type="SimpleProperty" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConnectivityLayerBomType" mixed="true">
		<xs:sequence>
			<xs:element name="Requests" maxOccurs="100">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Request" type="ConnectivityLayerRequestType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConnectivityLayerRequestType" mixed="true">
		<xs:sequence>
			<xs:element name="target" type="xs:string"/>
			<xs:element name="id" type="xs:string"/>
			<xs:element name="action" type="xs:string"/>
			<xs:element name="property" type="KeyValuePropertyType" minOccurs="0" maxOccurs="199"/>
			<xs:element name="set" type="setInternalType" minOccurs="1" maxOccurs="99"/>
			<xs:element name="actor" minOccurs="0" maxOccurs="198">
				<xs:complexType mixed="true">
					<xs:complexContent>
						<xs:extension base="TTR_ActorType">
							<xs:sequence>
								<xs:element name="ID" type="xs:NMTOKEN" minOccurs="0">
									<xs:annotation>
										<xs:documentation source="Temporary ID, just for association purpose during the element addition."/>
									</xs:annotation>
								</xs:element>
								<xs:element name="TID" type="xs:ID" minOccurs="0">
									<xs:annotation>
										<xs:documentation source="Temporary ID, just for association purpose during the element addition."/>
									</xs:annotation>
								</xs:element>
								<xs:element name="RefIDs" type="ReferenceListType" minOccurs="0">
									<xs:annotation>
										<xs:documentation source="Simple space separated list of UUIDs that this element is linked to."/>
									</xs:annotation>
								</xs:element>
								<xs:element name="RefTIDs" type="xs:IDREFS" minOccurs="0">
									<xs:annotation>
										<xs:documentation source="Simple space separated list of TIDs that this element is linked to."/>
									</xs:annotation>
								</xs:element>
								<xs:element name="additionalIdentityInfo" minOccurs="0" maxOccurs="unbounded">
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:element name="key" type="xs:string"/>
											<xs:element name="value" type="xs:string"/>
											<xs:element name="type" type="xs:string" minOccurs="0"/>
											<xs:element name="code" type="xs:string" minOccurs="0"/>
											<xs:element name="status" type="xs:string" minOccurs="0"/>
											<xs:element name="number" type="xs:string" minOccurs="0"/>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
								<xs:element name="FOID" minOccurs="0">
									<xs:complexType mixed="true">
										<xs:sequence>
											<xs:element name="value" type="xs:string"/>
										</xs:sequence>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="BLB" type="xs:base64Binary" minOccurs="0"/>
			<xs:element name="Context" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="correlationID" type="xs:string" minOccurs="0"/>
						<xs:element name="algorithmType" type="xs:string" minOccurs="0"/>
						<xs:element name="timeDataAggregator" type="xs:string" minOccurs="0"/>
						<xs:element name="Retailer" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="code" type="xs:string" minOccurs="0"/>
									<xs:element name="name" type="xs:string" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="UseCases" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="UseCase" type="xs:string" minOccurs="0" maxOccurs="99"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="Remark" minOccurs="0" maxOccurs="1">
							<xs:annotation>
								<xs:documentation>Involuntary change remark for AFKL</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="RemarkText" type="xs:string" minOccurs="0" maxOccurs="1"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="OfficeID" type="xs:string" minOccurs="0"/>
						<xs:element name="IATANumber" type="xs:string" minOccurs="0"/>
						<xs:element name="TravelShopper" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="globalID" type="xs:string" minOccurs="0"/>
									<xs:element name="code" type="xs:string" minOccurs="0"/>
									<xs:element name="name" type="xs:string" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="bookingSourceInfo" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="rloc" minOccurs="0">
							<xs:complexType mixed="true"/>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ExpectedRefundAmount" minOccurs="0">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Value" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="Amount" type="Money" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">A monetary amount.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="CurrencyCode" type="AlphaLength3" minOccurs="0">
										<xs:annotation>
											<xs:documentation xml:lang="en">The code specifying a monetary unit. Use ISO 4217, three alpha code.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="error" type="ama_ErrorType" minOccurs="0"/>
			<xs:element name="warnings" type="ama_WarningType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="TravelAgency" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Travel Agency address</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="IATA_Number" type="NumericStringLength1to16" minOccurs="0" maxOccurs="1"/>
						<xs:element name="AgencyID" type="AlphaNumericStringLength1to32" minOccurs="0" maxOccurs="1"/>
						<xs:element name="Name" type="AlphaNumericStringLength1to32" minOccurs="1" maxOccurs="1"/>
						<xs:element name="Contact" minOccurs="0">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="Address" minOccurs="0" maxOccurs="unbounded">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="line" type="AlphaNumericStringLength1to70" minOccurs="0" maxOccurs="2"/>
												<xs:element name="CityName" type="StringLength1to35" minOccurs="0" maxOccurs="1"/>
												<xs:element name="Zip" type="AlphaNumericStringLength1to17" minOccurs="0" maxOccurs="1"/>
												<xs:element name="CountryCode" type="AlphaLength2" minOccurs="0" maxOccurs="1"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Email" minOccurs="0" maxOccurs="unbounded">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="EmailAddress" type="AlphaNumericStringLength1to256" minOccurs="0" maxOccurs="1"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="Phone" minOccurs="0" maxOccurs="unbounded">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="PhoneNumber" type="etr_StringLength1to20" minOccurs="0"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- Internal Type -->
	<xs:complexType name="setInternalType" mixed="true">
		<xs:sequence>
			<xs:element name="ID" type="xs:NMTOKEN" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="Temporary ID, just for association purpose during the element addition."/>
				</xs:annotation>
			</xs:element>
			<xs:element name="TID" type="xs:ID" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="Temporary ID, just for association purpose during the element addition."/>
				</xs:annotation>
			</xs:element>
			<xs:element name="RefIDs" type="ReferenceListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="Simple space separated list of UUIDs that this element is linked to."/>
				</xs:annotation>
			</xs:element>
			<xs:element name="RefTIDs" type="xs:IDREFS" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="Simple space separated list of TIDs that this element is linked to."/>
				</xs:annotation>
			</xs:element>
			<xs:element name="action" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="product" type="productInternalType" minOccurs="1" maxOccurs="99"/>
			<xs:element name="ExternalContext" type="ExternalContextInternalType" minOccurs="0" maxOccurs="99"/>
			<xs:element name="quotation" type="QtElementInternalType" minOccurs="0" maxOccurs="198"/>
			<xs:element name="formOfPayment" type="FPInternalType" minOccurs="0" maxOccurs="198"/>
			<xs:element name="property" type="KeyValuePropertyType" minOccurs="0" maxOccurs="9999"/>
			<xs:element name="error" type="errorInternalType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="contract" minOccurs="0" maxOccurs="99">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:group ref="ReferenceGroup"/>
						<xs:element name="ContractNumber" type="xs:string">
							<xs:annotation>
								<xs:documentation>The contract identifier returned by the provider</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PrimaryContractInd" type="xs:string">
							<xs:annotation>
								<xs:documentation>To check whether the contract is primary</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="NumberOfContracts" type="xs:string">
							<xs:annotation>
								<xs:documentation>No of contracts for conjunctive tickets</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Type" type="IATA_CodeType">
							<xs:annotation>
								<xs:documentation>The contract type returned by the provider</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Timestamp" type="xs:string">
							<xs:annotation>
								<xs:documentation>The contract identifier returned by the provider</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="IssuingAirlineName" type="xs:string">
							<xs:annotation>
								<xs:documentation>The contract identifier returned by the provider</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="associatedContracts" minOccurs="0" maxOccurs="99">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:group ref="ReferenceGroup"/>
									<xs:element name="ContractNumber" type="xs:string">
										<xs:annotation>
											<xs:documentation>The contract identifier linked to the current contract being emitted which returned by the provider. Example: When issuing an EMD, we need to have the associated TKT number that is stored in the ICW (In Connection With)</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="SettlementAuthCode" type="xs:string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The contract identifer is linked to Settlement auth code returned by the  provider. while void/refund the ticket we need to have this field </xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="ContractElements" type="xs:string" minOccurs="0" maxOccurs="99">
										<xs:annotation>
											<xs:documentation>Specify the element(s) of the contract which is/are concerned. Example: In AIR usecase, we are getting the Coupon Index from the TKT number which is concerned by the EMD.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="InConnectionContractElements" type="xs:string" minOccurs="0" maxOccurs="99">
										<xs:annotation>
											<xs:documentation>Specify the element(s) of the contract which is/are concerned. Example: In AIR usecase, we are getting the Coupon Index from the TKT number which is concerned by the EMD.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="reasonforIssuance" minOccurs="0" maxOccurs="1">
										<xs:complexType mixed="true">
											<xs:sequence>
												<xs:element name="Code" type="xs:string">
													<xs:annotation>
														<xs:documentation>The contract identifier linked to the current contract being emitted which returned by the provider. Example: When issuing an EMD, we need to have the associated TKT number that is stored in the ICW (In Connection With)</xs:documentation>
													</xs:annotation>
												</xs:element>
												<xs:element name="SubCode" type="xs:string">
													<xs:annotation>
														<xs:documentation>The contract identifer is linked to Settlement auth code returned by the  provider. while void/refund the ticket we need to have this field </xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="ReportingType" type="xs:string">
							<xs:annotation>
								<xs:documentation>Reporting flag returned by the provider for reconciliation of sales made by airlines</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="RSVRReporting" type="xs:string">
							<xs:annotation>
								<xs:documentation>Reporting flag returned for reconciliation of sales for the generated RSVR made by the airline</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Endorsements" minOccurs="0" maxOccurs="999">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="Endorsement" type="xs:string" minOccurs="0"/>
						<xs:element name="links" type="xs:string" minOccurs="0"/>
						<xs:element name="reference" type="xs:string" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="timeLimit" minOccurs="0" maxOccurs="99">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:group ref="ReferenceGroup"/>
						<xs:element name="paymentTimeLimit" type="xs:string">
							<xs:annotation>
								<xs:documentation>The payment time limit returned by the provider</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="errorInternalType" mixed="true">
		<xs:complexContent>
			<xs:extension base="ama_ErrorType">
				<xs:sequence>
					<xs:element name="Text" type="xs:string" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="productInternalType" mixed="true">
		<xs:sequence>
			<xs:element name="ID" type="xs:NMTOKEN" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="Temporary ID, just for association purpose during the element addition."/>
				</xs:annotation>
			</xs:element>
			<xs:element name="TID" type="xs:ID" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="Temporary ID, just for association purpose during the element addition."/>
				</xs:annotation>
			</xs:element>
			<xs:element name="RefIDs" type="ReferenceListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="Simple space separated list of UUIDs that this element is linked to."/>
				</xs:annotation>
			</xs:element>
			<xs:element name="RefTIDs" type="xs:IDREFS" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="Simple space separated list of TIDs that this element is linked to."/>
				</xs:annotation>
			</xs:element>
			<xs:choice minOccurs="1" maxOccurs="1">
				<xs:element name="ATM" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Activity misc element data continer</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_ActivityMiscellaneousType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended Activity Misc element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="BIK" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Bike element data continer</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_BikeType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended Bike element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="CAB" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Taxi element data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_TaxiType">
								<xs:annotation>
									<xs:documentation>DataContainer for  Extended Taxi Element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="COA" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Coach element data continer</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_CoachType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended Coach element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="DCM" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Documentation element data continer</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_DocumentationType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended Documentation element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="EAI" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>ETR Air</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_AirType">
								<xs:annotation>
									<xs:documentation>DataContainer for ETR Air</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="EAT" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Eat and Dring element data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_EatAndDrinkMiscellaneousType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended eat and drink element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="ECR" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Manual Car element data continer</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_CarType">
								<xs:annotation>
									<xs:documentation>DataContainer for  Extended Car Element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="ECU" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Cruise element data continer</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_CruiseType">
								<xs:annotation>
									<xs:documentation>DataContainer for  Extended Cruise Element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="EFR" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Ferry element data continer</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_FerryType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended Ferry element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="EHT" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>ETR Hotel element data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_HotelType"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="ESR" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Extended service content</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_ServiceType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended service</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="EST" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Exteded Seat content</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_AirSeatType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended seat element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="ETR" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Extended train elements data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_TrainType">
								<xs:annotation>
									<xs:documentation>Data Container for Extended Train</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="ETS" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Extended train elements data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_TrainSeatType">
								<xs:annotation>
									<xs:documentation>Data Container for Extended Train Seat</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="EXC" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Excursion element data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_ExcursionType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended excursion element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="GOO" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Goodies element data continer</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_GoodiesType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended Goodies element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="LEQ" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Leisure Equipment element data continer</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_LeisureEquipmentType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended Leisure Equipment element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="LCS" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Local Service element data continer</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_LocalServiceType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended Local Service element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="MOV" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Move Misc element data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_MoveMiscellaneousType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended Move Misc element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="MTG" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>ETR Meeting element data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_MeetingType"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="PKG" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Parking element data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_ParkingType">
								<xs:annotation>
									<xs:documentation>DataContainer for  Extended Parking Element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="RES" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Restaurant element data continer</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_RestaurantType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended Restaurant element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="SCE" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Service Misc element data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_ServiceMiscellaneousType">
								<xs:annotation>
									<xs:documentation>DataContainer for extened Service Misc element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="SHO" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Show Event element data continer</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_ShowAndEventType">
								<xs:annotation>
									<xs:documentation>DataContainer for extended Show Event element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="SLP" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>ETR Sleep Misc element data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_SleepMiscellaneousType"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="SPO" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Extended Sport Activity elements data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_SportActivityType">
								<xs:annotation>
									<xs:documentation>DataContainer for  Extended Sport Activity Element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="TRA" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Extended Transfer elements data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_TransferType">
								<xs:annotation>
									<xs:documentation>DataContainer for  Extended Transfer Element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="UTP" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Extended Urban Transportation elements data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_UrbanTransportationType">
								<xs:annotation>
									<xs:documentation>DataContainer for  Extended Urban Transportation Element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="VAC" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Extended Vaccine elements data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_VaccineType">
								<xs:annotation>
									<xs:documentation>DataContainer for  Extended Vaccine Element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="VSA" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Extended Visa elements data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_VisaType">
								<xs:annotation>
									<xs:documentation>DataContainer for  Extended Visa Element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="VIS" minOccurs="0" maxOccurs="9999">
					<xs:annotation>
						<xs:documentation>Extended Visit elements data container</xs:documentation>
					</xs:annotation>
					<xs:complexType mixed="true">
						<xs:sequence>
							<xs:element name="links" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="legacyLinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="TID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ID" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="TIDlinks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="ediType" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="status" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="action" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true"/>
							</xs:element>
							<xs:element name="xPath" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Data" type="ETR_VisitType">
								<xs:annotation>
									<xs:documentation>DataContainer for  Extended Visit Element</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:element name="type" type="xs:string"/>
			<xs:element name="property" type="KeyValuePropertyType" minOccurs="0" maxOccurs="9999"/>
			<xs:element name="supplier" type="SupplierType" minOccurs="0"/>
			<xs:element name="error" type="errorInternalType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="ruleId" type="xs:string" minOccurs="0"/>
			<xs:element name="destinationRuleId" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ExternalContextInternalType" mixed="true">
		<xs:sequence>
			<xs:element name="ID" type="xs:string" minOccurs="1">
				<xs:annotation>
					<xs:documentation source="Temporary ID, just for association purpose during the element addition."/>
				</xs:annotation>
			</xs:element>
			<xs:element name="reference" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="OrderItemID to which, node ExternalContextType is referring to"/>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="Type of data to which, node ExternalContextType is referring to"/>
				</xs:annotation>
			</xs:element>
			<xs:element name="links" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="Passennger Reference"/>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="QtElementInternalType" mixed="true">
		<xs:sequence>
			<xs:element name="links" minOccurs="0">
				<xs:annotation>
					<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="legacyLinks" minOccurs="0">
				<xs:annotation>
					<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="TID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TIDlinks" minOccurs="0">
				<xs:annotation>
					<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ediType" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="action" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="xPath" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Data">
				<xs:annotation>
					<xs:documentation>Default Quotation data</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="State" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:group ref="QtElementGroup"/>
						<xs:element name="TermsAndConditions" type="TermsAndCondtionsType" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="historyData">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>EnvelopeNumber</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Data">
							<xs:complexType mixed="true">
								<xs:sequence>
									<xs:element name="State" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Define the status: 		Current
Original
Disrupted</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true"/>
									</xs:element>
									<xs:group ref="QtElementGroup"/>
									<xs:element name="TermsAndConditions" type="TermsAndCondtionsType" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FPInternalType" mixed="true">
		<xs:sequence>
			<xs:element name="links" minOccurs="0">
				<xs:annotation>
					<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="legacyLinks" minOccurs="0">
				<xs:annotation>
					<xs:documentation>legacyLinks will contain the legacy id of the element that is linked to.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="TID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Temporary of an element in creation to identify it in a creation query</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Unique id of element that will be generated by framework</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TIDlinks" minOccurs="0">
				<xs:annotation>
					<xs:documentation>links will contain the tId of the element that is linked to (tId is used in creation message to identify an element in creation). Multiple links will be filled with spaces in between</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="tattoo" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Tattoo of the element present in the sbm</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ediType" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The edifact segment representation of the element in the PASBCQ message</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="status" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Status of this element: ACTIVE and DEAD</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="action" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Action expected for this element: Add, Update and Delete... (list to be completed)</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true"/>
			</xs:element>
			<xs:element name="xPath" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>xPath will contain the xpath of the element in the interface message</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Data" type="FPType">
				<xs:annotation>
					<xs:documentation>DataContainer for extended excursion element</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="historyData">
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="envelopeNumber" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>EnvelopeNumber</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="links" minOccurs="0">
							<xs:annotation>
								<xs:documentation>links will contain the id of the element that is linked to. Multiple links will be filled with spaces in between</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true"/>
						</xs:element>
						<xs:element name="Data" type="FPType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- KeyValuePropery -->
	<xs:complexType name="KeyValuePropertyType" mixed="true">
		<xs:annotation>
			<xs:documentation>This item is meant to carry key value properties. There's no fix codeset of key or value allowed.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="key" type="xs:NMTOKEN">
				<xs:annotation>
					<xs:documentation>Key to be used.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="value" type="xs:NMTOKEN" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value of the property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="property" type="KeyValuePropertyType" minOccurs="0" maxOccurs="9999">
				<xs:annotation>
					<xs:documentation>Sub property that defines more accurately the property</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- supplierType from LCE -->
	<xs:complexType name="SupplierType" mixed="true">
		<xs:sequence>
			<xs:element name="ref" type="ama_AlphaNumericStringLength1to6" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provides suppliers profile reference</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="name" type="ama_StringLength1to70" minOccurs="0">
				<xs:annotation>
					<xs:documentation>supplier name</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="code" type="ama_AlphaNumericStringLength1to35" minOccurs="0">
				<xs:annotation>
					<xs:documentation>supplier code</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="externalRef" type="ama_AlphaNumericStringLength1to10" minOccurs="0">
				<xs:annotation>
					<xs:documentation>External profile reference for imported profiles</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="__Dummy" mixed="true"/>
	<xs:group name="ReferenceGroup">
		<xs:sequence>
			<xs:element name="ID" type="xs:NMTOKEN" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="Temporary ID, just for association purpose during the element addition."/>
				</xs:annotation>
			</xs:element>
			<xs:element name="TID" type="xs:ID" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="Temporary ID, just for association purpose during the element addition."/>
				</xs:annotation>
			</xs:element>
			<xs:element name="RefIDs" type="ReferenceListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="Simple space separated list of UUIDs that this element is linked to."/>
				</xs:annotation>
			</xs:element>
			<xs:element name="RefTIDs" type="xs:IDREFS" minOccurs="0">
				<xs:annotation>
					<xs:documentation source="Simple space separated list of TIDs that this element is linked to."/>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
</xs:schema>
